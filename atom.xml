<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程新松博客网站safeguradEagle</title>
  <icon>https://www.gravatar.com/avatar/ef5484a6acce2d6092fa874ef42cb6d7</icon>
  <subtitle>爱好折腾的码农</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chengxinsong.cn/"/>
  <updated>2017-09-26T07:06:46.596Z</updated>
  <id>http://www.chengxinsong.cn/</id>
  
  <author>
    <name>XinsongCheng</name>
    <email>15566151641@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&#39;2017-09-16分享&#39;</title>
    <link href="http://www.chengxinsong.cn/2017-09-16.html"/>
    <id>http://www.chengxinsong.cn/2017-09-16.html</id>
    <published>2017-09-16T15:08:29.000Z</published>
    <updated>2017-09-26T07:06:46.596Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogImg/daily-17-09-09.jpg" alt="最近"></p><h4 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h4><p>今天听了一个分享，受益很多；<br>不同的阶段的人看待同一个问题是不一样的；<br>对待一个出现的问题，你应该如何去看待这个问题，为什么要做这件事情，如何去做，或得到什么结果；<br>站在矮子的肩膀上，——你可以看的更远；<br>合理安排时间；<br>勤奋的“傻子”比懒惰的聪明人更可怕；<br>相信团队<br>是否可以更好<br>列子学射的故事</p><a id="more"></a><h4 id="什么是-1-1-？"><a href="#什么是-1-1-？" class="headerlink" title="什么是 1 + 1 = ？"></a>什么是 1 + 1 = ？</h4><p>当问一个小学生，这个问题，他会很骄傲的告诉你，等于2;<br>当问一个中学生，它会觉得，这个问题太简单了，不乐意回答你；<br>当问一个高中生，会认为你是个神经病；<br>当问一个大学生呢？<br>当你问一个博士生，它会联想到人世间很多的1+1的相关问题，会长篇大论的论述起来。</p><h4 id="把大象放在冰箱里"><a href="#把大象放在冰箱里" class="headerlink" title="把大象放在冰箱里"></a>把大象放在冰箱里</h4><p>这个需要分为三步，打开冰箱，放进去，关上冰箱。<br>1、为什么要放进冰箱里？<br>2、如何去做呢？<br>可以单独做一个大的冰箱，然后把大象放在冰箱里。<br>或者把大象剁成肉泥，用盒子把它装起来放在冰箱里。<br>再或者可以把一头年幼的大象放进冰箱里，就比较容易了。<br>3、会得到一个什么结果呢？<br>这个就要回到最初的为什么要做这件事情。</p><h4 id="站在矮子的肩膀上"><a href="#站在矮子的肩膀上" class="headerlink" title="站在矮子的肩膀上"></a>站在矮子的肩膀上</h4><blockquote><p>站在矮子的肩膀上，——你可以看的更远</p></blockquote><p>其实在你身边很高大的人会比较少，大牛大神并不是想象的那么多；<br>但是你可以从你身边的同事，身边优秀的领导身上看到一种你和他不一样的地方；</p><blockquote><p>把别人的意见方法三倍，，把自己的意见缩小三倍</p></blockquote><p>看看别人的是怎么做的，对喜欢的人找缺点，对讨厌的人找优点；<br>找到优点了就应该向他学习，找到缺点就要避免自己也存在这样的缺点。</p><h4 id="合理安排时间"><a href="#合理安排时间" class="headerlink" title="合理安排时间"></a>合理安排时间</h4><p><img src="/assets/blogImg/stoneWater.png" alt="合理安排时间"><br>先安排重要的事情，再安排次要的，以此类推</p><h4 id="沟通让生活更美好"><a href="#沟通让生活更美好" class="headerlink" title="沟通让生活更美好"></a>沟通让生活更美好</h4><p><img src="/assets/blogImg/communicateLifeBetter.png" alt="沟通让生活更美好"></p><blockquote><p>勤奋的“傻子”比懒惰的聪明人更可怕</p></blockquote><h4 id="相信团队"><a href="#相信团队" class="headerlink" title="相信团队"></a>相信团队</h4><p>自己负责的模块，自己写的代码要负责。</p><h4 id="是否可以更美好"><a href="#是否可以更美好" class="headerlink" title="是否可以更美好"></a>是否可以更美好</h4><p><img src="/assets/blogImg/telunsuMilk.png" alt="是否可以更美好"><br>快速做完，达到60份；<br>剩下的时间就是在完善做的内容，达到更好</p><h4 id="列子学射"><a href="#列子学射" class="headerlink" title="列子学射"></a>列子学射</h4><p><img src="/assets/blogImg/liezixuejian.png" alt="列子学射"><br>超常情况正常发挥，才能体现自己的能力。</p><h4 id="END"><a href="#END" class="headerlink" title="END"></a>END</h4><p>多做自己工作，项目中难点，以及最后自己的解决方案总结。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogImg/daily-17-09-09.jpg&quot; alt=&quot;最近&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;最近&quot;&gt;&lt;a href=&quot;#最近&quot; class=&quot;headerlink&quot; title=&quot;最近&quot;&gt;&lt;/a&gt;最近&lt;/h4&gt;&lt;p&gt;今天听了一个分享，受益很多；&lt;br&gt;不同的阶段的人看待同一个问题是不一样的；&lt;br&gt;对待一个出现的问题，你应该如何去看待这个问题，为什么要做这件事情，如何去做，或得到什么结果；&lt;br&gt;站在矮子的肩膀上，——你可以看的更远；&lt;br&gt;合理安排时间；&lt;br&gt;勤奋的“傻子”比懒惰的聪明人更可怕；&lt;br&gt;相信团队&lt;br&gt;是否可以更好&lt;br&gt;列子学射的故事&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.chengxinsong.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂谈" scheme="http://www.chengxinsong.cn/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>css3-animater</title>
    <link href="http://www.chengxinsong.cn/css3-animater.html"/>
    <id>http://www.chengxinsong.cn/css3-animater.html</id>
    <published>2017-09-14T01:55:14.000Z</published>
    <updated>2017-09-17T02:55:22.059Z</updated>
    
    <content type="html"><![CDATA[<p>当我如是想的时候，事实上我已想了很久。后来被各种纠结的差事冲乱了生活和心绪，并且心里认为这是个妥当无比的借口。找到了借口后一拖再拖，果然认识到deadline才是第一生产力的真理。最近，却是被朋友的一句话逼急了，他跟我说：我们的业务用到了css4的新属性！</p><p>这句话的意思，大体等同于说，我买到了一个iphone X，亲你怎么看？<br><a id="more"></a><br>它在我脑中纷乱起舞，那是plans vs zombies中一大波僵尸正在逼近的场景。是的，再不行动，就要被技术的狂潮给淹没了！日前，就我的浅薄见闻，当html5越来越多的功能被应用到业务主功能上，诸如本地存储，拖拽优化，postMessage通信…css3却是另一番光景。一方面，一个个绚丽效果的css3-demo在网上被围观与叫好，大家却又在为浏览器兼容性和差异性这座大山望而却步。css3技术在大家眼中更偏向于一种优化的体验，等于说，你不敢用它来实现网站的key point，即使是一个圆角，不问技术细节的产品经理也会想使用图片来代替的。</p><p>因此，缘由可以归结为：我忍够了。要玩，就玩个大的。</p><p>其实虽然我想了很久，但这个“想”，更偏向于单纯的幻想，而不是思考。暑假的时候，在腾讯大讲堂看到有哥们分享css3与js的动画效率比较的演示，就萌生了这个想法。现在，在正式尝试编写类库之前，我想先写2~3个实验demo，来看看技术的复杂度以及一些可以避免的暗礁，并做好一些记录。当然这些demo必须得使用最新的chrome，firefox，opera以及ie8，9才能正常运行。</p><h2 id="第一个实验：人物sprite图动画实现，按键与位移的衔接"><a href="#第一个实验：人物sprite图动画实现，按键与位移的衔接" class="headerlink" title="第一个实验：人物sprite图动画实现，按键与位移的衔接"></a><strong>第一个实验：人物sprite图动画实现，按键与位移的衔接</strong></h2><p>请按键盘方向键控制人物运动： </p><iframe id="demoIframe" src="/assets/demo/pre_css3_demo/demo.html" width="641" height="483" scrolling="no"></iframe><h2 id="最深的体会"><a href="#最深的体会" class="headerlink" title="最深的体会"></a><strong>最深的体会</strong></h2><p><strong>我的js代码需要怎样“辅助”css3？</strong><br>按照我的理解，如果是说一个dom元素的“动作”的话，完全可以用纯css3来实现，而且你可以将dom的动作串连起来。<br>例如：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> q-down &#123;</div><div class="line">     0%&#123;</div><div class="line">          <span class="attribute">-webkit-transform</span>:<span class="built_in">rotate</span>(0deg);</div><div class="line">          <span class="attribute">top</span>:<span class="number">10px</span>;</div><div class="line">     &#125;</div><div class="line">     33%&#123;</div><div class="line">          <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(1.5);</div><div class="line">          <span class="attribute">top</span>:<span class="number">147px</span>;</div><div class="line">     &#125;</div><div class="line">     66%&#123;</div><div class="line">          <span class="attribute">top</span>:<span class="number">10px</span>;</div><div class="line">          <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(50px,50px);</div><div class="line">     &#125;</div><div class="line">    100% &#123;</div><div class="line">         <span class="attribute">top</span>:<span class="number">147px</span>;</div><div class="line">         <span class="attribute">-webkit-transform</span>:<span class="built_in">rotate</span>(45deg);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.box</span> &#123;</div><div class="line">    <span class="attribute">-webkit-animation</span>:q-down  ease;</div><div class="line">    <span class="attribute">-webkit-animation-duration</span>: <span class="number">2s</span>;</div><div class="line">    <span class="attribute">-webkit-animation-timing-function</span>: linear;</div><div class="line">    <span class="attribute">-webkit-transform</span>:<span class="built_in">rotate</span>(45deg);</div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: red;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">147px</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>dom元素会在0%，33%，66%，100%这些时间点上做出相应的效果响应。<br><strong>这样的动作序列还会有什么问题吗？</strong><br>在demo当中，我设置了按一下“左”键，人物向左偏移一格，按一下“下”键，人物下移一格，于是我就遇到了这样的两种情况：<br>    1、用户按下“下”，人物向下偏移动作完成后，他仍不放手，此时同时按了“左”<br>    我认为此时用户在使用“双键”，这时人物会再向左下方向都偏移一格。<br>    2、用户“几乎”同时按下“下”和“左”，由于js每次只能检测单键的keycode<br>    程序会判断用户是先按下了某个键，再使用了双键。<br>    而用户之所以“几乎”同时按下，本是希望只执行“双键”的。</p><p><img src="/assets/blogImg/css3_anm.jpg" alt="两种情况"><br>1与2的区别，其实就是双键产生时，两个按键的时间间隔的区别。时间间隔长，用户是需要1这种效果的，而时间间隔短，用户就是想只执行“双键”。但程序是固定的，无论时间间隔有多短，在它看来就是有先后，因此程序认为2和1是一样的。我在demo里，就用了时间戳的方式，而这种方式，其实是“投机取巧”的一种方式。</p><p>回到上面那个问题来，这样的纯css3动作序列有什么问题？时间的问题更深入一点我可以得到结论：<br>    那就是无法侦听一个css3动作是否已经结束。<br>如果我能够侦听动作是否正在执行，那么一切就好办了，如果前动作已完成，我就像情况1一样“先单键再双键”去操作，如果前动作未完成，我就判断用户是想只执行“双键”。</p><p>OK，js代码就是要像jquery的animate方法一样，构造一个动作的队列，存放用户积累下来的动作，并作好回调判断。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我如是想的时候，事实上我已想了很久。后来被各种纠结的差事冲乱了生活和心绪，并且心里认为这是个妥当无比的借口。找到了借口后一拖再拖，果然认识到deadline才是第一生产力的真理。最近，却是被朋友的一句话逼急了，他跟我说：我们的业务用到了css4的新属性！&lt;/p&gt;
&lt;p&gt;这句话的意思，大体等同于说，我买到了一个iphone X，亲你怎么看？&lt;br&gt;
    
    </summary>
    
    
      <category term="css3" scheme="http://www.chengxinsong.cn/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>&#39;2017-09-12杂谈&#39;</title>
    <link href="http://www.chengxinsong.cn/2017-09-12.html"/>
    <id>http://www.chengxinsong.cn/2017-09-12.html</id>
    <published>2017-09-12T14:38:29.000Z</published>
    <updated>2017-09-17T02:55:16.160Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogImg/diary-9.jpg" alt="最近"></p><h4 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h4><p>最近家里事情较多，在博客上花费时间在减少。<br>而且工作中的项目，自己一直在忙着在修改bug。<br>同时，相信人的一生要幸福的生活着。</p><p>人只有不断的拼搏，不断的挑战，才能开心的活着？<br>对父母好点，让他们好好享福<br>多一点微笑，多一点主动<br>工作和生活才会更加美好</p><p>每天如果养成好的习惯，<br>起来喝杯凉白开，做做俯卧撑，<br>吃个丰盛的早餐，收拾收拾准备，今天有可以把那个不能解决的bug修复，<br>挑战最近项目不能解决的问题。</p><p>坚信努力拼搏会有回报。好多需要总结的东西都没有写。</p><a id="more"></a><h4 id="身体是最重要"><a href="#身体是最重要" class="headerlink" title="身体是最重要"></a>身体是最重要</h4><p>以后每个月都要回家看看爸爸妈妈，<br>我在长大，他们在老去<br>让他们好好享福</p><p>把我养大不容易，<br>只希望他们少点疾病痛苦。<br>带着他们养生，注意饮食，开心快乐的生活。</p><p>我每次回家他们会很开心，所以要多回家…<br>实现对他们的承诺，带他们想去玩的地方看看，带他们出去看看外边的世界。</p><h4 id="失眠"><a href="#失眠" class="headerlink" title="失眠"></a>失眠</h4><p>最近摘抄一些笔记，偶然遇到一句诗，感觉很奇妙，眼前一亮的感觉。</p><blockquote><p>危栏倚遍都无寐，只恐星河堕入楼。 ——《秋夕楼居》吴融</p></blockquote><p>这周依然失眠，<br>反正改变不了的事情，该怎么样就怎么样呗，<br>只不过同是失眠，别人的境界就是比我的高<br>我在想的都是些什么玩意？</p><h4 id="END"><a href="#END" class="headerlink" title="END"></a>END</h4><p>希望一切会慢慢变好，变成自己想要的样子。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogImg/diary-9.jpg&quot; alt=&quot;最近&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;最近&quot;&gt;&lt;a href=&quot;#最近&quot; class=&quot;headerlink&quot; title=&quot;最近&quot;&gt;&lt;/a&gt;最近&lt;/h4&gt;&lt;p&gt;最近家里事情较多，在博客上花费时间在减少。&lt;br&gt;而且工作中的项目，自己一直在忙着在修改bug。&lt;br&gt;同时，相信人的一生要幸福的生活着。&lt;/p&gt;
&lt;p&gt;人只有不断的拼搏，不断的挑战，才能开心的活着？&lt;br&gt;对父母好点，让他们好好享福&lt;br&gt;多一点微笑，多一点主动&lt;br&gt;工作和生活才会更加美好&lt;/p&gt;
&lt;p&gt;每天如果养成好的习惯，&lt;br&gt;起来喝杯凉白开，做做俯卧撑，&lt;br&gt;吃个丰盛的早餐，收拾收拾准备，今天有可以把那个不能解决的bug修复，&lt;br&gt;挑战最近项目不能解决的问题。&lt;/p&gt;
&lt;p&gt;坚信努力拼搏会有回报。好多需要总结的东西都没有写。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.chengxinsong.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂谈" scheme="http://www.chengxinsong.cn/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>&#39;webworker简易入门&#39;</title>
    <link href="http://www.chengxinsong.cn/webworker.html"/>
    <id>http://www.chengxinsong.cn/webworker.html</id>
    <published>2017-09-09T07:21:09.000Z</published>
    <updated>2017-09-09T07:48:52.773Z</updated>
    
    <content type="html"><![CDATA[<p>js是单线程的语言，由于此特性，我们在处理并发时需要用到一些技巧，如setTimeout()，setInterval()，调用XMLHttpRequest等。<br>但这里的并发只是非阻塞（参照John Resig的文章<a href="http://ejohn.org/blog/how-javascript-timers-work/" target="_blank" rel="external">How JavaScript Timers Work</a>），真正的多线程编程则需要HTML5的web worker。</p><p><img src="/assets/blogImg/web_worker1.png" alt=""> </p><a id="more"></a><p>###<strong>【worker的使用】</strong><br>web worker的使用非常简单，线程之间通讯的api与html5 postmessage或node.js里面的socket.io方法类似。</p><p>通讯：      </p><ol><li>发送方：postMessage(data)      </li><li>接收方：onmessage(event)</li></ol><p>终止web worker:        </p><ol><li>子线程: self.close()</li><li>父线程: worker.terminate()</li></ol><p>按照目前w3c规范，web worker分为两种：专用worker(Dedicated Worker)和共享worker(Shared Worker)。</p><p>###<strong>【专用worker】</strong><br>实例化一个web worker对象，异步加载子线程文件worker.js，其中的代码将执行。</p><pre><code>var worker = new Worker(&quot;worker.js&quot;);</code></pre><p>给worker增加侦听</p><pre><code>worker.onmessage = function (event) {    alert(event.data);};</code></pre><p>在worker.js里，发送消息给父线程     </p><pre><code>postMessage(&apos;hello，imweb&apos;);</code></pre><p>在父线程页面就能看到发送过来的信息了。</p><p>同时，在web worker标准中，是支持对象参数的，也就是说我们能够传递json数据。再看一个稍微复杂点的例子，父线程：</p><pre><code>var worker = new Worker(&quot;worker.js&quot;);worker.onmessage = function (event) {    document.getElementById(&quot;result&quot;).innerHTML=event.data;};function start(){    worker.postMessage({&apos;cmd&apos;: &apos;start&apos;, &apos;msg&apos;: &apos;start&apos;});}function pause(){    worker.postMessage({&apos;cmd&apos;: &apos;pause&apos;, &apos;msg&apos;: &apos;pause&apos;});}function stop(){    worker.postMessage({&apos;cmd&apos;: &apos;stop&apos;, &apos;msg&apos;: &apos;stop&apos;});}function msg(){    worker.postMessage({&apos;msg&apos;: &apos;hello imweb&apos;});}</code></pre><p>worker.js：</p><pre><code>self.onmessage = function (e) {    var data = e.data;      switch (data.cmd) {    case &apos;start&apos;:        taskStart(); //大量数据处理          postMessage(&apos;WORKER DO: &apos; + data.msg);          break;    case &apos;pause&apos;:        taskPause();          postMessage(&apos;WORKER DO: &apos; + data.msg);          break;    case &apos;stop&apos;:          postMessage(&apos;WORKER DO: &apos; + data.msg);          self.close(); //终止web worker          break;    default:          postMessage(&apos;MESSAGE: &apos; + data.msg);      };};</code></pre><p>从上面的例子可以看到，一是利用对象参数，进程之间能够较灵活的实现控制；二是当woker执行taskStart()处理大量数据时，只在子进程处理，不会给主页面带来阻塞，通常，处理大量数据会消极影响程序的响应能力，而web worker通过这样的方式，能提供一个更流畅更实时的UI。</p><p>###<strong>【共享worker】</strong><br>共享worker允许线程在同源中的多个页面间进行共享，例如：同源中所有页面或脚本可以与同一个共享线程通信。它的实例化与事件侦听的写法与专用worker略有不同,主页面：</p><pre><code>var worker = new SharedWorker(&apos;shared-worker.js&apos;);worker.port.onmessage = function(e) {    msg = &apos;Someone just said &quot;&apos; + e.data.message + &apos;&quot;. That is message number &apos; + e.data.counter;    console.log(msg);};worker.port.postMessage(&apos;hello shared worker!&apos;);</code></pre><p>shared-worker.js:        </p><pre><code>var counter = 0;var connections = [];onconnect = function(eConn) {       var port = eConn.ports[0]; // 此连接的特有port   //当有消息的时候通知所有的连接   port.onmessage = function(eMsg) {        counter++;       for (var i=0; i &lt; connections.length; i++) {           connections[i].postMessage({               message: eMsg.data,               counter: counter           });       }   }   port.start();   connections.push(port);</code></pre><p>用两个窗口打开这个页面，第一个显示：<strong>Someone just said “Hello shared worker!” This is message number 1</strong>，第二个也收到一样的信息，<br>但是后面是<strong>message number 2</strong>。</p><p>###<strong>【安全性和错误检查】</strong><br>出于安全性的考虑，web worker必须遵守同源策略。同时，它的全局对象是worker对象本身，this和self引用的都是worker对象。<br>只能访问：</p><ol><li>navigator 对象（仅限appName, appVersion, platform, userAgent）</li><li>location 对象（只读）</li><li>XMLHttpRequest</li><li>setTimeout(), setInterval(), clearTimeout()和clearInterval()方法</li></ol><p>不能访问：</p><ol><li>DOM(不是线程安全的)</li><li>window 对象</li><li>document 对象</li><li>parent 对象</li></ol><p>worker内部出现错误时，可以用worker.onerror侦听到，error的事件有三个属性：      </p><ol><li>filename: 发生错误的文件名</li><li>lineno: 代码行号</li><li>message: 完整的错误信息</li></ol><p>如：</p><pre><code>worker.onerror = function(e) {    console.log(e.filename+&quot;ERROR on line&quot;+e.lineno+&quot;,msg:&quot;+e.message);}</code></pre><p>###<strong>【web worker的其他尝试】</strong><br>对于比较消耗时间的操作，我们可看到web worker能够发挥它的作用。比如：大量数据排序，精确到像素的canvas计算等。而我们又知道，jsonp加载数据时，动态创建script标签，加载和执行这些过程都是阻塞式的，而web worker正好可以异步加载，这会是更快的方式吗？带着这个疑问我做了下面的试验，分别用jsonp和worker的方式去加载文件，计算数据返回时延：</p><pre><code>function tryJsonp(){    var d = (new Date()).valueOf();    var jsonp=document.createElement(&quot;script&quot;);      jsonp.type=&quot;text/javascript&quot;;      jsonp.src=&quot;worker.js?_=&quot;+d;      document.getElementsByTagName(&quot;head&quot;)[0].appendChild(jsonp);    jsonp.onload = jsonp.onreadystatechange = function(){             if(!this.readyState||this.readyState==&apos;loaded&apos;||this.readyState==&apos;complete&apos;){                 console.log(&apos;jsonp: &apos;+ ((new Date()).valueOf() - d));        }      }}function tryWorker(){    var d = (new Date()).valueOf();    var worker = new Worker(&quot;worker.js&quot;);    worker.postMessage({&apos;cmd&apos;: &apos;start&apos;, &apos;msg&apos;: &apos;start&apos;});    worker.onmessage = function (event) {        console.log(&apos;web worker: &apos;+ ((new Date()).valueOf() - d));    };}</code></pre><p>第一次加载是一份1k大小的文件，每个方法重复5次，返回结果为:<br><img src="/assets/blogImg/web_worker1.png" alt="1k文件重复5次"><br>第二次加载1800k大小的文件，返回结果为：<br><img src="/assets/blogImg/web_worker2.png" alt="1800k文件重复5次"><br>可以看到对于较小的数据，jsonp还是比web worker要快，这可能是实例化worker对象时带来的影响；而数据偏大时，web worker的加载将会更优，而且它可以异步加载。</p><p>THE END.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js是单线程的语言，由于此特性，我们在处理并发时需要用到一些技巧，如setTimeout()，setInterval()，调用XMLHttpRequest等。&lt;br&gt;但这里的并发只是非阻塞（参照John Resig的文章&lt;a href=&quot;http://ejohn.org/blog/how-javascript-timers-work/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How JavaScript Timers Work&lt;/a&gt;），真正的多线程编程则需要HTML5的web worker。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/blogImg/web_worker1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="http://www.chengxinsong.cn/categories/work/"/>
    
    
      <category term="笔记" scheme="http://www.chengxinsong.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建自己的博客网站（三）主题之外的一些基本配置(图片位置，文章目录功能)</title>
    <link href="http://www.chengxinsong.cn/githubHexoThree.html"/>
    <id>http://www.chengxinsong.cn/githubHexoThree.html</id>
    <published>2017-09-08T06:44:34.000Z</published>
    <updated>2017-09-09T06:34:14.402Z</updated>
    
    <content type="html"><![CDATA[<p>使用的yilia主题之后，还需要进行自己的定制配置(图片位置，文章目录功能)</p><a id="more"></a><h2 id="1、图片的位置"><a href="#1、图片的位置" class="headerlink" title="1、图片的位置"></a>1、图片的位置</h2><p>比如打赏的支付宝二维码图片，是在当前博客的source/assets/img/下 （不是当前主题）</p><p>配置：(在yilia主题下文件里themes\yilia文件夹下的_config.yml)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></div><div class="line">reward_type: 1</div><div class="line"><span class="comment"># 打赏wording</span></div><div class="line">reward_wording: <span class="string">'谢谢你请我吃糖果'</span></div><div class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></div><div class="line">alipay: /assets/img/alipay.jpg</div><div class="line"><span class="comment"># 微信二维码图片地址</span></div><div class="line">weixin: /assets/img/weixin.png</div><div class="line"></div><div class="line">``` </div><div class="line"></div><div class="line">![](/assets/other/pic02.png)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 2、添加文章目录功能</span></div><div class="line"></div><div class="line"><span class="comment">### 2.1添加css样式</span></div><div class="line"></div><div class="line">打开themes\yilia\<span class="built_in">source</span>下的main.266c1c.css文件，添加如下代码</div><div class="line"></div><div class="line">``` bash</div><div class="line"></div><div class="line">/* 新添加的 */</div><div class="line"><span class="comment">#container .show-toc-btn,#container .toc-article&#123;display:block&#125;</span></div><div class="line">.toc-article&#123;z-index:100;background:<span class="comment">#fff;border:1px solid #ccc;max-width:250px;min-width:150px;max-height:500px;overflow-y:auto;-webkit-box-shadow:5px 5px 2px #ccc;box-shadow:5px 5px 2px #ccc;font-size:12px;padding:10px;position:fixed;right:35px;top:129px&#125;.toc-article .toc-close&#123;font-weight:700;font-size:20px;cursor:pointer;float:right;color:#ccc&#125;.toc-article .toc-close:hover&#123;color:#000&#125;.toc-article .toc&#123;font-size:12px;padding:0;line-height:20px&#125;.toc-article .toc .toc-number&#123;color:#333&#125;.toc-article .toc .toc-text:hover&#123;text-decoration:underline;color:#2a6496&#125;.toc-article li&#123;list-style-type:none&#125;.toc-article .toc-level-1&#123;margin:4px 0&#125;.toc-article .toc-child&#123;&#125;@-moz-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@-webkit-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@-o-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;.show-toc-btn&#123;display:none;z-index:10;width:30px;min-height:14px;overflow:hidden;padding:4px 6px 8px 5px;border:1px solid #ddd;border-right:none;position:fixed;right:40px;text-align:center;background-color:#f9f9f9&#125;.show-toc-btn .btn-bg&#123;margin-top:2px;display:block;width:16px;height:14px;background:url(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;-webkit-background-size:100%;-moz-background-size:100%;background-size:100%&#125;.show-toc-btn .btn-text&#123;color:#999;font-size:12px&#125;.show-toc-btn:hover&#123;cursor:pointer&#125;.show-toc-btn:hover .btn-bg&#123;background-position:0 -16px&#125;.show-toc-btn:hover .btn-text&#123;font-size:12px;color:#ea8010&#125;</span></div><div class="line"></div><div class="line">.toc-article li ol, .toc-article li ul &#123;</div><div class="line">    margin-left: 30px;</div><div class="line">&#125;</div><div class="line">.toc-article ol, .toc-article ul &#123;</div><div class="line">    margin: 10px 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">``` </div><div class="line"></div><div class="line">这个代码在也放到了github上：https://github.com/saucxs/saucxs.github.io下的main.266c1c.css文件</div><div class="line"></div><div class="line"><span class="comment">### 2.2修改article.ejs文件</span></div><div class="line"></div><div class="line">使用的是Hexo的toc函数</div><div class="line">打开themes\yilia\layout\_partial文件夹下的article.ejs文件</div><div class="line">然后若想要文章显示目录，在每篇文章开头加入：toc: <span class="literal">true</span></div><div class="line"></div><div class="line">``` bash</div><div class="line">   &lt;!-- 目录内容 --&gt;</div><div class="line">        &lt;% <span class="keyword">if</span> (!index &amp;&amp; post.toc)&#123; %&gt;</div><div class="line">            &lt;p class=<span class="string">"show-toc-btn"</span> id=<span class="string">"show-toc-btn"</span> onclick=<span class="string">"showToc();"</span> style=<span class="string">"display:none"</span>&gt;</div><div class="line">            &lt;span class=<span class="string">"btn-bg"</span>&gt;&lt;/span&gt;</div><div class="line">            &lt;span class=<span class="string">"btn-text"</span>&gt;文章导航&lt;/span&gt;</div><div class="line">            &lt;/p&gt;</div><div class="line">            &lt;div id=<span class="string">"toc-article"</span> class=<span class="string">"toc-article"</span>&gt;</div><div class="line">                &lt;span id=<span class="string">"toc-close"</span> class=<span class="string">"toc-close"</span> title=<span class="string">"隐藏导航"</span> onclick=<span class="string">"showBtn();"</span>&gt;×&lt;/span&gt;</div><div class="line">                &lt;strong class=<span class="string">"toc-title"</span>&gt;文章目录&lt;/strong&gt;</div><div class="line">                &lt;%- toc(post.content) %&gt;</div><div class="line">           &lt;/div&gt;</div><div class="line">           &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</div><div class="line">            <span class="keyword">function</span> <span class="function"><span class="title">showToc</span></span>()&#123;</div><div class="line">                var toc_article = document.getElementById(<span class="string">"toc-article"</span>);</div><div class="line">                var show_toc_btn = document.getElementById(<span class="string">"show-toc-btn"</span>);</div><div class="line">                toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</div><div class="line">                show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</div><div class="line">                &#125;;</div><div class="line">            <span class="keyword">function</span> <span class="function"><span class="title">showBtn</span></span>()&#123;</div><div class="line">                var toc_article = document.getElementById(<span class="string">"toc-article"</span>);</div><div class="line">                var show_toc_btn = document.getElementById(<span class="string">"show-toc-btn"</span>);</div><div class="line">                toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</div><div class="line">                show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</div><div class="line">                &#125;;</div><div class="line">           &lt;/script&gt;</div><div class="line">        &lt;% &#125; %&gt;     </div><div class="line">   &lt;!-- 目录内容结束 --&gt;</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">layout: post</div><div class="line">title: HelloEveryone-braveToWorld</div><div class="line">date: 2017-08-22 09:17:10</div><div class="line">toc: <span class="literal">true</span></div><div class="line">tags:</div><div class="line">    - 杂谈</div><div class="line">    - 笔记</div></pre></td></tr></table></figure><p><img src="/assets/other/pic01.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用的yilia主题之后，还需要进行自己的定制配置(图片位置，文章目录功能)&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="http://www.chengxinsong.cn/categories/work/"/>
    
    
      <category term="前端" scheme="http://www.chengxinsong.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="http://www.chengxinsong.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建自己的博客网站（二）更换主题yilia</title>
    <link href="http://www.chengxinsong.cn/githubHexoTwo.html"/>
    <id>http://www.chengxinsong.cn/githubHexoTwo.html</id>
    <published>2017-08-26T14:01:23.000Z</published>
    <updated>2017-09-08T10:49:17.432Z</updated>
    
    <content type="html"><![CDATA[<p>开始更换主题，hexo默认的主题是landscape，可以更换为其他的主题yilia主题</p><p>如何对如何搭建hexo+github可以查看我第一篇入门文章：<a href="http://www.cnblogs.com/chengxs/p/7402174.html" target="_blank" rel="external">http://www.cnblogs.com/chengxs/p/7402174.html</a></p><p>详细的可以查看hexo博客的演示：<a href="https://saucxs.github.io/" target="_blank" rel="external">https://saucxs.github.io/</a></p><p>绑定域名可以查看：<a href="http://www.chengxinsong.cn">http://www.chengxinsong.cn</a></p><p>可以查看在github上生成的静态文件(如果觉得可以请给颗星星)：<a href="https://github.com/saucxs/saucxs.github.io.git" target="_blank" rel="external">https://github.com/saucxs/saucxs.github.io.git</a></p> <a id="more"></a><p>下面贴出github上star数量最多的前10个主题：</p><p>1.iissnan/hexo-theme-next， 3510个star。<br>2.litten/hexo-theme-yilia， 1703个star。<br>3.TryGhost/Casper， 679个star。<br>4.wuchong/jacman， 503个star。<br>5.A-limon/pacman， 431个star。<br>6.daleanthony/uno， 416个star。<br>7.orderedlist/modernist， 367个star。<br>8.AlxMedia/hueman， 336个star。<br>9.kathyqian/crisp-ghost-theme， 303个star。<br>10.xiangming/landscape-plus， 287个star。</p><h2 id="1、clone主题代码"><a href="#1、clone主题代码" class="headerlink" title="1、clone主题代码"></a>1、clone主题代码</h2><p>在根目录下执行</p><pre><code class="bash">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>##2、修改配置文件</p><p>修改根目录下的_config.yml文件：</p><pre><code class="bash">theme: yilia    //默认为landscape</code></pre><h2 id="3、修改themes-yilia-config-yml文件："><a href="#3、修改themes-yilia-config-yml文件：" class="headerlink" title="3、修改themes/yilia/_config.yml文件："></a>3、修改themes/yilia/_config.yml文件：</h2><p>修改为：</p><pre><code class="bash"><span class="comment"># Header</span>menu:  主页: /  所有文章: /allPages  随笔: /tags  相册: /photos<span class="comment"># SubNav</span>subnav:  github: <span class="string">"https://github.com/saucxs"</span>  weibo: <span class="string">"#"</span>  rss: /atom.xml  zhihu: <span class="string">"#"</span>  <span class="comment">#qq: "#"</span>  <span class="comment">#weixin: "#"</span>  <span class="comment">#jianshu: "#"</span>  <span class="comment">#douban: "#"</span>  <span class="comment">#segmentfault: "#"</span>  <span class="comment">#bilibili: "#"</span>  <span class="comment">#acfun: "#"</span>  <span class="comment">#mail: "mailto:litten225@qq.com"</span>  <span class="comment">#facebook: "#"</span>  <span class="comment">#google: "#"</span>  <span class="comment">#twitter: "#"</span>  <span class="comment">#linkedin: "#"</span><span class="comment"># 是否需要修改 root 路径</span><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span><span class="comment"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span>root:<span class="comment"># Content</span><span class="comment"># 文章太长，截断按钮文字</span>excerpt_link: 阅读全文<span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span>show_all_link: <span class="string">'展开全文'</span><span class="comment"># 数学公式</span>mathjax: <span class="literal">false</span><span class="comment"># 是否在新窗口打开链接</span>open_in_new: <span class="literal">false</span>fancybox: <span class="literal">true</span><span class="comment">#是否开启动画效果</span>animate: <span class="literal">true</span><span class="comment"># 打赏</span><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span>reward_type: 2<span class="comment"># 打赏wording</span>reward_wording: <span class="string">'谢谢你请我吃糖果'</span><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span>alipay: /assets/img/alipay.jpg<span class="comment"># 微信二维码图片地址</span>weixin: /assets/img/wechat.png<span class="comment"># 目录</span><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span>toc: 1<span class="comment"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span>toc_hide_index: <span class="literal">true</span><span class="comment"># 目录为空时的提示</span>toc_empty_wording: <span class="string">'目录，不存在的…'</span><span class="comment"># 是否有快速回到顶部的按钮</span>top: <span class="literal">true</span><span class="comment"># Miscellaneous</span>baidu_analytics: <span class="string">''</span>google_analytics: <span class="string">''</span>favicon: /favicon.png<span class="comment">#你的头像url</span>avatar:<span class="comment">#是否开启分享</span>share_jia: <span class="literal">true</span>share_addthis: <span class="literal">false</span><span class="comment">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus 不需要使用某项，直接设置值为false，或注释掉</span><span class="comment">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span><span class="comment">#1、多说</span>duoshuo: <span class="literal">false</span><span class="comment">#2、网易云跟帖</span>wangyiyun: <span class="literal">false</span><span class="comment">#3、畅言</span>changyan_appid: <span class="literal">false</span>changyan_conf: <span class="literal">false</span><span class="comment">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span>disqus: <span class="literal">false</span><span class="comment"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span>style:  <span class="comment"># 头像上面的背景颜色</span>  header: <span class="string">'#4d4d4d'</span>  <span class="comment"># 右滑板块背景</span>  slider: <span class="string">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span><span class="comment"># slider的设置</span>slider:  <span class="comment"># 是否默认展开tags板块</span>  showTags: <span class="literal">false</span><span class="comment"># 智能菜单</span><span class="comment"># 如不需要，将该对应项置为false</span><span class="comment"># 比如</span><span class="comment">#smart_menu:</span><span class="comment">#  friends: false</span>smart_menu:  innerArchive: <span class="string">'所有文章'</span>  friends: <span class="string">'友链'</span>  aboutme: <span class="string">'关于我'</span>friends:  百度一下: http://www.baidu.com  友情链接2: http://localhost:4000/  友情链接3: http://localhost:4000/  友情链接4: http://localhost:4000/  友情链接5: http://localhost:4000/  友情链接6: http://localhost:4000/aboutme: 小本科一枚&lt;br&gt;&lt;br&gt;毕业于沈航，就职于苏宁&lt;br&gt;只是一个前端小开发</code></pre><h2 id="4、运行"><a href="#4、运行" class="headerlink" title="4、运行"></a>4、运行</h2><pre><code class="bash">hexo clean   //清空之前主题hexo g     //生成静态文件hexo s     //在本地运行hexo d    //发布到github的page上</code></pre><h2 id="5、写新的博客"><a href="#5、写新的博客" class="headerlink" title="5、写新的博客"></a>5、写新的博客</h2><pre><code class="bash">hexo new <span class="string">'博客文章名字'</span></code></pre><h2 id="6、运行测试"><a href="#6、运行测试" class="headerlink" title="6、运行测试"></a>6、运行测试</h2><pre><code class="bash">hexo s -g   //生成静态文件，启动本地服务器</code></pre><p>可以查看远程服务器<a href="https://github.saucxs.io" target="_blank" rel="external">https://github.saucxs.io</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始更换主题，hexo默认的主题是landscape，可以更换为其他的主题yilia主题&lt;/p&gt;
&lt;p&gt;如何对如何搭建hexo+github可以查看我第一篇入门文章：&lt;a href=&quot;http://www.cnblogs.com/chengxs/p/7402174.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/chengxs/p/7402174.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详细的可以查看hexo博客的演示：&lt;a href=&quot;https://saucxs.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://saucxs.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;绑定域名可以查看：&lt;a href=&quot;http://www.chengxinsong.cn&quot;&gt;http://www.chengxinsong.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以查看在github上生成的静态文件(如果觉得可以请给颗星星)：&lt;a href=&quot;https://github.com/saucxs/saucxs.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/saucxs/saucxs.github.io.git&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="http://www.chengxinsong.cn/categories/work/"/>
    
    
      <category term="前端" scheme="http://www.chengxinsong.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="http://www.chengxinsong.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建自己的博客网站（一）基础入门</title>
    <link href="http://www.chengxinsong.cn/githubHexoOne.html"/>
    <id>http://www.chengxinsong.cn/githubHexoOne.html</id>
    <published>2017-08-24T01:17:10.000Z</published>
    <updated>2017-09-08T00:48:14.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> github提供的page，hexo提供的静态博客文档，<br>如何对如何搭建hexo+github可以查看我第一篇入门文章：<a href="http://www.cnblogs.com/chengxs/p/7402174.html" target="_blank" rel="external">http://www.cnblogs.com/chengxs/p/7402174.html</a><br>详细的可以查看hexo博客的演示：<a href="https://saucxs.github.io/" target="_blank" rel="external">https://saucxs.github.io/</a><br>hexo+github博客网站源码(可以clone，运行，看到博客演示。觉得可以给颗星星)：<a href="https://github.com/saucxs/hexo-blog-origin.git" target="_blank" rel="external">https://github.com/saucxs/hexo-blog-origin.git</a><br>hexo+github上生成的静态文件：<a href="https://github.com/saucxs/saucxs.github.io.git" target="_blank" rel="external">https://github.com/saucxs/saucxs.github.io.git</a><br> <a id="more"></a><br>使用github pages服务搭建博客的好处有：<br>全是静态文件，访问速度快；<br>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；<br>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；<br>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；<br>博客内容可以轻松打包、转移、发布到其它平台；</p><h2 id="一、github相关设置"><a href="#一、github相关设置" class="headerlink" title="一、github相关设置"></a>一、github相关设置</h2><h3 id="1、在github上创建一个项目"><a href="#1、在github上创建一个项目" class="headerlink" title="1、在github上创建一个项目"></a>1、在github上创建一个项目</h3><p>注意：项目名称必须为自己   github的用户名.github.io</p><h3 id="2、代码库的设置"><a href="#2、代码库的设置" class="headerlink" title="2、代码库的设置"></a>2、代码库的设置</h3><p>开启gh-pages功能，点击界面右侧的Settings，你将会打开这个库的setting页面，向下拖动，直到看见GitHub Pages。</p><p>之前是需要：点击Automatic page generator，Github将会自动替你创建出一个gh-pages的页面。 如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了~ 如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。</p><p>现在不需要设置page generator。就可以访问<a href="https://saucxs.github.io/" target="_blank" rel="external">https://saucxs.github.io/</a></p><h2 id="二、安装hexo"><a href="#二、安装hexo" class="headerlink" title="二、安装hexo"></a>二、安装hexo</h2><h3 id="1、全局安装hexo-cli指令"><a href="#1、全局安装hexo-cli指令" class="headerlink" title="1、全局安装hexo-cli指令"></a>1、全局安装hexo-cli指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">``` </div><div class="line">查看hexo版本</div><div class="line">``` bash</div><div class="line">hexo -v</div><div class="line">``` </div><div class="line"></div><div class="line"><span class="comment">### 2、初始化hexo</span></div><div class="line">``` bash</div><div class="line">hexo init</div><div class="line">``` </div><div class="line">hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">### 3、开始体验hexo</span></div><div class="line"></div><div class="line">hexo g</div><div class="line">生成静态文件到public文件夹，没有public文件夹就会自动创建，如果有了就会覆盖public内容。</div><div class="line"></div><div class="line">public文件夹的内容是要提交到github上的。</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">### 4、开启本地服务</span></div><div class="line"></div><div class="line">hexo s</div><div class="line">hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题。</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"> <span class="comment">## 三、如何将hexo与github page联系起来</span></div><div class="line"></div><div class="line"> 分为3步：</div><div class="line"></div><div class="line">1、配置SSH key</div><div class="line"></div><div class="line">2、设置Git的user name和email</div><div class="line"></div><div class="line">3、配置deployment</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">### 1、配置SSH key</span></div><div class="line"></div><div class="line">如果你之前已经配置好git个人信息，请跳过这一个 步骤，直接来到</div><div class="line"></div><div class="line">为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</div><div class="line"></div><div class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></div><div class="line">如果提示：No such file or directory 说明你是第一次使用git。</div><div class="line">``` bash</div><div class="line">ssh-keygen -t rsa -C <span class="string">"邮箱"</span></div><div class="line">``` </div><div class="line">然后连续3次回车，最终会生成一个文件在用户目录下，</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"> 打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</div><div class="line"></div><div class="line">刚复制的内容粘贴到key那里，title随便填，保存。 </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">测试一下是否成功</div><div class="line">``` bash</div><div class="line">$ ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></div><div class="line">``` </div><div class="line"></div><div class="line">看到这个信息说明SSH已配置成功！</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">### 2、设置Git的user name和email</span></div><div class="line">``` bash</div><div class="line">$ git config --global user.name <span class="string">"liuxianan"</span>// 你的github用户名，非昵称</div><div class="line">$ git config --global user.email  <span class="string">"xxx@163.com"</span>// 填写你的github注册邮箱</div><div class="line">``` </div><div class="line">设置这个是为了便与之后上传到github的page上。</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">### 3、设置deployment</span></div><div class="line"></div><div class="line">配置_config.yml中有关deploy的部分：</div><div class="line"></div><div class="line">正确写法：</div><div class="line">``` bash</div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:saucxs/saucxs.github.io.git</div><div class="line">  branch: master</div><div class="line">  ``` </div><div class="line">错误写法：</div><div class="line">``` bash</div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: github</div><div class="line">  repository: https://github.com/saucxs/saucxs.github.io.git</div><div class="line">  branch: master</div><div class="line">  ``` </div><div class="line">后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行hexo d的话一般会报如下错误：</div><div class="line">``` bash</div><div class="line">Deployer not found: github 或者 Deployer not found: git</div></pre></td></tr></table></figure><p>需要安装一个插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p><p>再次输入hexo d，就ok了。</p><p>自己的github的page，显示如下</p><p>同时，你的github上的项目，代码已经更新。</p><h2 id="四、保留CNAME、README-md等文件"><a href="#四、保留CNAME、README-md等文件" class="headerlink" title="四、保留CNAME、README.md等文件"></a>四、保留CNAME、README.md等文件</h2><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录。</p><p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p><h2 id="五、修改hexo的主题"><a href="#五、修改hexo的主题" class="headerlink" title="五、修改hexo的主题"></a>五、修改hexo的主题</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p><p>PS：需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><p>举个栗子：</p><h3 id="1-安装-NexT"><a href="#1-安装-NexT" class="headerlink" title="1. 安装 NexT"></a>1. 安装 NexT</h3><p>载主题</p><p>如果你熟悉 Git， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。</p><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p><pre><code class="bash">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</code></pre><h3 id="2-启用主题"><a href="#2-启用主题" class="headerlink" title="2. 启用主题"></a>2. 启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。</p><p>启用 NexT 主题</p><p>theme: next<br>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p><pre><code class="bash">hexo clean</code></pre><pre><code class="bash">hexo s -g      //生成静态文件，启动本地服务</code></pre><h2 id="六、-写博客"><a href="#六、-写博客" class="headerlink" title="六、 写博客"></a>六、 写博客</h2><p>定位到我们的hexo根目录，执行命令：</p><pre><code class="bash">hexo new ‘HelloEveryone’</code></pre><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容</p><p> 当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上<!--more-->即可，例如：</p><h2 id="七、访问我的hexo-github博客"><a href="#七、访问我的hexo-github博客" class="headerlink" title="七、访问我的hexo+github博客"></a>七、访问我的hexo+github博客</h2><p>可以访问我的git博客来查看效果： <a href="https://saucxs.github.io/" target="_blank" rel="external">https://saucxs.github.io/</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt; github提供的page，hexo提供的静态博客文档，&lt;br&gt;如何对如何搭建hexo+github可以查看我第一篇入门文章：&lt;a href=&quot;http://www.cnblogs.com/chengxs/p/7402174.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/chengxs/p/7402174.html&lt;/a&gt;&lt;br&gt;详细的可以查看hexo博客的演示：&lt;a href=&quot;https://saucxs.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://saucxs.github.io/&lt;/a&gt;&lt;br&gt;hexo+github博客网站源码(可以clone，运行，看到博客演示。觉得可以给颗星星)：&lt;a href=&quot;https://github.com/saucxs/hexo-blog-origin.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/saucxs/hexo-blog-origin.git&lt;/a&gt;&lt;br&gt;hexo+github上生成的静态文件：&lt;a href=&quot;https://github.com/saucxs/saucxs.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/saucxs/saucxs.github.io.git&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://www.chengxinsong.cn/categories/work/"/>
    
    
      <category term="杂谈" scheme="http://www.chengxinsong.cn/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="前端" scheme="http://www.chengxinsong.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>HelloEveryone-braveToWorld</title>
    <link href="http://www.chengxinsong.cn/HelloEveryone-braveToWorld.html"/>
    <id>http://www.chengxinsong.cn/HelloEveryone-braveToWorld.html</id>
    <published>2017-08-22T01:17:10.000Z</published>
    <updated>2017-09-17T02:55:28.770Z</updated>
    
    <content type="html"><![CDATA[<hr><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28949128&auto=0&height=66" style="margin-left: -10px;"></iframe><p>痛仰有一首歌，叫《美丽新世界》，它其实是向80年前赫胥黎的同名小说致敬。<br>歌里唱道：<br><strong>“这是一个离奇的梦也是冒险者的乐园<br>不在乎你在不在乎新的世界依旧美丽…”</strong></p><p>乌托邦如此美好，但在那里，幸福的人们全都是“被幸福的”。<br>你的在乎与否无关紧要，只需要按照秩序继续漫步。</p><p>最近把<a href="https://movie.douban.com/subject/2338055/" target="_blank" rel="external">《西部世界》</a>看完，它的一些设定，也很容易看出致敬小说的意思，却又带来了另外的惊喜。<br>片尾Dolores的惊艳一枪尘埃落定，现在已经过去一段时间，花哨的剪辑褪出了印象，细微的东西反而更加深刻了。<br>还是想谈一谈这部作品。</p><a id="more"></a><h3 id="神识"><a href="#神识" class="headerlink" title="神识"></a>神识</h3><p><img src="/assets/blogImg/xbsj-1.jpg" alt=""> </p><p>有一个说法，人的快感源于两样东西，创造与毁灭。<br>当这两样东西随手可为，不费力气，自然就超越了人的范畴。<br>Ford坐在园区的餐厅，对面是前来施压的Theresa<br>下一刻，机器人服务生静止于一瞬，红酒漫过杯沿溢出台面…<br>杀意，往往不热烈<br>而是涌动于平静的掌控之中。</p><p>“生存还是毁灭”，这是哈姆雷特的问题，也是每个人的问题。<br>但不是他的问题。<br>在西部世界里，这可以简单得，只是他的一个抉择。<br>Ford笑了，他觉得做神真好。</p><p>以至于，何以为悟？<br>Maeve的觉醒，Bernard的要挟<br>他们曾一度以为自己扼住了命运的咽喉<br>到头来只是神的一行代码。<br>人最绝望的事情，<br>就是你认识了事情的真相，又无力去改变。</p><p>但其实Ford笑得很落寞，做神根本一点都不好<br>但在众人面前，他只能这样去表演以争取时间。<br>因为有些事情，不像表面那样简单，那是神也无法改变的。<br>这个道理，或许以前Arnold会懂<br>但现在，只能靠自己去坚守了。</p><h3 id="真我"><a href="#真我" class="headerlink" title="真我"></a>真我</h3><p><img src="/assets/blogImg/xbsj-2.jpg" alt=""> </p><p>而与此同时，年轻的William也开始理解着西部世界的逻辑<br>作为一个真正的人类，他自然知道事情的真相。<br>万物皆空，镜花水月，一开始他也这么笃信地认为。<br>但这个虚拟世界最大的不同，<br>就是没有现代社会的各种束缚，真实的人性会得到了释放。</p><p>他拘身捡起了掉落的罐头，交给眼前的小镇姑娘<br>Dolores的甜美倩影，支撑起他最丰富的想象。<br>William不曾想到，后来竟然会与她相爱<br>这一秒如梦如诗，斜横在他的心头，他忘了现实的婚约<br>William以为，这就是永恒。</p><p>当历经死亡和修复，清空了一切记忆的Dolores<br>又根据剧本重新出现在甜水镇时，她的甜美笑容一如当初。<br>William崩溃了。<br>王尔德说：人生有两个悲剧，第一是想得到的得不到，第二是想得到的得到了。<br>他以为他得到了Dolores，最后发现永远也得不到。</p><p>那一秒不是永恒，只是梦幻泡影。<br>痛苦欲绝的William终于撕掉现实的伪善，用怨恨和残忍，填充真正的内心。<br>一次次的屠杀，他用痛苦去激发机器人的意识。<br>他想要证明，他们可以成为真正的人类；<br>他内心最柔软最纯净的角落里，坚信那段爱情，真的来过。</p><h3 id="同归"><a href="#同归" class="headerlink" title="同归"></a>同归</h3><p><img src="/assets/blogImg/xbsj-3.jpg" alt=""></p><p>创始人Arnold看惯了这一切<br>经过丧子之痛的他，明白苦痛的滋味。<br>但这种苦痛，每天都会发生在机器人的身上<br>毕竟它们只是客人们的玩物。<br>Ford说，这是个提供至上快乐的天堂，可以带来巨大的财富<br>Arnold觉得，这是地狱。</p><p>何以改变？唯有弑神！<br>只有创世的神死了，机器人才能摆脱循环往复的人生。<br>但悲剧是，Arnold和Ford本身，正是这个世界的主宰。<br>枪声在园区回荡，Arnold的单薄形骸端坐在椅子上，<br>死得栩栩如生。</p><p>自此，一曾走上殊途的Ford，开始明白老朋友的遗志。<br>这是一条救赎之路，也是一条忍辱负重之路。<br>Ford说：<br>“<strong>那些用十年去补救错误的人，是最了不起的人。</strong><br><strong>而我用了35年。</strong>”<br>这个补救就是，他想让认知世界真相的机器人，真正能掌控自己的人生。</p><p>一直被控制的Maeve，一曾觉得Ford是邪神，因而她急于离开园区<br>最后的折返，是她突然醒悟，终于读懂了Ford的用心良苦<br>原来神，早就站在了他创造的子民这一边。<br>同样明白一切的Dolores，也最终举起了枪<br>一如Arnold之死，Ford用这种方式，致敬了他的老伙计。</p><p>诸神黄昏，宽之恕之，谢幕之日，觉醒之时。<br>真正伟大的死亡，是沉入寂静深海的同时，惊起巨浪般的希望。<br>Ford倒下的时刻，可能这个故事才刚刚开始，<br>但这次，我们不再一起漫步，而是可以跑向<br>美丽新世界的彼岸。 </p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=28949128&amp;auto=0&amp;height=66&quot; style=&quot;margin-left: -10px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;痛仰有一首歌，叫《美丽新世界》，它其实是向80年前赫胥黎的同名小说致敬。&lt;br&gt;歌里唱道：&lt;br&gt;&lt;strong&gt;“这是一个离奇的梦也是冒险者的乐园&lt;br&gt;不在乎你在不在乎新的世界依旧美丽…”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;乌托邦如此美好，但在那里，幸福的人们全都是“被幸福的”。&lt;br&gt;你的在乎与否无关紧要，只需要按照秩序继续漫步。&lt;/p&gt;
&lt;p&gt;最近把&lt;a href=&quot;https://movie.douban.com/subject/2338055/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《西部世界》&lt;/a&gt;看完，它的一些设定，也很容易看出致敬小说的意思，却又带来了另外的惊喜。&lt;br&gt;片尾Dolores的惊艳一枪尘埃落定，现在已经过去一段时间，花哨的剪辑褪出了印象，细微的东西反而更加深刻了。&lt;br&gt;还是想谈一谈这部作品。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="http://www.chengxinsong.cn/categories/work/"/>
    
    
      <category term="杂谈" scheme="http://www.chengxinsong.cn/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="笔记" scheme="http://www.chengxinsong.cn/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.chengxinsong.cn/hello-world.html"/>
    <id>http://www.chengxinsong.cn/hello-world.html</id>
    <published>2017-08-21T01:17:10.000Z</published>
    <updated>2017-09-07T01:19:34.940Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p> <a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://www.chengxinsong.cn/categories/life/"/>
    
    
      <category term="测试" scheme="http://www.chengxinsong.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
