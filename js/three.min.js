// threejs.org/license
'use strict';var THREE={REVISION:"70"};"object"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:0});three.mouse={left:0,middle:1,right:2};three.cullfacenone=0;three.cullfaceback=1;three.cullfacefront=2;three.cullfacefrontback=3;three.frontfacedirectioncw=0;three.frontfacedirectionccw=1;three.basicshadowmap=0;three.pcfshadowmap=1;three.pcfsoftshadowmap=2;three.frontside=0;three.backside=1;three.doubleside=2;three.noshading=0; 3="==arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};" three.flatshading="1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;" three.oneminussrcalphafactor="205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;" three.clamptoedgewrapping="1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;" three.unsignedshort565type="1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;" three.projector="function(){console.error("THREE.Projector" has="" been="" moved="" to="" examples="" js="" renderers="" projector.js.");this.projectvector="function(a,b){console.warn("THREE.Projector:" .projectvector()="" is="" now="" vector.project().");a.project(b)};this.unprojectvector="function(a,b){console.warn("THREE.Projector:" .unprojectvector()="" vector.unproject().");a.unproject(b)};this.pickingray="function(a,b){console.error("THREE.Projector:" .pickingray()="" raycaster.setfromcamera().")}};="" three.canvasrenderer="function(){console.error("THREE.CanvasRenderer" canvasrenderer.js");this.domelement="document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return" three.color.prototype="{constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a" instanceof="" three.color?this.copy(a):"number"="==typeof" a?this.sethex(a):"string"="==typeof" a&&this.setstyle(a);return="" this},sethex:function(a){a="Math.floor(a);this.r=(a">>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1="" 6?a+6*(b-a)*="" c:.5="">c?b:c<2 3?a+6*(b-a)*(2="" 3-c):a};b=".5">=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<< 8^255*this.b<<0},gethexstring:function(){return("000000"+this.gethex().tostring(16)).slice(-6)},gethsl:function(a){a="a||{h:0,s:0,l:0};var" b="this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var" k="e-f,f=.5">=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g="(d-b)/k+2;break;case" d:g="(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return" a},getstyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsethsl:function(a,="" b,c){var="" d="this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return" this},add:function(a){this.r+="a.r;this.g+=a.g;this.b+=a.b;return" this},addcolors:function(a,b){this.r="a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return" this},addscalar:function(a){this.r+="a;this.g+=a;this.b+=a;return" this},multiply:function(a){this.r*="a.r;this.g*=a.g;this.b*=a.b;return" this},multiplyscalar:function(a){this.r*="a;this.g*=a;this.b*=a;return" this},lerp:function(a,b){this.r+="(a.r-this.r)*b;this.g+=(a.g-this.g)*b;" this.b+="(a.b-this.b)*b;return" this},equals:function(a){return="" a.r="==this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return" this},toarray:function(){return[this.r,this.g,this.b]},clone:function(){return(new="" three.color).setrgb(this.r,this.g,this.b)}};="" three.colorkeywords="{aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643," darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,="" grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,="" lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,="" palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,="" tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};three.quaternion="function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void" 0!="=d?d:1};" three.quaternion.prototype="{constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get" x(){return="" this._x},set="" x(a){this._x="a;this.onChangeCallback()},get" y(){return="" this._y},set="" y(a){this._y="a;this.onChangeCallback()},get" z(){return="" this._z},set="" z(a){this._z="a;this.onChangeCallback()},get" w(){return="" this._w},set="" w(a){this._w="a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return" this},copy:function(a){this._x="a.x;this._y=a.y;this._z=a.z;" this._w="a.w;this.onChangeCallback();return" this},setfromeuler:function(a,b){if(!1="==a" instanceof="" three.euler)throw="" error("three.quaternion:="" .setfromeuler()="" now="" expects="" a="" euler="" rotation="" rather="" than="" vector3="" and="" order.");var="" c="Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=" c*d*h-f*g*e,this._w="c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return" this},setfromaxisangle:function(a,="" b){var="" this},setfromrotationmatrix:function(a){var="" b="a.elements,c=b[0];a=b[4];var">f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=
.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,n=b._w;this._x=c*n+f*g+d*k-e*h;this._y=d*n+f*h+e*g-c*k;this._z=e*n+f*k+c*h-d*g;this._w=f*n-c*g-d*h-e*k;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w="f,this._x=c,this._y=d,this._z=e,this;var" h="Math.acos(g),k=Math.sqrt(1-g*g);if(.001">Math.abs(k))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/k;h=
Math.sin(b*h)/k;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=
a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,="" b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},
roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=
this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+
c;this.x=a.array[b];this.y=a.array[b+1];return this},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=
a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=
(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,n=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-n*-f;this.y=k*a+b*-f+n*-e-h*-g;this.z=n*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===
a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>
a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,
b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},
projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());
return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(a,b){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},
getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,
b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};
THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var n=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+n-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;n=(n+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>n?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>n?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),
b=d/c,d=k/c):.01>n?(c=b=.707106781,d=0):(d=Math.sqrt(n),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+n-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w); return="" this},clamp:function(a,b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);
return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=
this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],n=e[9],p=e[2],q=e[6],e=e[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-n,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(q,k),this._z=0)):"YXZ"===b?(this._x=Math.asin(-d(n,-1,1)),.99999>Math.abs(n)?(this._y=Math.atan2(g,e),this._z=Math.atan2(h,
k)):(this._y=Math.atan2(-p,a),this._z=0)):"ZXY"===b?(this._x=Math.asin(d(q,-1,1)),.99999>Math.abs(q)?(this._y=Math.atan2(-p,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===b?(this._y=Math.asin(-d(p,-1,1)),.99999>Math.abs(p)?(this._x=Math.atan2(q,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):"YZX"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-n,k),this._y=Math.atan2(-p,a)):(this._x=0,this._y=Math.atan2(g,e))):"XZY"===b?(this._z=
Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(q,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-n,e),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,
b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,
this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandbypoint(a[b]);return this},setfromcenterandsize:function(){var="" a="new" three.vector2;return="" function(b,c){var="" d="a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return" this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return="" this},makeempty:function(){this.min.x="this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return" this},empty:function(){return="" this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new="" three.vector2).addvectors(this.min,this.max).multiplyscalar(.5)},size:function(a){return(a||new="" three.vector2).subvectors(this.max,this.min)},expandbypoint:function(a){this.min.min(a);this.max.max(a);return="" this},expandbyvector:function(a){this.min.sub(a);this.max.add(a);return="" this},expandbyscalar:function(a){this.min.addscalar(-a);="" this.max.addscalar(a);return="" this},containspoint:function(a){return="" a.x<this.min.x||a.x="">this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getparameter:function(a,b){return(b||new three.vector2).set((a.x-this.min.x)="" (this.max.x-this.min.x),(a.y-this.min.y)="" (this.max.y-this.min.y))},isintersectionbox:function(a){return="" a.max.x<this.min.x||a.min.x="">this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandbypoint(a[b]);return this},setfromcenterandsize:function(){var="" a="new" three.vector3;return="" function(b,c){var="" d="a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return" this}}(),setfromobject:function(){var="" function(b){var="" c="this;b.updateMatrixWorld(!0);" this.makeempty();b.traverse(function(b){var="" e="b.geometry;if(void" 0!="=e)if(e" instanceof="" three.geometry)for(var="" f="e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else" if(e="" three.buffergeometry&&void="" this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return="" this},="" makeempty:function(){this.min.x="this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return" this},empty:function(){return="" this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new="" three.vector3).addvectors(this.min,this.max).multiplyscalar(.5)},size:function(a){return(a||new="" three.vector3).subvectors(this.max,this.min)},expandbypoint:function(a){this.min.min(a);this.max.max(a);return="" this},expandbyvector:function(a){this.min.sub(a);="" this.max.add(a);return="" this},expandbyscalar:function(a){this.min.addscalar(-a);this.max.addscalar(a);return="" this},containspoint:function(a){return="" a.x<this.min.x||a.x="">this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getparameter:function(a,b){return(b||new three.vector3).set((a.x-this.min.x)="" (this.max.x-="" this.min.x),(a.y-this.min.y)="" (this.max.y-this.min.y),(a.z-this.min.z)="" (this.max.z-this.min.z))},isintersectionbox:function(a){return="" a.max.x<this.min.x||a.min.x="">this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error("three.matrix3: 0="==c&&(c=0);void" the="" constructor="" no="" longer="" reads="" arguments.="" use="" .set()="" instead.")};="" three.matrix3.prototype="{constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var" n="this.elements;n[0]=a;n[3]=b;n[6]=c;n[1]=d;n[4]=e;n[7]=f;n[2]=g;n[5]=h;n[8]=k;return" this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return="" this},copy:function(a){a="a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return" this},multiplyvector3:function(a){console.warn("three.matrix3:="" .multiplyvector3()="" has="" been="" removed.="" vector.applymatrix3(="" matrix="" )="" instead.");return="" a.applymatrix3(this)},="" multiplyvector3array:function(a){console.warn("three.matrix3:="" .multiplyvector3array()="" renamed.="" matrix.applytovector3array(="" array="" this.applytovector3array(a)},applytovector3array:function(){var="" a="new" three.vector3;return="" function(b,c,d){void="" e="0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return" b}}(),multiplyscalar:function(a){var="" b="this.elements;b[0]*=a;b[3]*=a;b[6]*=" a;b[1]*="a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return" this},determinant:function(){var="" b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getinverse:function(a,b){var="" c="a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];" error("matrix3.getinverse():="" can't="" invert="" matrix,="" determinant="" is="" 0");console.warn("matrix3.getinverse():="" 0");this.identity();return="" this}this.multiplyscalar(1="" c);return="" this},transpose:function(){var="" a,b="this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return" this},flattentoarrayoffset:function(a,b){var="" a[b+5]="c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return" a},getnormalmatrix:function(a){this.getinverse(a).transpose();return="" this},transposeintoarray:function(a){var="" this},fromarray:function(a){this.elements.set(a);return="" this},toarray:function(){var="" three.matrix3).fromarray(this.elements)}};="" three.matrix4="function(){this.elements=new" float32array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error("three.matrix4:="" three.matrix4.prototype="{constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,n,p,q,m,t,s,r){var" u="this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=k;u[6]=n;u[10]=p;u[14]=q;u[3]=m;u[7]=t;u[11]=s;u[15]=r;return" this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return="" this},copy:function(a){this.elements.set(a.elements);return="" this},extractposition:function(a){console.warn("three.matrix4:="" .extractposition()="" renamed="" to="" .copyposition().");return="" this.copyposition(a)},="" copyposition:function(a){var="" this},extractbasis:function(a,b,c){var="" d="this.elements;a.set(d[0],d[1],d[2]);b.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return" this},makebasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return="" this},extractrotation:function(){var="" function(b){var="" f="1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return" this}}(),makerotationfromeuler:function(a){!1="==a" instanceof="" three.euler&&console.error("three.matrix:="" .makerotationfromeuler()="" now="" expects="" euler="" rotation="" rather="" than="" vector3="" and="" order.");var="" k="f*" e,n="c*h,p=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=k+n*d;b[5]=a-p*d;b[9]=-c*g;b[2]=p-a*d;b[6]=n+k*d;b[10]=f*g}else"YXZ"===a.order?(a=g*h,k=g*e,n=d*h,p=d*e,b[0]=a+p*c,b[4]=n*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-n,b[6]=p+a*c,b[10]=f*g):"ZXY"===a.order?(a=g*h,k=g*e,n=d*h,p=d*e,b[0]=a-p*c,b[4]=-f*e,b[8]=n+k*c,b[1]=k+n*c,b[5]=f*h,b[9]=p-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(a=f*h,k=f*e,n=c*h,p=c*e,b[0]=g*h,b[4]=n*d-k,b[8]=a*d+p,b[1]=g*e,b[5]=p*d+a,b[9]=k*d-n,b[2]=-d,b[6]=c*g,b[10]=f*g):" "yzx"="==a.order?(a=f*g,k=f*d,n=c*g,p=c*d,b[0]=g*h,b[4]=p-a*e,b[8]=n*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+n,b[10]=a-p*e):"XZY"===a.order&&(a=f*g,k=f*d,n=c*g,p=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+p,b[5]=f*h,b[9]=k*e-n,b[2]=n*e-k,b[6]=c*h,b[10]=p*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return" this},setrotationfromquaternion:function(a){console.warn("three.matrix4:="" .setrotationfromquaternion()="" .makerotationfromquaternion().");return="" this.makerotationfromquaternion(a)},="" makerotationfromquaternion:function(a){var="" this},lookat:function(){var="" three.vector3,b="new" three.vector3,c="new" function(d,e,f){var="" g="this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f," c).normalize();0="==a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return" this}}(),multiply:function(a,b){return="" void="" 0!="=b?(console.warn("THREE.Matrix4:" .multiply()="" only="" accepts="" one="" argument.="" .multiplymatrices(="" a,="" instead."),this.multiplymatrices(a,b)):this.multiplymatrices(this,a)},multiplymatrices:function(a,b){var="" y*w+c*m+c*t;e[11]="v*z+y*D+C*K+c*Q;e[15]=v*G+y*A+C*L+c*d;return" this},multiplytoarray:function(a,b,c){var="" this},multiplyscalar:function(a){var="" a;b[15]*="a;return" this},multiplyvector3:function(a){console.warn("three.matrix4:="" vector.applymatrix4(="" or="" vector.applyprojection(="" a.applyprojection(this)},multiplyvector4:function(a){console.warn("three.matrix4:="" .multiplyvector4()="" a.applymatrix4(this)},multiplyvector3array:function(a){console.warn("three.matrix4:="" instead.");="" return="" b}}(),rotateaxis:function(a){console.warn("three.matrix4:="" .rotateaxis()="" vector3.transformdirection(="" instead.");a.transformdirection(this)},crossvector:function(a){console.warn("three.matrix4:="" .crossvector()="" a.applymatrix4(this)},determinant:function(){var="" a[3]*(+e*h*p-d*k*p-e*g*q+c*k*q+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*q+e*f*q-d*f*m+d*k*n-e*h*n)+a[11]*(+b*k*p-b*g*m-e*f*p+c*f*m+e*g*n-c*k*n)+a[15]*(-d*g*n-b*h*p+b*g*q+d*f*p-c*f*q+c*h*n)},transpose:function(){var="" a[13]="b;b=a[11];a[11]=a[14];a[14]=b;return" a},getposition:function(){var="" function(){console.warn("three.matrix4:="" .getposition()="" vector3.setfrommatrixposition(="" instead.");var="" a.set(b[12],b[13],b[14])}}(),setposition:function(a){var="" this},getinverse:function(a,b){var="" k*r*y+p*m*d-k*s*d;c[5]="g*r*u-h*s*u+h*m*y-e*r*y-g*m*d+e*s*d;c[9]=h*p*u-g*q*u-h*k*y+e*q*y+g*k*d-e*p*d;c[13]=g*q*m-h*p*m+h*k*s-e*q*s-g*k*r+e*p*r;c[2]=n*r*u-q*t*u+q*m*v-k*r*v-n*m*d+k*t*d;c[6]=h*t*u-f*r*u-h*m*v+e*r*v+f*m*d-e*t*d;c[10]=f*q*u-h*n*u+h*k*v-e*q*v-f*k*d+e*n*d;c[14]=h*n*m-f*q*m-h*k*t+e*q*t+f*k*r-e*n*r;c[3]=p*t*u-n*s*u-p*m*v+k*s*v+n*m*y-k*t*y;c[7]=f*s*u-g*t*u+g*m*v-e*s*v-f*m*y+e*t*y;c[11]=g*n*u-f*p*u-g*k*v+e*p*v+f*k*y-e*n*y;c[15]=f*p*m-g*n*m+g*k*t-e*p*t-f*k*s+e*n*s;c=e*c[0]+k*c[4]+m*c[8]+u*c[12];" if(0="=c){if(b)throw" error("matrix4.getinverse():="" 0");console.warn("matrix4.getinverse():="" this},translate:function(a){console.warn("three.matrix4:="" .translate()="" removed.")},rotatex:function(a){console.warn("three.matrix4:="" .rotatex()="" removed.")},rotatey:function(a){console.warn("three.matrix4:="" .rotatey()="" removed.")},rotatez:function(a){console.warn("three.matrix4:="" .rotatez()="" removed.")},="" rotatebyaxis:function(a,b){console.warn("three.matrix4:="" .rotatebyaxis()="" removed.")},scale:function(a){var="" this},getmaxscaleonaxis:function(){var="" math.sqrt(math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},maketranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,="" 1,c,0,0,0,1);return="" this},makerotationx:function(a){var="" this},makerotationy:function(a){var="" this},makerotationz:function(a){var="" this},makerotationaxis:function(a,b){var="" g+d*h,n*g+c,n*h-d*f,0,k*h-d*g,n*h+d*f,e*h*h+c,0,0,0,0,1);return="" this},makescale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return="" this},compose:function(a,b,c){this.makerotationfromquaternion(b);this.scale(c);this.setposition(a);return="" this},decompose:function(){var="" three.matrix4;return="" function(c,d,e){var="">this.determinant()&&(g=-g);c.x=f[12];
c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,n=1/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=n;b.elements[9]*=n;b.elements[10]*=n;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;
g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,k=c-d,n=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/k;g[9]=0;g[13]=-((c+d)/k);g[2]=0;g[6]=0;g[10]=-2/n;g[14]=-((f+e)/n);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],
a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);
b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),n=c.dot(this.direction),p=-c.dot(b),q=c.lengthSq(),m=Math.abs(1-k*k),t;0<m?(d=k*p-n,e=k*n-p,t=h*m,0<=d?e>=-t?e<=t?(h=1 m,d*="h,e*=h,k=d*(d+k*e+2*n)+e*(k*d+e+2*p)+q):(e=h,d=Math.max(0,-(k*e+n)),k=-d*d+e*(e+2*p)+q):(e=-h,d=Math.max(0,-(k*e+n)),k=-d*d+e*(e+2*p)+q):e<=-t?(d=Math.max(0,-(-k*h+n)),e=0<d?-h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q):e<=t?(d=0,e=Math.min(Math.max(-h,-p),h),k=e*(e+" 2*p)+q):(d="Math.max(0,-(k*h+n)),e=0<d?h:Math.min(Math.max(-h,-p),h),k=-d*d+e*(e+2*p)+q)):(e=0<k?-h:h,d=Math.max(0,-(k*e+n)),k=-d*d+e*(e+2*p)+q);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return" k}}(),isintersectionsphere:function(a){return="" this.distancetopoint(a.center)<="a.radius},intersectSphere:function(){var" a="new" three.vector3;return="" function(b,c){a.subvectors(b.center,this.origin);var="" d="a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;" if(e="">f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectplane:function(a,b){var c="this.distanceToPlane(a);return" null="==c?null:this.at(c,b)}," isintersectionbox:function(){var="" a="new" three.vector3;return="" function(b){return="" null!="=this.intersectBox(b,a)}}(),intersectBox:function(a,b){var" c,d,e,f,g;d="1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var" h="this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c">f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)* g,g*="a.min.z-h.z);if(c">g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0="">d?null:this.at(0<=c?c:d,b)},intersecttriangle:function(){var a="new" three.vector3,b="new" three.vector3,c="new" three.vector3,d="new" three.vector3;return="" function(e,f,g,h,k){b.subvectors(f,e);c.subvectors(g,e);d.crossvectors(b,c);f="this.direction.dot(d);if(0<f){if(h)return" null;h="1}else" if(0="">f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));
if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=math.max(e,d.distancetosquared(b[f]));this.radius=math.sqrt(e);return 0="" this}}(),copy:function(a){this.center.copy(a.center);this.radius="a.radius;return" this},empty:function(){return="">=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<= this.radius*this.radius},distancetopoint:function(a){return="" a.distanceto(this.center)-this.radius},intersectssphere:function(a){var="" b="this.radius+a.radius;return" a.center.distancetosquared(this.center)<="b*b},clampPoint:function(a,b){var" c="this.center.distanceToSquared(a),d=b||new" three.vector3;d.copy(a);c="">this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],n=c[7],p=c[8],q=c[9],m=c[10],t=c[11],s=c[12],r=c[13],u=c[14],c=c[15];b[0].setComponents(f-a,n-g,t-p,c-s).normalize();b[1].setComponents(f+
a,n+g,t+p,c+s).normalize();b[2].setComponents(f+d,n+h,t+q,c+r).normalize();b[3].setComponents(f-d,n-h,t-q,c-r).normalize();b[4].setComponents(f-e,n-k,t-m,c-u).normalize();b[5].setComponents(f+e,n+k,t+m,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsbox:function(){var a="new" three.vector3,b="new" three.vector3;return="" function(c){for(var="" d="this.planes,e=0;6">e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g="f.distanceToPoint(a),f=f.distanceToPoint(b);if(0">g&&0>f)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectline:function(){var a="new" three.vector3;return="" function(b,c){var="" d="c||new" three.vector3,e="b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return" d.copy(b.start)}else="" return="" f="-(b.start.dot(this.normal)+this.constant)/f,0">f||1<f?void 0:d.copy(e).multiplyscalar(f).add(b.start)}}(),="" coplanarpoint:function(a){return(a||new="" three.vector3).copy(this.normal).multiplyscalar(-this.constant)},applymatrix4:function(){var="" a="new" three.vector3,b="new" three.vector3,c="new" three.matrix3;return="" function(d,e){var="" f="e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return" this}}(),translate:function(a){this.constant-="a.dot(this.normal);return" this},equals:function(a){return="" a.normal.equals(this.normal)&&="" a.constant="=this.constant},clone:function(){return(new" three.plane).copy(this)}};="" three.math="{generateUUID:function(){var" .split(""),b="Array(36),c=0,d;return" function(){for(var="" e="0;36">e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},maplinear:function(a,b,c,d,e){return d+(a-b)*(e-d)="" (c-b)},smoothstep:function(a,b,c){if(a<="b)return" 0;if(a="">=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a="">=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=
180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,n,p,q,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getpoint=function(a){e=(this.points.length-1)*a;f=math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
2;n=this.points[c[0]];p=this.points[c[1]];q=this.points[c[2]];m=this.points[c[3]];h=g*g;k=g*h;d.x=b(n.x,p.x,q.x,m.x,g,h,k);d.y=b(n.y,p.y,q.y,m.y,g,h,k);d.z=b(n.z,p.z,q.z,m.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getlength="function(a){var" b,c,d,e="b=b=0,f=new" three.vector3,g="new" three.vector3,h="[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=" a="" c,d="this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var" b,c,d,e,f,g,h="[],k=new" three.vector3,m="this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(k.copy(d).clone());" h.push(k.copy(this.points[b]).clone())}this.points="h}};THREE.Triangle=function(a,b,c){this.a=void" 0!="=a?a:new" three.vector3;this.b="void" three.vector3;this.c="void" three.vector3};three.triangle.normal="function(){var" three.vector3;return="" function(b,c,d,e){e="e||new" three.vector3;e.subvectors(d,c);a.subvectors(b,c);e.cross(a);b="e.lengthSq();return" 0<b?e.multiplyscalar(1="" math.sqrt(b)):e.set(0,0,0)}}();="" three.triangle.barycoordfrompoint="function(){var" three.vector3,b="new" three.vector3,c="new" function(d,e,f,g,h){a.subvectors(g,e);b.subvectors(f,e);c.subvectors(d,e);d="a.dot(a);e=a.dot(b);f=a.dot(c);var" k="b.dot(b);g=b.dot(c);var" n="d*k-e*e;h=h||new" three.vector3;if(0="=n)return" h.set(-2,-1,-1);n="1/n;k=(k*f-e*g)*n;d=(d*g-e*f)*n;return" h.set(1-k-d,d,k)}}();="" three.triangle.containspoint="function(){var" function(b,c,d,e){b="THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return" 0<="b.x&&0<=b.y&&1">=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}}; 0="==this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)," (function(a){a.raycaster="function(b,c,f,g){this.ray=new" a.ray(b,c);this.near="f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var" b="function(a,b){return" a.distance-b.distance},c="function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var" h="a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c" instanceof="" a.perspectivecamera?="" (this.ray.origin.copy(c.position),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(c.position).normalize()):c="" a.orthographiccamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformdirection(c.matrixworld)):console.error("three.raycaster:="" unsupported="" camera="" type.")},intersectobject:function(a,e){var="" f="[];c(a,this,f,e);f.sort(b);return" f},intersectobjects:function(a,e){var="" array)return="" console.log("three.raycaster.intersectobjects:="" objects="" is="" not="" an="" array."),="" f;for(var="" g="0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return" f}}})(three);="" three.object3d="function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=void" 0;this.children="[];this.up=THREE.Object3D.DefaultUp.clone();var" a="new" three.vector3,b="new" three.euler,c="new" three.quaternion,d="new" three.vector3(1,1,1);b.onchange(function(){c.setfromeuler(b,!1)});c.onchange(function(){b.setfromquaternion(c,void="" 0,!1)});object.defineproperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,="" value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}});this.rotationautoupdate="!0;this.matrix=new" three.matrix4;this.matrixworld="new" three.matrix4;this.matrixautoupdate="!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new" three.vector3(0,1,0);="" three.object3d.prototype="{constructor:THREE.Object3D,get" eulerorder(){console.warn("three.object3d:="" .eulerorder="" has="" been="" moved="" to="" .rotation.order.");return="" this.rotation.order},set="" eulerorder(a){console.warn("three.object3d:="" .rotation.order.");this.rotation.order="a},get" usequaternion(){console.warn("three.object3d:="" .usequaternion="" removed.="" the="" library="" now="" uses="" quaternions="" by="" default.")},set="" usequaternion(a){console.warn("three.object3d:="" default.")},="" applymatrix:function(a){this.matrix.multiplymatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setrotationfromaxisangle:function(a,b){this.quaternion.setfromaxisangle(a,b)},setrotationfromeuler:function(a){this.quaternion.setfromeuler(a,!0)},setrotationfrommatrix:function(a){this.quaternion.setfromrotationmatrix(a)},setrotationfromquaternion:function(a){this.quaternion.copy(a)},rotateonaxis:function(){var="" three.quaternion;return="" function(b,c){a.setfromaxisangle(b,="" c);this.quaternion.multiply(a);return="" this}}(),rotatex:function(){var="" three.vector3(1,0,0);return="" function(b){return="" this.rotateonaxis(a,b)}}(),rotatey:function(){var="" three.vector3(0,1,0);return="" this.rotateonaxis(a,b)}}(),rotatez:function(){var="" three.vector3(0,0,1);return="" this.rotateonaxis(a,b)}}(),translateonaxis:function(){var="" three.vector3;return="" function(b,c){a.copy(b).applyquaternion(this.quaternion);this.position.add(a.multiplyscalar(c));="" return="" this}}(),translate:function(a,b){console.warn("three.object3d:="" .translate()="" use="" .translateonaxis(="" axis,="" distance="" )="" instead.");return="" this.translateonaxis(b,a)},translatex:function(){var="" this.translateonaxis(a,b)}}(),translatey:function(){var="" this.translateonaxis(a,b)}}(),translatez:function(){var="" this.translateonaxis(a,="" b)}}(),localtoworld:function(a){return="" a.applymatrix4(this.matrixworld)},worldtolocal:function(){var="" three.matrix4;return="" b.applymatrix4(a.getinverse(this.matrixworld))}}(),lookat:function(){var="" function(b){a.lookat(b,this.position,this.up);this.quaternion.setfromrotationmatrix(a)}}(),add:function(a){if(1<arguments.length){for(var="" this}if(a="==this)return" console.error("three.object3d.add:",="" a,"can't="" be="" added="" as="" child="" of="" itself."),this;a="" three.object3d?(void="" 0!="=a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):console.error("THREE.Object3D.add:",a,"is" instance="" three.object3d.");return="" this},remove:function(a){if(1<arguments.length)for(var="" 0,a.dispatchevent({type:"removed"}),this.children.splice(b,1))},getchildbyname:function(a,="" b){console.warn("three.object3d:="" .getchildbyname()="" renamed="" .getobjectbyname().");return="" this.getobjectbyname(a,b)},getobjectbyid:function(a,b){return="" this.getobjectbyproperty("id",a,b)},getobjectbyname:function(a,b){return="" this.getobjectbyproperty("name",a,b)},getobjectbyproperty:function(a,b,c){if(this[a]="==b)return" this;for(var="" d="0,e=this.children.length;d<e;d++){var" f}},getworldposition:function(a){a="a||new" three.vector3;="" this.updatematrixworld(!0);return="" a.setfrommatrixposition(this.matrixworld)},getworldquaternion:function(){var="" function(c){c="c||new" three.quaternion;this.updatematrixworld(!0);this.matrixworld.decompose(a,c,b);return="" c}}(),getworldrotation:function(){var="" function(b){b="b||new" three.euler;this.getworldquaternion(a);return="" b.setfromquaternion(a,this.rotation.order,!1)}}(),getworldscale:function(){var="" three.quaternion;="" three.vector3;this.updatematrixworld(!0);this.matrixworld.decompose(a,b,c);return="" c}}(),getworlddirection:function(){var="" three.vector3;this.getworldquaternion(a);return="" b.set(0,0,1).applyquaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var="" c;b++)this.children[b].traversevisible(a)}},traverseancestors:function(a){this.parent&&(a(this.parent),this.parent.traverseancestors(a))},updatematrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixworldneedsupdate="!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void" this.matrixworldneedsupdate="!1,a=!0;for(var" d.metadata;b[c.uuid]="d;a.geometries.push(d)}return" c.uuid},d="{},e=function(b){void" c="b.toJSON();delete" c.metadata;d[b.uuid]="c;" a.materials.push(c)}return="" b.uuid},f="function(a){var" three.perspectivecamera?(b.fov="a.fov,b.aspect=a.aspect,b.near=a.near,b.far=a.far):a" three.orthographiccamera?(b.left="a.left,b.right=a.right,b.top=a.top,b.bottom=a.bottom,b.near=a.near,b.far=a.far):a" three.ambientlight?b.color="a.color.getHex():a" three.directionallight?(b.color="a.color.getHex(),b.intensity=a.intensity):a" three.pointlight?(b.color="a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance):a" three.spotlight?(b.color="a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.angle=a.angle,b.exponent=a.exponent):a" three.hemispherelight?(b.color="a.color.getHex(),b.groundColor=a.groundColor.getHex()):a" three.mesh?(b.geometry="c(a.geometry),b.material=e(a.material)):a" three.line?(b.geometry="c(a.geometry),b.material=e(a.material)):a" three.sprite&&(b.material="e(a.material));b.matrix=a.matrix.toArray();if(0<a.children.length){b.children=[];for(var" b};a.object="f(this);return" a},clone:function(a,b){void="" three.object3d);void="" this.rotationautoupdate;a.matrix.copy(this.matrix);a.matrixworld.copy(this.matrixworld);a.matrixautoupdate="this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var" a}};three.eventdispatcher.prototype.apply(three.object3d.prototype);="" three.object3didcount="0;THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d" three.vector3?d:new="" three.vector3;this.vertexnormals="d" array?d:[];this.color="e" three.color?e:new="" three.color;this.vertexcolors="e" array?e:[];this.vertextangents="[];this.materialIndex=void" three.face3.prototype="{constructor:THREE.Face3,clone:function(){var" three.face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialindex="this.materialIndex;for(var" a}};="" three.face4="function(a,b,c,d,e,f,g){console.warn("THREE.Face4" three.face3="" will="" created="" new="" three.face3(a,b,c,e,f,g)};three.bufferattribute="function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};" three.bufferattribute.prototype="{constructor:THREE.BufferAttribute,get" length(){return="" this.array.length},copyat:function(a,b,c){a*="this.itemSize;c*=b.itemSize;for(var" this},setx:function(a,b){this.array[a*this.itemsize]="b;return" this},sety:function(a,b){this.array[a*this.itemsize+1]="b;return" this},setz:function(a,b){this.array[a*this.itemsize+2]="b;return" this},setxy:function(a,b,c){a*="this.itemSize;" this.array[a]="b;this.array[a+1]=c;return" this},setxyz:function(a,b,c,d){a*="this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;return" this},setxyzw:function(a,b,c,d,e){a*="this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return" this},clone:function(){return="" three.bufferattribute(new="" this.array.constructor(this.array),this.itemsize)}};="" three.int8attribute="function(a,b){console.warn("THREE.Int8Attribute" three.bufferattribute(="" array,="" itemsize="" three.bufferattribute(a,b)};three.uint8attribute="function(a,b){console.warn("THREE.Uint8Attribute" three.bufferattribute(a,b)};="" three.uint8clampedattribute="function(a,b){console.warn("THREE.Uint8ClampedAttribute" three.bufferattribute(a,b)};three.int16attribute="function(a,b){console.warn("THREE.Int16Attribute" three.uint16attribute="function(a,b){console.warn("THREE.Uint16Attribute" three.bufferattribute(a,b)};three.int32attribute="function(a,b){console.warn("THREE.Int32Attribute" three.uint32attribute="function(a,b){console.warn("THREE.Uint32Attribute" three.bufferattribute(a,b)};three.float32attribute="function(a,b){console.warn("THREE.Float32Attribute" three.float64attribute="function(a,b){console.warn("THREE.Float64Attribute" three.bufferattribute(a,b)};three.buffergeometry="function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};" three.buffergeometry.prototype="{constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b" three.bufferattribute?(console.warn("three.buffergeometry:="" .addattribute()="" expects="" (="" name,="" attribute="" )."),this.attributes[a]="{array:b,itemSize:c}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return" this.attributes[a]},adddrawcall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void="" three.matrix3).getnormalmatrix(a).applytovector3array(b.array),b.needsupdate="!0)},center:function(){},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var" float32array(9*d.length);this.addattribute("position",new="" three.bufferattribute(k,3));var="" n="new" float32array(9*d.length);this.addattribute("normal",new="" three.bufferattribute(n,3));if(f!="=THREE.NoColors){var" p="new" float32array(9*d.length);this.addattribute("color",new="" three.bufferattribute(p,3))}if(!0="==g){var" q="new" float32array(6*d.length);this.addattribute("uv",new="" three.bufferattribute(q,2))}for(var="" m="0,t=0,s=0;m<d.length;m++,t+=6,s+=9){var" r="d[m],u=c[r.a],v=c[r.b],y=c[r.c];k[s]=u.x;k[s+1]=u.y;k[s+2]=u.z;k[s+3]=v.x;k[s+4]=v.y;k[s+5]=v.z;k[s+6]=y.x;k[s+7]=y.y;k[s+8]=y.z;!0===h?(u=r.vertexNormals[0]," v="r.vertexNormals[1],y=r.vertexNormals[2],n[s]=u.x,n[s+1]=u.y,n[s+2]=u.z,n[s+3]=v.x,n[s+4]=v.y,n[s+5]=v.z,n[s+6]=y.x,n[s+7]=y.y,n[s+8]=y.z):(u=r.normal,n[s]=u.x,n[s+1]=u.y,n[s+2]=u.z,n[s+3]=u.x,n[s+4]=u.y,n[s+5]=u.z,n[s+6]=u.x,n[s+7]=u.y,n[s+8]=u.z);f===THREE.FaceColors?(r=r.color,p[s]=r.r,p[s+1]=r.g,p[s+2]=r.b,p[s+3]=r.r,p[s+4]=r.g,p[s+5]=r.b,p[s+6]=r.r,p[s+7]=r.g,p[s+8]=r.b):f===THREE.VertexColors&&(u=r.vertexColors[0],v=r.vertexColors[1],r=r.vertexColors[2],p[s]=u.r,p[s+1]=u.g,p[s+2]=u.b,p[s+3]=" v.r,p[s+4]="v.g,p[s+5]=v.b,p[s+6]=r.r,p[s+7]=r.g,p[s+8]=r.b);!0===g&&(r=e[0][m][0],u=e[0][m][1],v=e[0][m][2],q[t]=r.x,q[t+1]=r.y,q[t+2]=u.x,q[t+3]=u.y,q[t+4]=v.x,q[t+5]=v.y)}this.computeBoundingSphere();return" this},computeboundingbox:function(){var="" function(){null="==this.boundingBox&&(this.boundingBox=new" three.box3);var="" b||0="==b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox:" computed="" min="" max="" have="" nan="" values.="" "position"="" likely="" values.')}}(),computeboundingsphere:function(){var="" three.box3,b="new" three.sphere);var="" if(c){a.makeempty();for(var="" radius="" nan.="" values.')}}}(),computefacenormals:function(){},computevertexnormals:function(){var="" float32array(b.length),3));else="" for(var="" three.vector3,n="new" three.vector3,p="new" three.vector3,q="new" three.vector3,m="new" three.vector3;if(a.index)for(var="" t="a.index.array,s=0<this.offsets.length?this.offsets:[{start:0,count:t.length,index:0}],r=0,u=s.length;r<u;++r){e=s[r].start;f=s[r].count;" for(d="0,e=b.length;d<e;d+=9)k.fromArray(b,d),n.fromArray(b,d+3),p.fromArray(b,d+6),q.subVectors(p,n),m.subVectors(k,n),q.cross(m),c[d]=q.x,c[d+1]=q.y,c[d+2]=q.z,c[d+3]=q.x,c[d+4]=q.y,c[d+5]=q.z,c[d+6]=q.x,c[d+7]=q.y," c[d+8]="q.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function" a(a,b,c){q.fromarray(d,3*a);m.fromarray(d,3*b);t.fromarray(d,3*c);s.fromarray(f,2*a);r.fromarray(f,2*b);u.fromarray(f,2*c);v="m.x-q.x;y=t.x-q.x;C=m.y-q.y;x=t.y-q.y;F=m.z-q.z;z=t.z-q.z;G=r.x-s.x;E=u.x-s.x;w=r.y-s.y;D=u.y-s.y;A=1/(G*D-E*w);U.set((D*v-w*y)*A,(D*C-w*x)*A,(D*F-w*z)*A);M.set((G*y-E*v)*A,(G*x-E*C)*A,(G*z-E*F)*A);k[a].add(U);k[b].add(U);k[c].add(U);n[a].add(M);n[b].add(M);n[c].add(M)}function" b(a){xa.fromarray(e,="" 3*a);h.copy(xa);qa="k[a];ga.copy(qa);ga.sub(xa.multiplyScalar(xa.dot(qa))).normalize();ea.crossVectors(H,qa);ya=ea.dot(n[a]);$a=0">ya?-1:1;h[4*a]=ga.x;h[4*a+1]=ga.y;h[4*a+2]=ga.z;h[4*a+3]=$a}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,
e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*g),4));for(var h=this.attributes.tangent.array,k=[],n=[],p=0;p<g;p++)k[p]=new 0="==a&&(b=65535);Date.now();a=this.attributes.index.array;" three.vector3,n[p]="new" three.vector3;var="" q="new" three.vector3,m="new" three.vector3,t="new" three.vector3,s="new" three.vector2,r="new" three.vector2,u="new" three.vector2,v,y,c,x,f,z,g,e,w,d,a,u="new" three.vector3,k,l,n,t,q;0="==this.drawcalls.length&&" this.adddrawcall(0,c.length,0);var="" w="this.drawcalls,p=0;for(L=W.length;p<L;++p){K=W[p].start;N=W[p].count;var" o="W[p].index,g=K;for(K+=N;g<K;g+=3)N=O+c[g],T=O+c[g+1],Q=O+c[g+2],a(N,T,Q)}var" ga="new" three.vector3,ea="new" three.vector3,xa="new" three.vector3,h="new" three.vector3,$a,qa,ya,p="0;for(L=W.length;p<L;++p)for(K=W[p].start,N=W[p].count,O=W[p].index,g=K,K+=N;g<K;g+=3)N=O+c[g],T=O+c[g+1],Q=O+c[g+2],b(N),b(T),b(Q)}},computeOffsets:function(a){var" b="a;void" for(var="" c="this.attributes.position.array,d=a.length/3,e=new" uint16array(a.length),f="0,g=0,h=[{start:0,count:0,index:0}],k=h[0],n=0,p=0,q=new" int32array(6),m="new" int32array(c.length),t="new" int32array(c.length),s="0;s<c.length;s++)m[s]=-1,t[s]=-1;for(c=0;c<d;c++){for(var" r="p=0;3">r;r++)s=a[3*c+r],-1==m[s]?(q[2*r]=s,q[2*r+1]=-1,p++):m[s]<k.index?(q[2*r]=s,q[2*r+1]=-1,n++):(q[2*r]=s,q[2*r+1]=m[s]);if(g+p>k.index+b)for(k={start:f,count:0,index:g},h.push(k),p=0;6>p;p+=2)r=q[p+1],-1<r&&r<k.index&&(q[p+1]= -1);for(p="0;6">p;p+=2)s=q[p],r=q[p+1],-1===r&&(r=g++),m[s]=r,t[r]=s,e[f++]=r-k.index,k.count++}this.reorderBuffers(e,t,g);return this.offsets=h},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);else{void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},="" normalizenormals:function(){for(var="" a="this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var" d="{},e;for(e" in="" this.attributes)"index"!="e&&(d[e]=new" this.attributes[e].array.constructor(this.attributes[e].itemsize*c));for(var="" f="0;f<c;f++){var" g="b[f];for(e" this.attributes)if("index"!="e)for(var" h="this.attributes[e].array,k=this.attributes[e].itemSize,n=d[e],p=0;p<k;p++)n[f*k+p]=h[g*" k+p]}this.attributes.index.array="a;for(e" b){for(var="" array:g}}0<c.length&&(a.data.offsets="JSON.parse(JSON.stringify(c)));null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius});return" a},clone:function(){var="" three.buffergeometry,b;for(b="" this.attributes)a.addattribute(b,this.attributes[b].clone());b="0;for(var" c="this.offsets.length;b<c;b++){var" a},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.buffergeometry.prototype);="" three.geometry="function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=" this.tangentsneedupdate="this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};" three.geometry.prototype="{constructor:THREE.Geometry,applyMatrix:function(a){for(var" b="(new" three.matrix3).getnormalmatrix(a),c="0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var" e="0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox" instanceof="" three.box3&&this.computeboundingbox();this.boundingsphere="" three.sphere&&this.computeboundingsphere()},="" frombuffergeometry:function(a){for(var="" 0!="=c.index?c.index.array:void" 0,f="void" 0,g="void" 0,h="void" 0,k="[],n=[],p=c=0;c<d.length;c+=3,p+=2)b.vertices.push(new" three.vector3(d[c],d[c+1],d[c+2])),void="" three.vector3(f[c],f[c+1],f[c+2])),void="" three.color(g[c],g[c+1],g[c+2])),void="" three.vector2(h[p],h[p+1]));p="function(a,c,d){var" three.face3(a,c,d,e,p));void="" for(c="0;c<d.length/3;c+=3)p(c,c+1,c+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=" a.boundingsphere.clone());return="" this},center:function(){this.computeboundingbox();var="" three.vector3;a.addvectors(this.boundingbox.min,this.boundingbox.max);a.multiplyscalar(-.5);this.applymatrix((new="" three.matrix4).maketranslation(a.x,a.y,a.z));this.computeboundingbox();return="" a},computefacenormals:function(){for(var="" three.vector3,b="new" three.vector3,c="0,d=this.faces.length;c<d;c++){var" g);a.cross(b);a.normalize();e.normal.copy(a)}},computevertexnormals:function(a){var="" b,c,d;d="Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new" three.vector3;if(a){var="" e,f,g,h="new" three.vector3,k="new" three.vector3;new="" three.vector3;a="0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else" for(a="0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var" a,b,c,d,e;c="0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=" e.normal.clone(),e.__originalvertexnormals||(e.__originalvertexnormals="[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var" three.geometry;f.faces="this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var" three.vector3,b:new="" three.vector3,c:new="" three.vector3},e.push(h),g.push(k)}g="this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<" d;c++)e="this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var" a,b,c,d,e,f,g,h,k,n,p,q,m,t,s,r,u,v="[],y=[];c=new" three.vector3;var="" three.vector3,x="new" three.vector3,f="new" three.vector3,z="new" three.vector3,y[a]="new" n="f[0],p=f[1],q=f[2],f=h.x-g.x,m=k.x-g.x,t=h.y-g.y,s=k.y-g.y,h=h.z-g.z,g=k.z-g.z,k=p.x-n.x,r=q.x-n.x,p=p.y-n.y,n=q.y-n.y,q=1/(k*n-r*p),c.set((n*f-p*m)*q,(n*t-p*s)*q,(n*h-p*g)*q),C.set((k*m-r*f)*q,(k*s-r*t)*q,(k*g-r*h)*q),v[d].add(c),v[u].add(c),v[e].add(c),y[d].add(C),y[u].add(C),y[e].add(C);C=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)z.copy(e.vertexNormals[c]),d=e[C[c]],u=v[d],x.copy(u),x.sub(z.multiplyScalar(z.dot(u))).normalize()," f.crossvectors(e.vertexnormals[c],u),d="F.dot(y[d]),d=0">d?-1:1,e.vertexTangents[c]=new THREE.Vector4(x.x,x.y,x.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceto(b[c-1])),this.linedistances[c]=a},computeboundingbox:function(){null===this.boundingbox&&(this.boundingbox=new 0="==c&&(c=0);void" three.box3);this.boundingbox.setfrompoints(this.vertices)},computeboundingsphere:function(){null="==this.boundingSphere&&(this.boundingSphere=new" three.sphere);="" this.boundingsphere.setfrompoints(this.vertices)},merge:function(a,b,c){if(!1="==a" instanceof="" three.geometry)console.error("three.geometry.merge():="" geometry="" not="" an="" instance="" of="" three.geometry.",a);else{var="" d,e="this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,n=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void" 0!="=b&&(d=(new" three.matrix3).getnormalmatrix(b));for(var="" p="0,q=g.length;p<q;p++){var" m="g[p].clone();void" q;p++){var="" g="k[p],t,s=g.vertexNormals,r=g.vertexColors,m=new" three.face3(g.a+e,g.b+e,g.c+e);m.normal.copy(g.normal);void="" n.push(d)}}},mergemesh:function(a){!1="==a" three.mesh?console.error("three.geometry.mergemesh():="" mesh="" three.mesh.",a):(a.matrixautoupdate&&a.updatematrix(),this.merge(a.geometry,a.matrix))},mergevertices:function(){var="" a="{},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void" g;f++)for(e="this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3">d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.facevertexuvs.length;c<g;c++)this.facevertexuvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return 0="==a.faceVertexUvs[c]&&(a.faceVertexUvs[c]=[]);for(var" f},tojson:function(){function="" a(a,b,c){return="" c?a|1<<b:a&~(1<<b)}function="" b(a){var="" b="a.x.toString()+a.y.toString()+a.z.toString();if(void" 0!="=n[b])return" n[b];n[b]="k.length/3;k.push(a.x,a.y," a.z);return="" n[b]}function="" c(a){var="" q[b];q[b]="p.length;p.push(a.getHex());return" q[b]}function="" d(a){var="" t[b];t[b]="m.length/2;m.push(a.x,a.y);return" t[b]}var="" e="{metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(e.name=this.name);if(void" f="this.parameters,g;for(g" in="" f)void="" f[g]&&(e[g]="f[g]);return" e}f="[];for(g=0;g<this.vertices.length;g++){var" h="this.vertices[g];f.push(h.x,h.y,h.z)}var" s="this.faces[g],r=void" h.push(d(r[0]),d(r[1]),d(r[2])));u&&h.push(b(s.normal));v&&(u="s.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));y&&h.push(c(s.color));C&&(s=s.vertexColors,h.push(c(s[0]),c(s[1]),c(s[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<p.length&&(e.data.colors=p);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return" e},clone:function(){for(var="" a="new" three.geometry,b="this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());c=0;" for(d="this.faceVertexUvs.length;c<d;c++){b=this.faceVertexUvs[c];void" g="b[e],h=[],k=0,n=g.length;k<n;k++)h.push(g[k].clone());a.faceVertexUvs[c].push(h)}}return" a},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.geometry.prototype);three.geometryidcount="0;" three.camera="function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new" three.matrix4;this.projectionmatrix="new" three.matrix4};three.camera.prototype="Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var" three.quaternion;return="" function(b){b="b||new" three.vector3;this.getworldquaternion(a);return="" b.set(0,0,-1).applyquaternion(a)}}();="" three.camera.prototype.lookat="function(){var" three.matrix4;return="" function(b){a.lookat(this.position,b,this.up);this.quaternion.setfromrotationmatrix(a)}}();three.camera.prototype.clone="function(a){void" three.camera);three.object3d.prototype.clone.call(this,a);a.matrixworldinverse.copy(this.matrixworldinverse);a.projectionmatrix.copy(this.projectionmatrix);return="" a};="" three.cubecamera="function(a,b,c){THREE.Object3D.call(this);this.type="CubeCamera";var" d="new" three.perspectivecamera(90,1,a,b);d.up.set(0,-1,0);d.lookat(new="" three.vector3(1,0,0));this.add(d);var="" three.perspectivecamera(90,1,a,b);e.up.set(0,-1,0);e.lookat(new="" three.vector3(-1,0,0));this.add(e);var="" three.perspectivecamera(90,1,a,b);f.up.set(0,0,1);f.lookat(new="" three.vector3(0,1,0));this.add(f);var="" three.perspectivecamera(90,1,a,b);g.up.set(0,0,-1);g.lookat(new="" three.vector3(0,-1,0));="" this.add(g);var="" three.perspectivecamera(90,1,a,b);h.up.set(0,-1,0);h.lookat(new="" three.vector3(0,0,1));this.add(h);var="" k="new" three.perspectivecamera(90,1,a,b);k.up.set(0,-1,0);k.lookat(new="" three.vector3(0,0,-1));this.add(k);this.rendertarget="new" three.webglrendertargetcube(c,c,{format:three.rgbformat,magfilter:three.linearfilter,minfilter:three.linearfilter});this.updatecubemap="function(a,b){var" c="this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=" 1;a.render(b,e,c);c.activecubeface="2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,k,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;" three.orthographiccamera="function(a,b,c,d,e,f){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void" three.orthographiccamera.prototype.updateprojectionmatrix="function(){var" three.orthographiccamera.prototype.clone="function(){var" three.orthographiccamera;three.camera.prototype.clone.call(this,a);a.zoom="this.zoom;a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return" three.perspectivecamera="function(a,b,c,d){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=void" three.perspectivecamera.prototype.setlens="function(a,b){void" three.perspectivecamera.prototype.updateprojectionmatrix="function(){var" this.projectionmatrix.makeperspective(a,="" this.aspect,this.near,this.far)};three.perspectivecamera.prototype.clone="function(){var" three.perspectivecamera;three.camera.prototype.clone.call(this,a);a.zoom="this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return" a};three.light="function(a){THREE.Object3D.call(this);this.type="Light";this.color=new" three.color(a)};three.light.prototype="Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;" three.light.prototype.clone="function(a){void" three.light);three.object3d.prototype.clone.call(this,a);a.color.copy(this.color);return="" a};three.ambientlight="function(a){THREE.Light.call(this,a);this.type="AmbientLight"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.clone=function(){var" three.ambientlight;three.light.prototype.clone.call(this,a);return="" three.arealight="function(a,b){THREE.Light.call(this,a);this.type="AreaLight";this.normal=new" three.vector3(0,-1,0);this.right="new" three.vector3(1,0,0);this.intensity="void" three.directionallight="function(a,b){THREE.Light.call(this,a);this.type="DirectionalLight";this.position.set(0,1,0);this.target=new" three.object3d;this.intensity="void" this.shadowcascadeoffset="new" three.vector3(0,0,-1e3);this.shadowcascadecount="2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;" three.directionallight.prototype.clone="function(){var" three.directionallight;three.light.prototype.clone.call(this,a);a.target="this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=" this.shadowcameravisible;a.shadowbias="this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);" a.shadowcascadefarz="this.shadowCascadeFarZ.slice(0);return" a};three.hemispherelight="function(a,b,c){THREE.Light.call(this,a);this.type="HemisphereLight";this.position.set(0,100,0);this.groundColor=new" three.color(b);this.intensity="void" three.hemispherelight.prototype.clone="function(){var" three.hemispherelight;three.light.prototype.clone.call(this,a);a.groundcolor.copy(this.groundcolor);a.intensity="this.intensity;return" a};three.pointlight="function(a,b,c){THREE.Light.call(this,a);this.type="PointLight";this.intensity=void" three.pointlight.prototype.clone="function(){var" three.pointlight;three.light.prototype.clone.call(this,a);a.intensity="this.intensity;a.distance=this.distance;return" three.spotlight="function(a,b,c,d,e){THREE.Light.call(this,a);this.type="SpotLight";this.position.set(0,1,0);this.target=new" this.shadowcamera="this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;" three.spotlight.prototype.clone="function(){var" three.spotlight;three.light.prototype.clone.call(this,a);a.target="this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=" this.shadowdarkness;a.shadowmapwidth="this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return" a};three.cache="function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(a,b){this.files[a]=b},get:function(a){return" this.files[a]},remove:function(a){delete="" this.files[a]},clear:function(){this.files="{}}};" three.loader="function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new" three.imageloader;this.onloadstart="function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};" three.loader.prototype="{constructor:THREE.Loader,crossOrigin:void" 0,addstatuselement:function(){var="" 0.5em="" 0.5em";a.style.zindex="1E3;a.innerHTML="Loading" ...";return="" a},updateprogress:function(a){var="" ,b="a.total?b+((100*a.loaded/a.total).toFixed(0)+" "%"):b+((a.loaded="" 1024).tofixed(2)+"="" kb");this.statusdomelement.innerhtml="b},extractUrlBase:function(a){a=a.split("/");if(1===a.length)return"./";a.pop();return" a.join("="" ")+"="" "},initmaterials:function(a,b){for(var="" c},needstangents:function(a){for(var="" three.shadermaterial)return!0;return!1},creatematerial:function(a,b){function="" c(a){a="Math.log(a)/Math.LN2;return" math.pow(2,math.round(a))}function="" d(a,="" d,e,g,h,k,r){var="" u="b+e,v,y=THREE.Loader.Handlers.get(u);null!==y?v=y.load(u):(v=new" three.texture,y="f.imageLoader,y.crossOrigin=f.crossOrigin,y.load(u,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var" v.image="a;v.needsUpdate=!0}));v.sourceFile=e;g&&(v.repeat.set(g[0],g[1]),1!==g[0]&&(v.wrapS=THREE.RepeatWrapping)," 1!="=g[1]&&(v.wrapT=THREE.RepeatWrapping));h&&v.offset.set(h[0],h[1]);k&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void" e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var="" "basic"="==k&&(g="MeshBasicMaterial")}void">a.opacity)h.transparent=a.transparent;void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===
a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=e(a.colorSpecular));a.colorAmbient&&(h.ambient=e(a.colorAmbient));a.colorEmissive&&(h.emissive=e(a.colorEmissive));a.transparency&&(h.opacity=a.transparency);a.specularCoef&&(h.shininess=a.specularCoef);a.mapDiffuse&&b&&d(h,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,
a.mapDiffuseAnisotropy);a.mapLight&&b&&d(h,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&d(h,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&d(h,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&d(h,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&
b&&d(h,"alphaMap",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormalFactor&&(h.normalScale=new THREE.Vector2(a.mapNormalFactor,a.mapNormalFactor));g=new THREE[g](h);void 0!==a.DbgName&&(g.name=a.DbgName);return g}};THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d="this.handlers[b+1];if(this.handlers[b].test(a))return" d}return="" null}};="" three.xhrloader="function(a){this.cache=new" three.cache;this.manager="void" 0!="=a?a:THREE.DefaultLoadingManager};" three.xhrloader.prototype="{constructor:THREE.XHRLoader,load:function(a,b,c,d){var" e="this,f=e.cache.get(a);void" xmlhttprequest,f.open("get",a,!0),f.addeventlistener("load",function(c){e.cache.add(a,this.response);b&&b(this.response);e.manager.itemend(a)},!1),void="" this.responsetype),f.send(null),e.manager.itemstart(a))},setresponsetype:function(a){this.responsetype="a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.cache=new" three.imageloader.prototype="{constructor:THREE.ImageLoader,load:function(a,b,c,d){var" return="" f="document.createElement("img"),void" a}};three.jsonloader="function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof" c?c:this.extracturlbase(a);this.onloadstart();this.loadajaxjson(this,a,b,c)};="" three.jsonloader.prototype.loadajaxjson="function(a,b,c,d,e){var" xmlhttprequest,g="0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var" h="JSON.parse(f.responseText);if(void" "'+b+'"="" seems="" to="" be="" a="" scene.="" use="" three.sceneloader="" instead.');return}h="a.parse(h,d);c(h.geometry,h.materials)}else" console.error('three.jsonloader:="" unreachable="" or="" the="" file="" is="" empty.');="" a.onloadcomplete()}else="" console.error("three.jsonloader:="" couldn't="" load="" \""+b+'"="" ('+f.status+")");else="" f.readystate="==f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void" three.jsonloader.prototype.parse="function(a,b){var" c="new" three.geometry,d="void" d,g,h,k,n,p,q,m,t,s,r,u,v,y="a.faces;p=a.vertices;var" three.vector3,d.x="p[k++]*b,d.y=p[k++]*b,d.z=p[k++]*b,c.vertices.push(d);k=0;for(n=y.length;k<n;)if(b=y[k++],t=b&1,h=b&2,d=b&8,q=b&16,s=b&32,p=b&64,b&=128,t){t=new" three.face3;="" t.a="y[k];t.b=y[k+1];t.c=y[k+3];r=new" three.face3;r.a="y[k+1];r.b=y[k+2];r.c=y[k+3];k+=4;h&&(h=y[k++],t.materialIndex=h,r.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<F;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4">g;g++)m=y[k++],v=u[2*m],m=u[2*m+1],v=new THREE.Vector2(v,m),2!==g&&c.faceVertexUvs[d][h].push(v),0!==g&&c.faceVertexUvs[d][h+1].push(v);q&&(q=3*y[k++],t.normal.set(C[q++],C[q++],C[q]),r.normal.copy(t.normal));if(s)for(d=0;4>d;d++)q=3*y[k++],s=new THREE.Vector3(C[q++],
C[q++],C[q]),2!==d&&t.vertexNormals.push(s),0!==d&&r.vertexNormals.push(s);p&&(p=y[k++],p=x[p],t.color.setHex(p),r.color.setHex(p));if(b)for(d=0;4>d;d++)p=y[k++],p=x[p],2!==d&&t.vertexColors.push(new THREE.Color(p)),0!==d&&r.vertexColors.push(new THREE.Color(p));c.faces.push(t);c.faces.push(r)}else{t=new THREE.Face3;t.a=y[k++];t.b=y[k++];t.c=y[k++];h&&(h=y[k++],t.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<f;d++)for(u=a.uvs[d],c.facevertexuvs[d][h]=[],g=0;3>g;g++)m=y[k++],v=u[2*m],m=u[2*m+1],
v=new THREE.Vector2(v,m),c.faceVertexUvs[d][h].push(v);q&&(q=3*y[k++],t.normal.set(C[q++],C[q++],C[q]));if(s)for(d=0;3>d;d++)q=3*y[k++],s=new THREE.Vector3(C[q++],C[q++],C[q]),t.vertexNormals.push(s);p&&(p=y[k++],t.color.setHex(x[p]));if(b)for(d=0;3>d;d++)p=y[k++],t.vertexColors.push(new THREE.Color(x[p]));c.faces.push(t)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinweights.push(new 0="==a.materials||0===a.materials.length)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,materials:d}};" 1="" three.vector4(a.skinweights[d],="" 1<b?a.skinweights[d+1]:0,2<b?a.skinweights[d+2]:0,3<b?a.skinweights[d+3]:0));if(a.skinindices)for(d="0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new" three.vector4(a.skinindices[d],1<b?a.skinindices[d+1]:0,2<b?a.skinindices[d+2]:0,3<b?a.skinindices[d+3]:0));c.bones="a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn("When" skinning,="" number="" of="" vertices="" ("+c.vertices.length+"),="" skinindices="" ("+c.skinindices.length+="" "),="" and="" skinweights="" ("+c.skinweights.length+")="" should="" match.");c.animation="a.animation;c.animations=a.animations})();(function(b){if(void" 0!="=a.morphTargets){var" d,g,h,k,n,p;d="0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],n=c.morphTargets[d].vertices,p=a.morphTargets[d].vertices,h=0,k=p.length;h<k;h+=3){var" q="new" three.vector3;q.x="p[h]*b;q.y=p[h+1]*b;q.z=p[h+2]*b;n.push(q)}}if(void" 0,g="a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,n=a.morphColors[d].colors,b=0,h=n.length;b<h;b+=3)p=new" three.color(16755200),p.setrgb(n[b],n[b+1],n[b+2]),k.push(p)})(d);c.computefacenormals();c.computeboundingsphere();if(void="" three.loadingmanager="function(a,b,c){var" d="this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void" three.loadingmanager;three.buffergeometryloader="function(a){this.manager=void" three.buffergeometryloader.prototype="{constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var" e="this,f=new" three.xhrloader(e.manager);f.setcrossorigin(this.crossorigin);f.load(a,function(a){b(e.parse(json.parse(a)))},c,d)},setcrossorigin:function(a){this.crossorigin="a},parse:function(a){var" b="new" three.buffergeometry,c="a.attributes,d;for(d" in="" c){var="" self[e.type](e.array);b.addattribute(d,new="" three.bufferattribute(f,e.itemsize))}c="a.offsets;void" a="a.boundingSphere;void" three.vector3,void="" three.sphere(c,a.radius));return="" b}};three.materialloader="function(a){this.manager=void" three.materialloader.prototype="{constructor:THREE.MaterialLoader,load:function(a,b,c,d){var" three[a.type];void="" void="" (b.wireframe="a.wireframe);if(void" c="0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return" b}};three.objectloader="function(a){this.manager=void" three.objectloader.prototype="{constructor:THREE.ObjectLoader,load:function(a,b,c,d){var" this.parseobject(a.object,b,c)},parsegeometries:function(a){var="" three.jsonloader,d="new" three.buffergeometryloader,="" g,h="a[e];switch(h.type){case" "planegeometry":g="new" three.planegeometry(h.width,h.height,h.widthsegments,h.heightsegments);break;case="" "boxgeometry":case="" "cubegeometry":g="new" three.boxgeometry(h.width,h.height,h.depth,h.widthsegments,h.heightsegments,h.depthsegments);break;case="" "circlegeometry":g="new" three.circlegeometry(h.radius,h.segments);break;case="" "cylindergeometry":g="new" three.cylindergeometry(h.radiustop,h.radiusbottom,h.height,h.radialsegments,h.heightsegments,h.openended);="" break;case="" "spheregeometry":g="new" three.spheregeometry(h.radius,h.widthsegments,h.heightsegments,h.phistart,h.philength,h.thetastart,h.thetalength);break;case="" "icosahedrongeometry":g="new" three.icosahedrongeometry(h.radius,h.detail);break;case="" "torusgeometry":g="new" three.torusgeometry(h.radius,h.tube,h.radialsegments,h.tubularsegments,h.arc);break;case="" "torusknotgeometry":g="new" three.torusknotgeometry(h.radius,h.tube,h.radialsegments,h.tubularsegments,h.p,h.q,h.heightscale);break;case="" "buffergeometry":g="d.parse(h.data);break;case" "geometry":g="c.parse(h.data).geometry}g.uuid=h.uuid;void" b},parsematerials:function(a){var="" three.materialloader,d="0,e=a.length;d<e;d++){var" f="a[d],g=c.parse(f);g.uuid=f.uuid;void" b},parseobject:function(){var="" three.matrix4;return="" function(b,c,d){var="" e;switch(b.type){case="" "scene":e="new" three.scene;break;case="" "perspectivecamera":e="new" three.perspectivecamera(b.fov,="" b.aspect,b.near,b.far);break;case="" "orthographiccamera":e="new" three.orthographiccamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case="" "ambientlight":e="new" three.ambientlight(b.color);break;case="" "directionallight":e="new" three.directionallight(b.color,b.intensity);break;case="" "pointlight":e="new" three.pointlight(b.color,b.intensity,b.distance);break;case="" "spotlight":e="new" three.spotlight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case="" "hemispherelight":e="new" three.hemispherelight(b.color,="" b.groundcolor,b.intensity);break;case="" "mesh":e="c[b.geometry];var" undefined="" geometry",b.geometry);void="" material",b.material);e="new" three.mesh(e,f);break;case="" "line":e="c[b.geometry];f=d[b.material];void" three.line(e,f);break;case="" "sprite":f="d[b.material];void" three.sprite(f);break;case="" "group":e="new" three.group;break;default:e="new" three.object3d}e.uuid="b.uuid;void" b.visible);void="" g="" b.children)e.add(this.parseobject(b.children[g],c,d));return="" e}}()};three.textureloader="function(a){this.manager=void" three.textureloader.prototype="{constructor:THREE.TextureLoader,load:function(a,b,c,d){var" three.imageloader(this.manager);e.setcrossorigin(this.crossorigin);e.load(a,function(a){a="new" three.texture(a);a.needsupdate="!0;void" three.binarytextureloader.prototype="{constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var" three.datatexture,g="new" three.xhrloader;g.setresponsetype("arraybuffer");g.load(a,function(a){if(a="e._parser(a))void" three.linearfilter,f.minfilter="void" f}};three.compressedtextureloader="function(){this._parser=null};" three.compressedtextureloader.prototype="{constructor:THREE.CompressedTextureLoader,load:function(a,b,c){var" three.compressedtexture;f.image="e;var" three.xhrloader;g.setresponsetype("arraybuffer");if(a="" instanceof="" array){var="" h="0;c=function(c){g.load(a[c],function(a){a=d._parser(a,!0);e[c]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};h+=1;6===h&&(1==a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=a.format,f.needsUpdate=!0,b&&b(f))})};for(var" k="0,n=" a.length;k<n;++k)c(k)}else="" g.load(a,function(a){a="d._parser(a,!0);if(a.isCubemap)for(var" f.image.width="a.width,f.image.height=a.height,f.mipmaps=a.mipmaps;1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter);f.format=a.format;f.needsUpdate=!0;b&&b(f)});return" f}};="" three.material="function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=" 0;this.needsupdate="this.visible=!0};" three.material.prototype="{constructor:THREE.Material,setValues:function(a){if(void" a){var="" '"+b+"'="" parameter="" is="" undefined.");else="" if(b="" this){var="" three.color?d.set(c):d="" three.vector3&&c="" three.vector3?d.copy(c):this[b]="overdraw" =="b?Number(c):c}}},toJSON:function(){var" (a.name="this.name);this" three.meshbasicmaterial?(a.color="this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this" three.meshlambertmaterial?(a.color="this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&" (a.blending="this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this" three.meshphongmaterial?(a.color="this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this" three.meshnormalmaterial?(this.shading!="=" three.flatshading&&(a.shading="this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this" three.meshdepthmaterial?(this.blending!="=THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this" three.shadermaterial?(a.uniforms="this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this" three.spritematerial&&(a.color="this.color.getHex());">this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=
this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;
a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=
1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;
a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=
THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=a instanceof Array?a:[]};
THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].tojson());return 0="==a&&(a=new" a},clone:function(){for(var="" a="new" three.meshfacematerial,b="0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return" a}};="" three.pointcloudmaterial="function(a){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new" three.color(16777215);this.map="null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;" three.pointcloudmaterial.prototype.clone="function(){var" three.pointcloudmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.map="this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return" a};three.particlebasicmaterial="function(a){console.warn("THREE.ParticleBasicMaterial" has="" been="" renamed="" to="" three.pointcloudmaterial.");return="" new="" three.pointcloudmaterial(a)};="" three.particlesystemmaterial="function(a){console.warn("THREE.ParticleSystemMaterial" three.shadermaterial="function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void" main()="" {\n\tgl_position="projectionMatrix" *="" modelviewmatrix="" vec4(="" position,="" 1.0="" );\n}";this.fragmentshader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}" ;this.shading="THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=" this.morphtargets="this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void" 0;this.setvalues(a)};three.shadermaterial.prototype="Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;" three.shadermaterial.prototype.clone="function(){var" three.shadermaterial;three.material.prototype.clone.call(this,a);a.fragmentshader="this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=" this.morphtargets;a.morphnormals="this.morphNormals;return" a};three.rawshadermaterial="function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var" three.rawshadermaterial;three.shadermaterial.prototype.clone.call(this,a);return="" a};="" three.spritematerial="function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new" three.spritematerial.prototype.clone="function(){var" three.spritematerial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.map="this.map;a.rotation=this.rotation;a.fog=this.fog;return" three.texture="function(a,b,c,d,e,f,g,h,k){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.image=void" 0!="=a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void" void="" three.vector2(0,0);this.repeat="new" three.vector2(1,1);this.generatemipmaps="!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void" 0;three.texture.default_mapping="THREE.UVMapping;" three.texture.prototype="{constructor:THREE.Texture,get" needsupdate(){return="" this._needsupdate},set="" needsupdate(a){!0="==a&&this.update();this._needsUpdate=a},clone:function(a){void" three.texture);a.image="this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=" this.generatemipmaps;a.premultiplyalpha="this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return" a},update:function(){this.dispatchevent({type:"update"})},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.texture.prototype);three.textureidcount="0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k){b=void" three.cubetexture.prototype="Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.clone=function(a){void" three.cubetexture);three.texture.prototype.clone.call(this,a);a.images="this.images;return" a};three.compressedtexture="function(a,b,c,d,e,f,g,h,k,n,p){THREE.Texture.call(this,null,f,g,h,k,n,d,e,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);" three.compressedtexture.prototype.constructor="THREE.CompressedTexture;THREE.CompressedTexture.prototype.clone=function(){var" three.compressedtexture;three.texture.prototype.clone.call(this,a);return="" a};three.datatexture="function(a,b,c,d,e,f,g,h,k,n,p){THREE.Texture.call(this,null,f,g,h,k,n,d,e,p);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;" three.datatexture.prototype.clone="function(){var" three.datatexture;three.texture.prototype.clone.call(this,a);return="" a};three.videotexture="function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var" n="this,p=function(){requestAnimationFrame(p);a.readyState===a.HAVE_ENOUGH_DATA&&(n.needsUpdate=!0)};p()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;" three.group="function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type="PointCloud";this.geometry=void" three.geometry;this.material="void" three.pointcloudmaterial({color:16777215*math.random()})};three.pointcloud.prototype="Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.constructor=THREE.PointCloud;" three.pointcloud.prototype.raycast="function(){var" three.matrix4,b="new" three.ray;return="" function(c,d){var="" e="this,f=e.geometry,g=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var" h="g/((this.scale.x+this.scale.y+this.scale.z)/3),k=new" three.vector3,g="function(a,f){var" g="b.distanceToPoint(a);if(g<h){var" k="b.closestPointToPoint(a);k.applyMatrix4(e.matrixWorld);var" m="c.ray.origin.distanceTo(k);" d.push({distance:m,distancetoray:g,point:k.clone(),index:f,face:null,object:e})}};if(f="" instanceof="" three.buffergeometry){var="" s="q[m].start,r=q[m].index,f=s,s=s+q[m].count;f<s;f++){var" u="r+n[f];k.fromArray(p,3*u);g(k,u)}}else" for(n="p.length/3,f=0;f<n;f++)k.set(p[3*f],p[3*f+1],p[3*f+2]),g(k,f)}else" for(k="this.geometry.vertices," f="0;f<k.length;f++)g(k[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void" three.pointcloud(this.geometry,this.material));three.object3d.prototype.clone.call(this,a);return="" a};three.particlesystem="function(a,b){console.warn("THREE.ParticleSystem" three.pointcloud.");return="" three.pointcloud(a,b)};="" three.line="function(a,b,c){THREE.Object3D.call(this);this.type="Line";this.geometry=void" three.linebasicmaterial({color:16777215*math.random()});this.mode="void" three.line.prototype.raycast="function(){var" three.ray,c="new" three.sphere;return="" function(d,e){var="" three.vector3,k="new" three.vector3,n="new" three.vector3,p="new" three.vector3,q="this.mode===THREE.LineStrip?1:2;if(g" t="m.index.array,m=m.position.array,s=g.offsets;0===s.length&&(s=[{start:0,count:t.length,index:0}]);for(var" r="0;r<s.length;r++)for(var" c="y+t[g+1];h.fromArray(m,3*(y+t[g]));k.fromArray(m,3*C);C=b.distanceSqToSegment(h,k,p,n);C">f||(C=b.origin.distanceTo(p),C<d.near||c>d.far||e.push({distance:C,point:n.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this}))}}else for(m=
m.position.array,g=0;g<m.length 3-1;g+="q)h.fromArray(m,3*g),k.fromArray(m,3*g+3),C=b.distanceSqToSegment(h,k,p,n),C">f||(C=b.origin.distanceTo(p),C<d.near||c>d.far||e.push({distance:C,point:n.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(h=g.vertices,k=h.length,g=0;g<k-1;g+=q)c=b.distancesqtosegment(h[g],h[g+1],p,n),c>f||(C=b.origin.distanceTo(p),C<d.near||c>d.far||e.push({distance:C,point:n.clone().applyMatrix4(this.matrixWorld),
face:null,faceIndex:null,object:this}))}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphtargets.length){this.morphtargetbase=-1;this.morphtargetforcedorder=[];this.morphtargetinfluences=[];this.morphtargetdictionary={};for(var a="0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};" three.mesh.prototype.getmorphtargetindexbyname="function(a){if(void" 0!="=this.morphTargetDictionary[a])return" this.morphtargetdictionary[a];console.log("three.mesh.getmorphtargetindexbyname:="" morph="" target="" "+a+"="" does="" not="" exist.="" returning="" 0.");return="" 0};="" three.mesh.prototype.raycast="function(){var" three.matrix4,b="new" three.ray,c="new" three.sphere,d="new" three.vector3,e="new" three.vector3,f="new" three.vector3;return="" function(g,h){var="" k="this.geometry;null===k.boundingSphere&&k.computeBoundingSphere();c.copy(k.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===k.boundingBox||!1!==b.isIntersectionBox(k.boundingBox)))if(k" instanceof="" three.buffergeometry){var="" n="this.material;if(void" p="k.attributes,q,m,t=g.precision;if(void" s="p.index.array,r=p.position.array,u=k.offsets;0===u.length&&(u=[{start:0,count:s.length,index:0}]);for(var" v="0,y=u.length;v<y;++v)for(var" f="n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide);if(null!==F){F.applyMatrix4(this.matrixWorld);" var="" z="g.ray.origin.distanceTo(F);z<t||z<g.near||z">g.far||h.push({distance:z,point:F,face:new THREE.Face3(p,q,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(r=p.position.array,s=k=0,x=r.length;k<x;k+=3,s+=9)p=k,q=k+1,m=k+2,d.fromarray(r,s),e.fromarray(r,s+3),f.fromarray(r,s+6),f=n.side===three.backside?b.intersecttriangle(f,e,d,!0):b.intersecttriangle(d,e,f,n.side!==three.doubleside),null!==f&&(f.applymatrix4(this.matrixworld),z=g.ray.origin.distanceto(f),z<t||z<g.near||z>
g.far||h.push({distance:z,point:F,face:new THREE.Face3(p,q,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this}))}}else if(k instanceof THREE.Geometry)for(s=this.material instanceof THREE.MeshFaceMaterial,r=!0===s?this.material.materials:null,t=g.precision,u=k.vertices,v=0,y=k.faces.length;v<y;v++)if(c=k.faces[v],n=!0===s?r[c.materialindex]:this.material,void 0!="=n){p=u[C.a];q=u[C.b];m=u[C.c];if(!0===n.morphTargets){F=k.morphTargets;z=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0," 0,0);for(var="" x="0,G=F.length;x<G;x++){var" e="z[x];if(0!==E){var" w="F[x].vertices;d.x+=(w[C.a].x-p.x)*E;d.y+=(w[C.a].y-p.y)*E;d.z+=(w[C.a].z-p.z)*E;e.x+=(w[C.b].x-q.x)*E;e.y+=(w[C.b].y-q.y)*E;e.z+=(w[C.b].z-q.z)*E;f.x+=(w[C.c].x-m.x)*E;f.y+=(w[C.c].y-m.y)*E;f.z+=(w[C.c].z-m.z)*E}}d.add(p);e.add(q);f.add(m);p=d;q=e;m=f}F=n.side===THREE.BackSide?b.intersectTriangle(m,q,p,!0):b.intersectTriangle(p,q,m,n.side!==THREE.DoubleSide);null!==F&&(F.applyMatrix4(this.matrixWorld),z=g.ray.origin.distanceTo(F),z<t||" z<g.near||z="">g.far||h.push({distance:z,point:F,face:C,faceIndex:v,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;
THREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.bonematrices=new 0="==b)this.calculateInverses();else" float32array(this.bonetexturewidth*this.bonetextureheight*4),this.bonetexture="new" three.datatexture(this.bonematrices,this.bonetexturewidth,this.bonetextureheight,three.rgbaformat,three.floattype),="" this.bonetexture.minfilter="THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new" float32array(16*this.bones.length);if(void="" if(this.bones.length="==b.length)this.boneInverses=b.slice(0);else" for(console.warn("three.skeleton="" boninverses="" is="" the="" wrong="" length."),this.boneinverses="[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new" three.matrix4)};="" three.skeleton.prototype.calculateinverses="function(){this.boneInverses=[];for(var" a="0,b=this.bones.length;a<b;a++){var" c="new" three.matrix4;this.bones[a]&&c.getinverse(this.bones[a].matrixworld);this.boneinverses.push(c)}};="" three.skeleton.prototype.pose="function(){for(var" a,b="0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};" three.skeleton.prototype.update="function(){var" three.matrix4;return="" function(){for(var="" b="0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();" three.skinnedmesh="function(a,b,c){THREE.Mesh.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new" three.matrix4;this.bindmatrixinverse="new" three.matrix4;a="[];if(this.geometry&&void" 0!="=this.geometry.bones){for(var" d,e,f,g,h="0,k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new" three.bone(this),a.push(b),b.name="d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void" 1,1);h="0;for(k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new" three.skeleton(a,void="" 0,c))};three.skinnedmesh.prototype="Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void" three.skinnedmesh.prototype.pose="function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry" instanceof="" three.geometry)for(var="" three.skinnedmesh.prototype.updatematrixworld="function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh" unreckognized="" bindmode:="" "+this.bindmode)};="" three.skinnedmesh.prototype.clone="function(a){void" three.skinnedmesh(this.geometry,this.material,this.usevertextexture));three.mesh.prototype.clone.call(this,a);return="" a};three.morphanimmesh="function(a,b){THREE.Mesh.call(this,a,b);this.type="MorphAnimMesh";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);" three.morphanimmesh.prototype.constructor="THREE.MorphAnimMesh;THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};" three.morphanimmesh.prototype.parseanimations="function(){var" b,c="a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var" g="a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var" h="c[g];e<h.start&&(h.start=e);e">h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)}; 0="==a&&(a=new" three.morphanimmesh.prototype.clone="function(a){void" three.morphanimmesh(this.geometry,this.material));a.duration="this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return" a};three.lod="function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);" three.lod.prototype.constructor="THREE.LOD;THREE.LOD.prototype.addLevel=function(a,b){void" c="0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var" b="1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return" this.objects[b-1].object};="" three.lod.prototype.raycast="function(){var" a="new" three.vector3;return="" function(b,c){a.setfrommatrixposition(this.matrixworld);var="" d="b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();" three.lod.prototype.update="function(){var" three.vector3,b="new" function(c){if(1<this.objects.length){a.setfrommatrixposition(c.matrixworld);b.setfrommatrixposition(this.matrixworld);c="a.distanceTo(b);this.objects[0].object.visible=!0;for(var">=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}(); 0="==a&&(a=new" three.lod.prototype.clone="function(a){void" three.lod);three.object3d.prototype.clone.call(this,a);for(var="" b="0,c=this.objects.length;b<c;b++){var" d="this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return" a};="" three.sprite="function(){var" a="new" uint16array([0,1,2,0,2,3]),b="new" float32array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c="new" float32array([0,0,1,0,1,1,0,1]),d="new" three.buffergeometry;d.addattribute("index",new="" three.bufferattribute(a,1));d.addattribute("position",new="" three.bufferattribute(b,3));d.addattribute("uv",new="" three.bufferattribute(c,2));return="" function(a){three.object3d.call(this);this.type="Sprite" ;this.geometry="d;this.material=void" 0!="=a?a:new" three.spritematerial}}();="" three.sprite.prototype="Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var" three.vector3;return="" function(b,c){a.setfrommatrixposition(this.matrixworld);var="">this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Particle=THREE.Sprite;THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensflares[a],c.x=this.positionscreen.x+d*c.distance,c.y=this.positionscreen.y+e*c.distance,c.wantedrotation=c.x*math.pi*.25,c.rotation+=.25*(c.wantedrotation-c.rotation)};three.scene=function(){three.object3d.call(this);this.type="scene";this.overridematerial=this.fog=null;this.autoupdate=!0};three.scene.prototype=object.create(three.object3d.prototype); 0="==a&&(a=new" three.scene.prototype.constructor="THREE.Scene;THREE.Scene.prototype.clone=function(a){void" three.scene);three.object3d.prototype.clone.call(this,a);null!="=this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return" a};three.fog="function(a,b,c){this.name="";this.color=new" three.color(a);this.near="void" 0!="=b?b:1;this.far=void" three.fog.prototype.clone="function(){return" new="" three.fog(this.color.gethex(),this.near,this.far)};three.fogexp2="function(a,b){this.name="";this.color=new" three.color(a);this.density="void" three.fogexp2(this.color.gethex(),this.density)};three.shaderchunk="{};THREE.ShaderChunk.alphatest_fragment="#ifdef" alphatest\n\n\tif="" (="" gl_fragcolor.a="" <="" alphatest="" )="" discard;\n\n#endif\n";three.shaderchunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif" ;="" three.shaderchunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif" ;three.shaderchunk.default_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n" ;three.shaderchunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif" three.shaderchunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n" three.shaderchunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif" ;three.shaderchunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif" ;three.shaderchunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif" three.shaderchunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif" ;three.shaderchunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif" three.shaderchunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n" ;three.shaderchunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif" three.shaderchunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n" three.shaderchunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n" ;three.shaderchunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif" ;three.shaderchunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif" three.shaderchunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif" ;three.shaderchunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif" ;three.shaderchunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif" three.shaderchunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif" ;three.shaderchunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n" ;three.shaderchunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif" ;three.shaderchunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n" three.shaderchunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n" ;three.shaderchunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif" ;three.shaderchunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif" ;three.shaderchunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n" three.shaderchunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n" ;three.shaderchunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t\t\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tenvColor.xyz *= envColor.xyz;\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\tgl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n" three.shaderchunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif" ;three.shaderchunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif" ;three.shaderchunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif" three.shaderchunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif" ;three.shaderchunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif" three.shaderchunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif" three.shaderchunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n\tvec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n\tvec3 objectNormal = morphedNormal;\n\n#else\n\n\tvec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n" ;three.shaderchunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;" three.shaderchunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif" ;three.shaderchunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif" three.shaderchunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif" ;three.shaderchunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif" ;three.shaderchunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif" ;three.shaderchunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif" three.shaderchunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n" three.shaderchunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n" three.shaderchunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#elif defined( USE_MORPHTARGETS )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif\n" ;three.shaderchunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif" three.shaderchunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n" three.shaderchunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif" ;three.shaderchunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n" ;three.shaderchunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n" three.uniformsutils="{merge:function(a){for(var" b="{},c=0;c<a.length;c++){var" d="this.clone(a[c]),e;for(e" in="" d)b[e]="d[e]}return" b},clone:function(a){var="" a){b[c]="{};for(var" a[c]){var="" e="a[c][d];b[c][d]=e" instanceof="" three.color||e="" three.vector2||e="" three.vector3||e="" three.vector4||e="" three.matrix4||e="" three.texture?e.clone():e="" array?e.slice():e}}return="" b}};="" three.uniformslib="{common:{diffuse:{type:"c",value:new" three.color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetrepeat:{type:"v4",value:new="" three.vector4(0,0,1,1)},lightmap:{type:"t",value:null},specularmap:{type:"t",value:null},alphamap:{type:"t",value:null},envmap:{type:"t",value:null},flipenvmap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionratio:{type:"f",value:.98},morphtargetinfluences:{type:"f",value:0}},bump:{bumpmap:{type:"t",value:null},bumpscale:{type:"f",="" value:1}},normalmap:{normalmap:{type:"t",value:null},normalscale:{type:"v2",value:new="" three.vector2(1,1)}},fog:{fogdensity:{type:"f",value:2.5e-4},fognear:{type:"f",value:1},fogfar:{type:"f",value:2e3},fogcolor:{type:"c",value:new="" three.color(16777215)}},lights:{ambientlightcolor:{type:"fv",value:[]},directionallightdirection:{type:"fv",value:[]},directionallightcolor:{type:"fv",value:[]},hemispherelightdirection:{type:"fv",value:[]},hemispherelightskycolor:{type:"fv",value:[]},hemispherelightgroundcolor:{type:"fv",="" value:[]},pointlightcolor:{type:"fv",value:[]},pointlightposition:{type:"fv",value:[]},pointlightdistance:{type:"fv1",value:[]},spotlightcolor:{type:"fv",value:[]},spotlightposition:{type:"fv",value:[]},spotlightdirection:{type:"fv",value:[]},spotlightdistance:{type:"fv1",value:[]},spotlightanglecos:{type:"fv1",value:[]},spotlightexponent:{type:"fv1",value:[]}},particle:{pscolor:{type:"c",value:new="" three.color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},="" map:{type:"t",value:null},fogdensity:{type:"f",value:2.5e-4},fognear:{type:"f",value:1},fogfar:{type:"f",value:2e3},fogcolor:{type:"c",value:new="" three.color(16777215)}},shadowmap:{shadowmap:{type:"tv",value:[]},shadowmapsize:{type:"v2v",value:[]},shadowbias:{type:"fv1",value:[]},shadowdarkness:{type:"fv1",value:[]},shadowmatrix:{type:"m4v",value:[]}}};="" three.shaderlib="{basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void" main()="" {",three.shaderchunk.map_vertex,="" three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.skinbase_vertex,"\t#ifdef="" use_envmap",three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,"\t#endif",three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex,three.shaderchunk.envmap_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),="" fragmentshader:["uniform="" vec3="" diffuse;\nuniform="" float="" opacity;",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void="" {\n\tgl_fragcolor="vec4(" diffuse,="" opacity="" );",three.shaderchunk.logdepthbuf_fragment,="" three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment,three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:three.uniformsutils.merge([three.uniformslib.common,three.uniformslib.fog,three.uniformslib.lights,three.uniformslib.shadowmap,="" {ambient:{type:"c",value:new="" three.color(16777215)},emissive:{type:"c",value:new="" three.color(0)},wraprgb:{type:"v3",value:new="" three.vector3(1,1,1)}}]),vertexshader:["#define="" lambert\nvarying="" vlightfront;\n#ifdef="" double_sided\n\tvarying="" vlightback;\n#endif",three.shaderchunk.map_pars_vertex,three.shaderchunk.lightmap_pars_vertex,three.shaderchunk.envmap_pars_vertex,three.shaderchunk.lights_lambert_pars_vertex,three.shaderchunk.color_pars_vertex,three.shaderchunk.morphtarget_pars_vertex,three.shaderchunk.skinning_pars_vertex,="" three.shaderchunk.shadowmap_pars_vertex,three.shaderchunk.logdepthbuf_pars_vertex,"void="" {",three.shaderchunk.map_vertex,three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinbase_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex,="" three.shaderchunk.envmap_vertex,three.shaderchunk.lights_lambert_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["uniform="" opacity;\nvarying="" vlightback;\n#endif",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,="" three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void="" vec3(="" 1.0="" ),="" );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment,"\t#ifdef="" double_sided\n\t\tif="" gl_frontfacing="" )\n\t\t\tgl_fragcolor.xyz="" *="vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz" three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},phong:{uniforms:three.uniformsutils.merge([three.uniformslib.common,three.uniformslib.bump,three.uniformslib.normalmap,three.uniformslib.fog,three.uniformslib.lights,three.uniformslib.shadowmap,{ambient:{type:"c",value:new="" three.color(0)},="" specular:{type:"c",value:new="" three.color(1118481)},shininess:{type:"f",value:30},wraprgb:{type:"v3",value:new="" phong\nvarying="" vviewposition;\nvarying="" vnormal;",three.shaderchunk.map_pars_vertex,three.shaderchunk.lightmap_pars_vertex,three.shaderchunk.envmap_pars_vertex,three.shaderchunk.lights_phong_pars_vertex,three.shaderchunk.color_pars_vertex,three.shaderchunk.morphtarget_pars_vertex,three.shaderchunk.skinning_pars_vertex,three.shaderchunk.shadowmap_pars_vertex,="" three.shaderchunk.logdepthbuf_pars_vertex,"void="" {",three.shaderchunk.map_vertex,three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinbase_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,"\tvnormal="normalize(" transformednormal="" );",three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,"\tvviewposition="-mvPosition.xyz;"," three.shaderchunk.worldpos_vertex,three.shaderchunk.envmap_vertex,three.shaderchunk.lights_phong_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["#define="" phong\nuniform="" opacity;\nuniform="" ambient;\nuniform="" emissive;\nuniform="" specular;\nuniform="" shininess;",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment,="" three.shaderchunk.fog_pars_fragment,three.shaderchunk.lights_phong_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.bumpmap_pars_fragment,three.shaderchunk.normalmap_pars_fragment,three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void="" );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment,="" three.shaderchunk.lights_phong_fragment,three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:three.uniformsutils.merge([three.uniformslib.particle,three.uniformslib.shadowmap]),vertexshader:["uniform="" size;\nuniform="" scale;",three.shaderchunk.color_pars_vertex,three.shaderchunk.shadowmap_pars_vertex,="" {",three.shaderchunk.color_vertex,"\tvec4="" mvposition="modelViewMatrix" vec4(="" position,="" );\n\t#ifdef="" use_sizeattenuation\n\t\tgl_pointsize="size" scale="" length(="" mvposition.xyz="" );\n\t#else\n\t\tgl_pointsize="size;\n\t#endif\n\tgl_Position" =="" projectionmatrix="" mvposition;",three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["uniform="" pscolor;\nuniform="" opacity;",="" three.shaderchunk.color_pars_fragment,three.shaderchunk.map_particle_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void="" pscolor,="" );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_particle_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.color_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:three.uniformsutils.merge([three.uniformslib.common,="" three.uniformslib.fog,{scale:{type:"f",value:1},dashsize:{type:"f",value:1},totalsize:{type:"f",value:2}}]),vertexshader:["uniform="" scale;\nattribute="" linedistance;\nvarying="" vlinedistance;",three.shaderchunk.color_pars_vertex,three.shaderchunk.logdepthbuf_pars_vertex,"void="" {",three.shaderchunk.color_vertex,"\tvlinedistance="scale" linedistance;\n\tvec4="" );\n\tgl_position="projectionMatrix" mvposition;",three.shaderchunk.logdepthbuf_vertex,="" "}"].join("\n"),fragmentshader:["uniform="" dashsize;\nuniform="" totalsize;\nvarying="" vlinedistance;",three.shaderchunk.color_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void="" {\n\tif="" mod(="" vlinedistance,="" totalsize=""> dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,
"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",
THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);\nsampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var c=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var d in a.attributes){var e=a.attributes[d];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var f=1;"v2"===e.type?f=2:"v3"===e.type?f=3:"v4"===e.type?f=4:"c"===e.type&&(f=3);e.size=f;e.array=new Float32Array(c*f);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=d;e.needsUpdate=
!0}b.__webglCustomAttributesList.push(e)}}}function c(a,b){var c=b.geometry,e=a.faces3,f=3*e.length,g=1*e.length,h=3*e.length,e=d(b,a);a.__vertexArray=new Float32Array(3*f);a.__normalArray=new Float32Array(3*f);a.__colorArray=new Float32Array(3*f);a.__uvArray=new Float32Array(2*f);1<c.facevertexuvs.length&&(a.__uv2array=new 0="==a.__webglCustomAttributesList&&" float32array(2*f));c.hastangents&&(a.__tangentarray="new" float32array(4*f));b.geometry.skinweights.length&&b.geometry.skinindices.length&&(a.__skinindexarray="new" float32array(4*="" f),a.__skinweightarray="new" float32array(4*f));c="null!==aa.get("OES_element_index_uint")&&21845<g?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new" c(3*g);a.__linearray="new" c(2*h);var="" k="a.numMorphTargets;if(k)for(a.__morphTargetsArrays=[],c=0;c<k;c++)a.__morphTargetsArrays.push(new" float32array(3*f));if(k="a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0;c<k;c++)a.__morphNormalsArrays.push(new" float32array(3*f));a.__webglfacecount="3*g;a.__webglLineCount=2*h;if(e.attributes){void" (a.__webglcustomattributeslist="[]);for(var" m="" in="" e.attributes){var="" g="e.attributes[m],h={},n;for(n" g)h[n]="g[n];if(!h.__webglInitialized||h.createUniqueBuffers)h.__webglInitialized=!0,c=1,"v2"===h.type?c=2:"v3"===h.type?c=3:"v4"===h.type?c=4:"c"===h.type&&(c=3),h.size=c,h.array=new" float32array(f*c),h.buffer="l.createBuffer(),h.buffer.belongsToAttribute=m,g.needsUpdate=!0,h.__original=g;a.__webglCustomAttributesList.push(h)}}a.__inittedArrays=!0}function" d(a,b){return="" a.material="" instanceof="" three.meshfacematerial?="" a.material.materials[b.materialindex]:a.material}function="" e(a,b,c,d){c="c.attributes;var" e="b.attributes;b=b.attributesKeys;for(var" f="0,k=b.length;f<k;f++){var" p="c[m];void" 0!="=p?(m=p.itemSize,l.bindBuffer(l.ARRAY_BUFFER,p.buffer),g(n),l.vertexAttribPointer(n,m,l.FLOAT,!1,0,d*m*4)):void" function="" f(){for(var="" a="0,b=kb.length;a<b;a++)kb[a]=0}function" g(a){kb[a]="1;0===Ma[a]&&(l.enableVertexAttribArray(a),Ma[a]=1)}function" h(){for(var="" k(a,b){return="" a.material.id!="=b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function" n(a,b){return="" a.z!="=b.z?b.z-a.z:a.id-b.id}function" p(a,b){return="" b[0]-a[0]}function="" q(a){if(!1!="=a.visible){if(!(a" three.scene||a="" three.group)){void="" a.__webglinit&&(a.__webglinit="!0,a._modelViewMatrix=new" three.matrix4,a._normalmatrix="new" three.matrix3,a.addeventlistener("removed",ic));var="" c="a.geometry;if(void" three.buffergeometry)i.info.memory.geometries++;else="" if(a="" three.mesh)r(a,c);else="" three.line){if(void="" l.createbuffer();i.info.memory.geometries++;var="" d="c.vertices.length;c.__vertexArray=new" float32array(3*d);c.__colorarray="new" float32array(3*d);c.__linedistancearray="new" float32array(1*d);c.__webgllinecount="d;b(a);c.verticesNeedUpdate=!0;c.colorsNeedUpdate=!0;c.lineDistancesNeedUpdate=!0}}else" three.pointcloud&&void="" float32array(3*="" d),c.__colorarray="new" float32array(3*d),c.__sortarray="[],c.__webglParticleCount=d,b(a),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0);if(void" three.mesh)if(c="" three.buffergeometry)u(fa,c,a);else{if(c="" three.geometry)for(var="" three.line||a="" three.pointcloud?u(fa,c,a):(a="" three.immediaterenderobject||a.immediaterendercallback)&&ga.push({id:null,="" object:a,opaque:null,transparent:null,z:0});if(a="" three.light)pa.push(a);else="" three.sprite)tb.push(a);else="" three.lensflare)eb.push(a);else="" if((c="Fa[a.id])&&(!1===a.frustumCulled||!0===ub.intersectsObject(a)))for(d=0,e=c.length;d<e;d++){var" three.meshfacematerial?(h="h.materials[m" three.buffergeometry?0:k.materialindex],g.material="h,h.transparent?za.push(g):Ta.push(g)):h&&(g.material=" h,h.transparent?za.push(g):ta.push(g));f.render="!0;!0===I.sortObjects&&(Da.setFromMatrixPosition(a.matrixWorld),Da.applyProjection(vb),f.z=Da.z)}}d=0;for(e=a.children.length;d<e;d++)q(a.children[d])}}function" m(a,b,c,d,e,f){for(var="" g,h="0,l=a.length;h<l;h++){g=a[h];var" g.polygonoffsetunits)}i.setmaterialfaces(g);m="" three.buffergeometry?i.renderbufferdirect(b,c,d,g,m,k):i.renderbuffer(b,c,d,g,m,k)}}function="" t(a,b,c,d,e,f,g){for(var="" h,l="0,k=a.length;l<k;l++){h=a[l];var" s(a){var="" b="a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function" r(a,b){var="" fa[a.id];for(var="" three.meshfacematerial,h="aa.get("OES_element_index_uint")?4294967296:65535,k,e={},m=b.morphTargets.length,n=b.morphNormals.length,p,q={},r=[],t=0,s=b.faces.length;t<s;t++){k=b.faces[t];var" v="d?k.materialIndex:0;v" e||(e[v]="{hash:v,counter:0});k=e[v].hash+"_"+e[v].counter;" q||(p="{id:kc++,faces3:[],materialIndex:v,vertices:0,numMorphTargets:m,numMorphNormals:n},q[k]=p,r.push(p));q[k].vertices+3">h&&(e[v].counter+=1,k=e[v].hash+"_"+e[v].counter,k in q||(p={id:kc++,faces3:[],materialIndex:v,vertices:0,numMorphTargets:m,numMorphNormals:n},q[k]=p,r.push(p)));q[k].faces3.push(t);q[k].vertices+=3}f[g]=r;b.groupsNeedUpdate=!1}f=sb[b.id];g=0;for(d=f.length;g<d;g++){h=f[g];if(void 0="==h.__webglVertexBuffer){e=h;e.__webglVertexBuffer=l.createBuffer();e.__webglNormalBuffer=" l.createbuffer();e.__webgltangentbuffer="l.createBuffer();e.__webglColorBuffer=l.createBuffer();e.__webglUVBuffer=l.createBuffer();e.__webglUV2Buffer=l.createBuffer();e.__webglSkinIndicesBuffer=l.createBuffer();e.__webglSkinWeightsBuffer=l.createBuffer();e.__webglFaceBuffer=l.createBuffer();e.__webglLineBuffer=l.createBuffer();if(n=e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],m=0;m<n;m++)e.__webglMorphTargetsBuffers.push(l.createBuffer());if(n=e.numMorphNormals)for(e.__webglMorphNormalsBuffers=" [],m="0;m<n;m++)e.__webglMorphNormalsBuffers.push(l.createBuffer());I.info.memory.geometries++;c(h,a);b.verticesNeedUpdate=!0;b.morphTargetsNeedUpdate=!0;b.elementsNeedUpdate=!0;b.uvsNeedUpdate=!0;b.normalsNeedUpdate=!0;b.tangentsNeedUpdate=!0;e=b.colorsNeedUpdate=!0}else" e="!1;(e||void" u(a,b,c){var="" d="c.id;a[d]=a[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function" v(a){var="" b="a.geometry;if(b" instanceof="" three.buffergeometry)for(var="" k="f[g],m=e[k];void" n="index" =="=k?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER;l.bindBuffer(n,m.buffer);l.bufferData(n,m.array,l.STATIC_DRAW);m.needsUpdate=!1}}else" if(a="" three.mesh){!0="==b.groupsNeedUpdate&&r(a,b);for(var" p="sb[b.id],g=0,q=p.length;g<q;g++){var" t="p[g],s=d(a,t);!0===b.groupsNeedUpdate&&c(t,a);var" u="s.attributes&&y(s);if(b.verticesNeedUpdate||" b.morphtargetsneedupdate||b.elementsneedupdate||b.uvsneedupdate||b.normalsneedupdate||b.colorsneedupdate||b.tangentsneedupdate||u){var="" v="t,x=a,z=l.DYNAMIC_DRAW,G=!b.dynamic,E=s;if(v.__inittedArrays){var" 0!="=E.shading&&E.shading===THREE.SmoothShading,w=void" 0,f="void" 0,i="void" 0,a="void" 0,q="void" 0,m="void" 0,k="void" 0,n="void" 0,o="void" 0,t="void" 0,u="void" 0,h="void" 0,l="void" 0,x="void" 0,w="void" 0,pa="void" 0,ta="void" 0,za="void" 0,fa="void" 0,ga="void" 0,aa="void" 0,ha="void" 0,p="void" 0,="" ea="void" 0,ma="void" 0,y="void" 0,tb="void" 0,qa="void" 0,da="void" 0,xa="void" 0,na="void" 0,ab="void" 0,eb="void" 0,la="void" 0,bb="v.__vertexArray,wb=v.__uvArray,ob=v.__uv2Array,Pa=v.__normalArray,Ca=v.__tangentArray,cb=v.__colorArray,Ka=v.__skinIndexArray,La=v.__skinWeightArray,$a=v.__morphTargetsArrays,xb=v.__morphNormalsArrays,pb=v.__webglCustomAttributesList,B=void" 0,db="v.__faceArray,sa=v.__lineArray,oa=x.geometry," sa="oa.elementsNeedUpdate,Ma=oa.uvsNeedUpdate,Ab=oa.normalsNeedUpdate,Hb=oa.tangentsNeedUpdate,Ib=oa.colorsNeedUpdate,lb=oa.morphTargetsNeedUpdate,Cb=oa.vertices,V=v.faces3,Ja=oa.faces,Wa=oa.faceVertexUvs[0],Db=oa.faceVertexUvs[1],Pb=oa.skinIndices,$=oa.skinWeights,Eb=oa.morphTargets,R=oa.morphNormals;if(oa.verticesNeedUpdate){w=0;for(F=V.length;w<F;w++)A=Ja[V[w]],H=Cb[A.a],L=Cb[A.b],X=Cb[A.c],bb[Ua]=H.x,bb[Ua+1]=H.y,bb[Ua+2]=H.z,bb[Ua+3]=L.x,bb[Ua+4]=L.y,bb[Ua+5]=L.z,bb[Ua+6]=X.x,bb[Ua+7]=X.y,bb[Ua+" 8]="X.z,Ua+=9;l.bindBuffer(l.ARRAY_BUFFER,v.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,bb,z)}if(lb)for(Ha=0,xa=Eb.length;Ha<xa;Ha++){w=ra=0;for(F=V.length;w<F;w++)eb=V[w],A=Ja[eb],H=Eb[Ha].vertices[A.a],L=Eb[Ha].vertices[A.b],X=Eb[Ha].vertices[A.c],na=$a[Ha],na[ra]=H.x,na[ra+1]=H.y,na[ra+2]=H.z,na[ra+3]=L.x,na[ra+4]=L.y,na[ra+5]=L.z,na[ra+6]=X.x,na[ra+7]=X.y,na[ra+8]=X.z,E.morphNormals&&(D?(la=R[Ha].vertexNormals[eb],Za=la.a,Fa=la.b,ga=la.c):ga=Fa=Za=R[Ha].faceNormals[eb],ab=xb[Ha],ab[ra]=Za.x," ab[ra+1]="Za.y,ab[ra+2]=Za.z,ab[ra+3]=Fa.x,ab[ra+4]=Fa.y,ab[ra+5]=Fa.z,ab[ra+6]=ga.x,ab[ra+7]=ga.y,ab[ra+8]=ga.z),ra+=9;l.bindBuffer(l.ARRAY_BUFFER,v.__webglMorphTargetsBuffers[Ha]);l.bufferData(l.ARRAY_BUFFER,$a[Ha],z);E.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,v.__webglMorphNormalsBuffers[Ha]),l.bufferData(l.ARRAY_BUFFER,xb[Ha],z))}if($.length){w=0;for(F=V.length;w<F;w++)A=Ja[V[w]],za=$[A.a],ha=$[A.b],P=$[A.c],La[ia]=za.x,La[ia+1]=za.y,La[ia+2]=za.z,La[ia+3]=za.w,La[ia+4]=ha.x,La[ia+5]=ha.y,La[ia+" 6]="ha.z,La[ia+7]=ha.w,La[ia+8]=P.x,La[ia+9]=P.y,La[ia+10]=P.z,La[ia+11]=P.w,ea=Pb[A.a],fa=Pb[A.b],ma=Pb[A.c],Ka[ia]=ea.x,Ka[ia+1]=ea.y,Ka[ia+2]=ea.z,Ka[ia+3]=ea.w,Ka[ia+4]=fa.x,Ka[ia+5]=fa.y,Ka[ia+6]=fa.z,Ka[ia+7]=fa.w,Ka[ia+8]=ma.x,Ka[ia+9]=ma.y,Ka[ia+10]=ma.z,Ka[ia+11]=ma.w,ia+=12;0<ia&&(l.bindBuffer(l.ARRAY_BUFFER,v.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,Ka,z),l.bindBuffer(l.ARRAY_BUFFER,v.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,La,z))}if(Ib){w=0;for(F=V.length;w<F;w++)A=" ja[v[w]],k="A.vertexColors,N=A.color,3===K.length&&E.vertexColors===THREE.VertexColors?(Ta=K[0],aa=K[1],Ga=K[2]):Ga=aa=Ta=N,cb[Oa]=Ta.r,cb[Oa+1]=Ta.g,cb[Oa+2]=Ta.b,cb[Oa+3]=aa.r,cb[Oa+4]=aa.g,cb[Oa+5]=aa.b,cb[Oa+6]=Ga.r,cb[Oa+7]=Ga.g,cb[Oa+8]=Ga.b,Oa+=9;0<Oa&&(l.bindBuffer(l.ARRAY_BUFFER,v.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,cb,z))}if(Hb&&oa.hasTangents){w=0;for(F=V.length;w<F;w++)A=Ja[V[w]],O=A.vertexTangents,W=O[0],pa=O[1],ta=O[2],Ca[Ia]=W.x,Ca[Ia+1]=W.y,Ca[Ia+2]=W.z,Ca[Ia+3]=W.w,Ca[Ia+" 4]="pa.x,Ca[Ia+5]=pa.y,Ca[Ia+6]=pa.z,Ca[Ia+7]=pa.w,Ca[Ia+8]=ta.x,Ca[Ia+9]=ta.y,Ca[Ia+10]=ta.z,Ca[Ia+11]=ta.w,Ia+=12;l.bindBuffer(l.ARRAY_BUFFER,v.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,Ca,z)}if(Ab){w=0;for(F=V.length;w<F;w++)if(A=Ja[V[w]],Q=A.vertexNormals,M=A.normal,3===Q.length&&D)for(Y=0;3">Y;Y++)qa=Q[Y],Pa[Va]=qa.x,Pa[Va+1]=qa.y,Pa[Va+2]=qa.z,Va+=3;else for(Y=0;3>Y;Y++)Pa[Va]=M.x,Pa[Va+1]=M.y,Pa[Va+2]=M.z,Va+=3;l.bindBuffer(l.ARRAY_BUFFER,v.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,
Pa,z)}if(Ma&&Wa){w=0;for(F=V.length;w<f;w++)if(i=v[w],t=wa[i],void 0!="=T)for(Y=0;3">Y;Y++)Da=T[Y],wb[mb]=Da.x,wb[mb+1]=Da.y,mb+=2;0<mb&&(l.bindbuffer(l.array_buffer,v.__webgluvbuffer),l.bufferdata(l.array_buffer,wb,z))}if(ma&&db){w=0;for(f=v.length;w<f;w++)if(i=v[w],u=db[i],void 0!="=U)for(Y=0;3">Y;Y++)Aa=U[Y],ob[ya]=Aa.x,ob[ya+1]=Aa.y,ya+=2;0<ya&&(l.bindbuffer(l.array_buffer,v.__webgluv2buffer),l.bufferdata(l.array_buffer,ob,z))}if(sa){w=0;for(f=v.length;w<f;w++)db[xa]=na,db[xa+1]=na+1,db[xa+2]=na+ 0="==B.boundTo||"vertices"===B.boundTo)for(w=0,F=V.length;w<F;w++)A=Ja[V[w]],B.array[J]=B.value[A.a],B.array[J+" 2,xa+="3,sa[nb]=Na,sa[nb+1]=Na+1,sa[nb+2]=Na,sa[nb+3]=Na+2,sa[nb+4]=Na+1,sa[nb+5]=Na+2,nb+=6,Na+=3;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,v.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,db,z);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,v.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,sa,z)}if(pb)for(Y=0,tb=pb.length;Y<tb;Y++)if(B=pb[Y],B.__original.needsUpdate){J=0;if(1===B.size)if(void" 1]="B.value[A.b],B.array[J+2]=B.value[A.c],J+=3;else{if("faces"===B.boundTo)for(w=0,F=V.length;w<F;w++)Ba=B.value[V[w]],B.array[J]=Ba,B.array[J+1]=Ba,B.array[J+2]=Ba,J+=3}else" if(2="==B.size)if(void" b.array[j]="H.x,B.array[J+1]=H.y,B.array[J+2]=L.x,B.array[J+3]=L.y,B.array[J+4]=X.x,B.array[J+5]=X.y,J+=6}else" if(3="==B.size){var" s;s="c" =="=B.type?["r","g","b"]:["x","y","z"];if(void" if("faces"="==" b.boundto)for(w="0,F=V.length;w<F;w++)X=L=H=Ba=B.value[V[w]],B.array[J]=H[S[0]],B.array[J+1]=H[S[1]],B.array[J+2]=H[S[2]],B.array[J+3]=L[S[0]],B.array[J+4]=L[S[1]],B.array[J+5]=L[S[2]],B.array[J+6]=X[S[0]],B.array[J+7]=X[S[1]],B.array[J+8]=X[S[2]],J+=9;else" if("facevertices"="==B.boundTo)for(w=0,F=V.length;w<F;w++)Ba=B.value[V[w]],H=Ba[0],L=Ba[1],X=Ba[2],B.array[J]=H[S[0]],B.array[J+1]=H[S[1]],B.array[J+2]=H[S[2]],B.array[J+3]=L[S[0]],B.array[J+4]=L[S[1]],B.array[J+5]=L[S[2]],B.array[J+6]=X[S[0]],B.array[J+" 7]="X[S[1]],B.array[J+8]=X[S[2]],J+=9}else" if(4="==B.size)if(void" h.y,b.array[j+2]="H.z,B.array[J+3]=H.w,B.array[J+4]=L.x,B.array[J+5]=L.y,B.array[J+6]=L.z,B.array[J+7]=L.w,B.array[J+8]=X.x,B.array[J+9]=X.y,B.array[J+10]=X.z,B.array[J+11]=X.w,J+=12;else" b.buffer);l.bufferdata(l.array_buffer,b.array,z)}g&&(delete="" v.__inittedarrays,delete="" v.__colorarray,delete="" v.__normalarray,delete="" v.__tangentarray,delete="" v.__uvarray,delete="" v.__uv2array,delete="" v.__facearray,delete="" v.__vertexarray,delete="" v.__linearray,delete="" v.__skinindexarray,delete="" v.__skinweightarray)}}}b.verticesneedupdate="!1;b.morphTargetsNeedUpdate=!1;b.elementsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.tangentsNeedUpdate=!1;s.attributes&&C(s)}else" if(a="" instanceof="" three.line){s="d(a,b);u=s.attributes&&y(s);if(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||u){var" z="l.DYNAMIC_DRAW,Ea,ka,Bb,Fb,ba,gb,ua=b.vertices,Qb=b.colors,Rb=b.lineDistances,qb=ua.length,Sb=Qb.length,yb=Rb.length,Gb=b.__vertexArray,rb=b.__colorArray,kb=b.__lineDistanceArray,Mb=b.colorsNeedUpdate,Ob=b.lineDistancesNeedUpdate,hb=b.__webglCustomAttributesList,Ya,ib,va,Kb,Qa,ca;if(b.verticesNeedUpdate){for(Ea=0;Ea<qb;Ea++)Fb=ua[Ea],ba=3*Ea,Gb[ba]=Fb.x,Gb[ba+1]=Fb.y,Gb[ba+2]=" fb.z;l.bindbuffer(l.array_buffer,b.__webglvertexbuffer);l.bufferdata(l.array_buffer,gb,z)}if(mb){for(ka="0;ka<Sb;ka++)gb=Qb[ka],ba=3*ka,rb[ba]=gb.r,rb[ba+1]=gb.g,rb[ba+2]=gb.b;l.bindBuffer(l.ARRAY_BUFFER,b.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,rb,Z)}if(Ob){for(Bb=0;Bb<yb;Bb++)kb[Bb]=Rb[Bb];l.bindBuffer(l.ARRAY_BUFFER,b.__webglLineDistanceBuffer);l.bufferData(l.ARRAY_BUFFER,kb,Z)}if(hb)for(Ya=0,ib=hb.length;Ya<ib;Ya++)if(ca=hb[Ya],ca.needsUpdate&&(void" 0;kb="ca.value.length;if(1===ca.size)for(va=0;va<Kb;va++)ca.array[va]=ca.value[va];else" for(va="0;va<Kb;va++)Qa=ca.value[va],ca.array[ba]=Qa.x,ca.array[ba+1]=Qa.y,ca.array[ba+2]=Qa.z,ba+=3;else" three.pointcloud){s="d(a,b);u=s.attributes&&y(s);if(b.verticesNeedUpdate||b.colorsNeedUpdate||u){var" jb="l.DYNAMIC_DRAW,Tb,Ub,$b,ja,ac,ub=b.vertices,vb=ub.length,Nb=b.colors,Vb=Nb.length,bc=b.__vertexArray,cc=b.__colorArray,Wb=b.colorsNeedUpdate," "vertices"="==da.boundTo))if(Lb=da.value.length,ja=0,1===da.size)for(wa=0;wa<Lb;wa++)da.array[wa]=da.value[wa];else" for(wa="0;wa<Lb;wa++)Ra=da.value[wa],da.array[ja]=Ra.x,da.array[ja+1]=Ra.y,da.array[ja+2]=Ra.z,ja+=3;else" da.array[ja]="Ra.x,da.array[ja+1]=Ra.y,da.array[ja+2]=Ra.z,da.array[ja+3]=Ra.w,ja+=4;l.bindBuffer(l.ARRAY_BUFFER,da.buffer);l.bufferData(l.ARRAY_BUFFER,da.array,jb);da.needsUpdate=!1}}b.verticesNeedUpdate=!1;b.colorsNeedUpdate=!1;s.attributes&&C(s)}}function" y(a){for(var="" b="" in="" a.attributes)if(a.attributes[b].needsupdate)return!0;return!1}function="" c(a){for(var="" a.attributes)a.attributes[b].needsupdate="!1}function" x(a,b,c,d,e){var="" f,g,h,k;mb="0;if(d.needsUpdate){d.program&&lc(d);d.addEventListener("dispose"," mc);var="" m="Dc[d.type];if(m){var" n="THREE.ShaderLib[m];d.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else" d.__webglshader="{uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};for(var" p="0,q=0,r=0,t=0,s=0,v=b.length;s<v;s++){var" u="b[s];u.onlyShadow||!1===u.visible||(u" three.directionallight&&p++,u="" three.pointlight&&q++,u="" three.spotlight&&r++,u="" three.hemispherelight&&="" t++)}f="p;g=q;h=r;k=t;for(var" x,y="0,C=0,G=b.length;C<G;C++){var" a="b[C];A.castShadow&&(A" three.spotlight&&y++,a="" three.directionallight&&!a.shadowcascade&&y++)}x="y;var" d;if(nb&&e&&e.skeleton&&e.skeleton.usevertextexture)d="1024;else{var" h="l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),L=Math.floor((H-20)/4);void" 0!="=e&&e" three.skinnedmesh&&(l="Math.min(e.skeleton.bones.length,L),L<e.skeleton.bones.length&&console.warn("WebGLRenderer:" too="" many="" bones="" -="" "+e.skeleton.bones.length+="" ",="" this="" gpu="" supports="" just="" "+l+"="" (try="" opengl="" instead="" of="" angle)"));d="L}var" k="{precision:ga,supportsVertexTextures:Vb,map:!!d.map,envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:c,useFog:d.fog,fogExp:c" three.fogexp2,sizeattenuation:d.sizeattenuation,logarithmicdepthbuffer:x,skinning:d.skinning,maxbones:d,usevertextexture:nb&&="" e&&e.skeleton&&e.skeleton.usevertextexture,morphtargets:d.morphtargets,morphnormals:d.morphnormals,maxmorphtargets:i.maxmorphtargets,maxmorphnormals:i.maxmorphnormals,maxdirlights:f,maxpointlights:g,maxspotlights:h,maxhemilights:k,maxshadows:x,shadowmapenabled:i.shadowmapenabled&&e.receiveshadow&&0<x,shadowmaptype:i.shadowmaptype,shadowmapdebug:i.shadowmapdebug,shadowmapcascade:i.shadowmapcascade,alphatest:d.alphatest,metal:d.metal,wraparound:d.wraparound,doublesided:d.side="==THREE.DoubleSide,flipSided:d.side===" three.backside},n="[];m?N.push(m):(N.push(d.fragmentShader),N.push(d.vertexShader));if(void" o="" d.defines)n.push(o),n.push(d.defines[o]);for(o="" k)n.push(o),n.push(k[o]);for(var="" w="N.join(),pa,ta=0,Za=Xa.length;ta<Za;ta++){var" fa="Xa[ta];if(Fa.code===W){pa=Fa;pa.usedTimes++;break}}void" three.webglprogram(i,w,d,k),xa.push(pa),i.info.memory.programs="Xa.length);d.program=pa;var" ta="pa.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;for(var" aa,ga="morphTarget" ,="" za="0;za<I.maxMorphTargets;za++)aa=Ga+za,0<=Ta[aa]&&d.numSupportedMorphTargets++}if(d.morphNormals)for(d.numSupportedMorphNormals=0,Ga="morphNormal",za=0;za<I.maxMorphNormals;za++)aa=Ga+za,0<=Ta[aa]&&d.numSupportedMorphNormals++;d.uniformsList=[];for(var" ea="" d.__webglshader.uniforms){var="" tb="d.program.uniforms[ea];tb&&d.uniformsList.push([d.__webglShader.uniforms[ea],tb])}d.needsUpdate=!1}d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new" float32array(i.maxmorphtargets));="" var="" qa="!1,eb=!1,ya=!1,xa=d.program,ha=xa.uniforms,P=d.__webglShader.uniforms;xa.id!==Wb&&(l.useProgram(xa.program),Wb=xa.id,ya=eb=qa=!0);d.id!==Hb&&(-1===Hb&&(ya=!0),Hb=d.id,eb=!0);if(qa||a!==Ib)l.uniformMatrix4fv(ha.projectionMatrix,!1,a.projectionMatrix.elements),X&&l.uniform1f(ha.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==Ib&&(Ib=a),(d" three.shadermaterial||d="" three.meshphongmaterial||d.envmap)&&null!="=ha.cameraPosition&&(Da.setFromMatrixPosition(a.matrixWorld),l.uniform3f(ha.cameraPosition," da.x,da.y,da.z)),(d="" three.meshphongmaterial||d="" three.meshlambertmaterial||d="" three.meshbasicmaterial||d="" three.shadermaterial||d.skinning)&&null!="=ha.viewMatrix&&l.uniformMatrix4fv(ha.viewMatrix,!1,a.matrixWorldInverse.elements);if(d.skinning)if(e.bindMatrix&&null!==ha.bindMatrix&&l.uniformMatrix4fv(ha.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==ha.bindMatrixInverse&&l.uniformMatrix4fv(ha.bindMatrixInverse,!1,e.bindMatrixInverse.elements)," nb&&e.skeleton&&e.skeleton.usevertextexture){if(null!="=ha.boneTexture){var" $a="z();l.uniform1i(ha.boneTexture,$a);I.setTexture(e.skeleton.boneTexture,$a)}null!==ha.boneTextureWidth&&l.uniform1i(ha.boneTextureWidth,e.skeleton.boneTextureWidth);null!==ha.boneTextureHeight&&l.uniform1i(ha.boneTextureHeight,e.skeleton.boneTextureHeight)}else" e.skeleton&&e.skeleton.bonematrices&&null!="=ha.boneGlobalMatrices&&l.uniformMatrix4fv(ha.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(eb){c&&d.fog&&(P.fogColor.value=" c.color,c="" three.fog?(p.fognear.value="c.near,P.fogFar.value=c.far):c" three.fogexp2&&(p.fogdensity.value="c.density));if(d" three.meshlambertmaterial||d.lights){if(ob){var="" ya="!0,fa,fb,Y,Ma=0,Sa=0,Ya=0,Aa,Ha,hb,na,ab,jb,la=nc,Na=la.directional.colors,Ua=la.directional.positions,mb=la.point.colors,kb=la.point.positions,sb=la.point.distances,Va=la.spot.colors,Ia=la.spot.positions,nb=la.spot.distances,Oa=la.spot.directions,ia=la.spot.anglesCos," ra="la.spot.exponents,J=la.hemi.skyColors,Ba=la.hemi.groundColors,bb=la.hemi.positions,wb=0,ob=0,Pa=0,Ca=0,cb=0,Ka=0,La=0,ib=0,xb=0,pb=0,B=0,db=0;fa=0;for(fb=b.length;fa<fb;fa++)Y=b[fa],Y.onlyShadow||(Aa=Y.color,na=Y.intensity,jb=Y.distance,Y" three.ambientlight?y.visible&&(i.gammainput?(ma+="Aa.r*Aa.r,Sa+=Aa.g*Aa.g,Ya+=Aa.b*Aa.b):(Ma+=Aa.r,Sa+=Aa.g,Ya+=Aa.b)):Y" three.directionallight?(cb+="1,Y.visible&&(ma.setFromMatrixPosition(Y.matrixWorld),Da.setFromMatrixPosition(Y.target.matrixWorld)," ma.sub(da),ma.normalize(),xb="3*wb,Ua[xb]=ma.x,Ua[xb+1]=ma.y,Ua[xb+2]=ma.z,I.gammaInput?E(Na,xb,Aa,na*na):w(Na,xb,Aa,na),wb+=1)):Y" three.pointlight?(ka+="1,Y.visible&&(pb=3*ob,I.gammaInput?E(mb,pb,Aa,na*na):w(mb,pb,Aa,na),Da.setFromMatrixPosition(Y.matrixWorld),kb[pb]=Da.x,kb[pb+1]=Da.y,kb[pb+2]=Da.z,sb[ob]=jb,ob+=1)):Y" three.spotlight?(la+="1,Y.visible&&(B=3*Pa,I.gammaInput?E(Va,B,Aa,na*na):w(Va,B,Aa,na),ma.setFromMatrixPosition(Y.matrixWorld),Ia[B]=ma.x,Ia[B+1]=ma.y,Ia[B+2]=ma.z," nb[pa]="jb,Da.setFromMatrixPosition(Y.target.matrixWorld),ma.sub(Da),ma.normalize(),Oa[B]=ma.x,Oa[B+1]=ma.y,Oa[B+2]=ma.z,ia[Pa]=Math.cos(Y.angle),ra[Pa]=Y.exponent,Pa+=1)):Y" three.hemispherelight&&(ib+="1,Y.visible&&(ma.setFromMatrixPosition(Y.matrixWorld),ma.normalize(),db=3*Ca,bb[db]=ma.x,bb[db+1]=ma.y,bb[db+2]=ma.z,Ha=Y.color,hb=Y.groundColor,I.gammaInput?(ab=na*na,E(J,db,Ha,ab),E(Ba,db,hb,ab)):(w(J,db,Ha,na),w(Ba,db,hb,na)),Ca+=1)));fa=3*wb;for(fb=Math.max(Na.length,3*cb);fa<fb;fa++)Na[fa]=" 0;fa="3*ob;for(fb=Math.max(mb.length,3*Ka);fa<fb;fa++)mb[fa]=0;fa=3*Pa;for(fb=Math.max(Va.length,3*La);fa<fb;fa++)Va[fa]=0;fa=3*Ca;for(fb=Math.max(J.length,3*ib);fa<fb;fa++)J[fa]=0;fa=3*Ca;for(fb=Math.max(Ba.length,3*ib);fa<fb;fa++)Ba[fa]=0;la.directional.length=wb;la.point.length=ob;la.spot.length=Pa;la.hemi.length=Ca;la.ambient[0]=Ma;la.ambient[1]=Sa;la.ambient[2]=Ya;Ob=!1}if(ya){var" sa="nc;P.ambientLightColor.value=sa.ambient;P.directionalLightColor.value=sa.directional.colors;P.directionalLightDirection.value=" sa.directional.positions;p.pointlightcolor.value="sa.point.colors;P.pointLightPosition.value=sa.point.positions;P.pointLightDistance.value=sa.point.distances;P.spotLightColor.value=sa.spot.colors;P.spotLightPosition.value=sa.spot.positions;P.spotLightDistance.value=sa.spot.distances;P.spotLightDirection.value=sa.spot.directions;P.spotLightAngleCos.value=sa.spot.anglesCos;P.spotLightExponent.value=sa.spot.exponents;P.hemisphereLightSkyColor.value=sa.hemi.skyColors;P.hemisphereLightGroundColor.value=" sa.hemi.groundcolors;p.hemispherelightdirection.value="sa.hemi.positions;F(P,!0)}else" f(p,!1)}if(d="" three.meshphongmaterial){p.opacity.value="d.opacity;I.gammaInput?P.diffuse.value.copyGammaToLinear(d.color):P.diffuse.value=d.color;P.map.value=d.map;P.lightMap.value=d.lightMap;P.specularMap.value=d.specularMap;P.alphaMap.value=d.alphaMap;d.bumpMap&&(P.bumpMap.value=d.bumpMap,P.bumpScale.value=d.bumpScale);d.normalMap&&" (p.normalmap.value="d.normalMap,P.normalScale.value.copy(d.normalScale));var" oa;d.map?oa="d.map:d.specularMap?oa=d.specularMap:d.normalMap?oa=d.normalMap:d.bumpMap?oa=d.bumpMap:d.alphaMap&&(oa=d.alphaMap);if(void" ub="oa.offset,zb=oa.repeat;P.offsetRepeat.value.set(ub.x,ub.y,zb.x,zb.y)}P.envMap.value=d.envMap;P.flipEnvMap.value=d.envMap" three.webglrendertargetcube?1:-1;p.reflectivity.value="d.reflectivity;P.refractionRatio.value=d.refractionRatio}d" three.linebasicmaterial?="" (p.diffuse.value="d.color,P.opacity.value=d.opacity):d" three.linedashedmaterial?(p.diffuse.value="d.color,P.opacity.value=d.opacity,P.dashSize.value=d.dashSize,P.totalSize.value=d.dashSize+d.gapSize,P.scale.value=d.scale):d" three.pointcloudmaterial?(p.pscolor.value="d.color,P.opacity.value=d.opacity,P.size.value=d.size,P.scale.value=Q.height/2,P.map.value=d.map):d" three.meshphongmaterial?(p.shininess.value="d.shininess,I.gammaInput?(P.ambient.value.copyGammaToLinear(d.ambient)," p.emissive.value.copygammatolinear(d.emissive),p.specular.value.copygammatolinear(d.specular)):(p.ambient.value="d.ambient,P.emissive.value=d.emissive,P.specular.value=d.specular),d.wrapAround&&P.wrapRGB.value.copy(d.wrapRGB)):d" three.meshlambertmaterial?(i.gammainput?(p.ambient.value.copygammatolinear(d.ambient),p.emissive.value.copygammatolinear(d.emissive)):(p.ambient.value="d.ambient,P.emissive.value=d.emissive),d.wrapAround&&P.wrapRGB.value.copy(d.wrapRGB)):d" three.meshdepthmaterial?="" (p.mnear.value="a.near,P.mFar.value=a.far,P.opacity.value=d.opacity):d" three.meshnormalmaterial&&(p.opacity.value="d.opacity);if(e.receiveShadow&&!d._shadowPass&&P.shadowMatrix)for(var" ab="0,vb=0,Xb=b.length;vb<Xb;vb++){var" lb="b[vb];lb.castShadow&&(lb" three.spotlight||lb="" three.directionallight&&!lb.shadowcascade)&&(p.shadowmap.value[ab]="lb.shadowMap,P.shadowMapSize.value[Ab]=lb.shadowMapSize,P.shadowMatrix.value[Ab]=lb.shadowMatrix,P.shadowDarkness.value[Ab]=lb.shadowDarkness," p.shadowbias.value[ab]="lb.shadowBias,Ab++)}for(var" cb="d.uniformsList,V,Ja,Wa,Db=0,Pb=Cb.length;Db<Pb;Db++){var" $="Cb[Db][0];if(!1!==$.needsUpdate){var" eb="$.type,R=$.value,S=Cb[Db][1];switch(Eb){case" "1i":l.uniform1i(s,r);break;case="" "1f":l.uniform1f(s,r);break;case="" "2f":l.uniform2f(s,r[0],r[1]);break;case="" "3f":l.uniform3f(s,r[0],r[1],r[2]);break;case="" "4f":l.uniform4f(s,r[0],r[1],r[2],r[3]);break;case="" "1iv":l.uniform1iv(s,r);break;case="" "3iv":l.uniform3iv(s,r);break;case="" "1fv":l.uniform1fv(s,r);break;="" case="" "2fv":l.uniform2fv(s,r);break;case="" "3fv":l.uniform3fv(s,r);break;case="" "4fv":l.uniform4fv(s,r);break;case="" "matrix3fv":l.uniformmatrix3fv(s,!1,r);break;case="" "matrix4fv":l.uniformmatrix4fv(s,!1,r);break;case="" "i":l.uniform1i(s,r);break;case="" "f":l.uniform1f(s,r);break;case="" "v2":l.uniform2f(s,r.x,r.y);break;case="" "v3":l.uniform3f(s,r.x,r.y,r.z);break;case="" "v4":l.uniform4f(s,r.x,r.y,r.z,r.w);break;case="" "c":l.uniform3f(s,r.r,r.g,r.b);break;case="" "iv1":l.uniform1iv(s,r);break;case="" "iv":l.uniform3iv(s,r);="" break;case="" "fv1":l.uniform1fv(s,r);break;case="" "fv":l.uniform3fv(s,r);break;case="" "v2v":void="" float32array(2*r.length));for(var="" "v3v":void="" float32array(3*r.length));z="0;for(Ea=R.length;Z<Ea;Z++)Wa=3*Z,$._array[Wa]=R[Z].x,$._array[Wa+1]=R[Z].y,$._array[Wa+2]=R[Z].z;l.uniform3fv(S,$._array);break;case" "v4v":void="" float32array(4*="" r.length));z="0;for(Ea=R.length;Z<Ea;Z++)Wa=4*Z,$._array[Wa]=R[Z].x,$._array[Wa+1]=R[Z].y,$._array[Wa+2]=R[Z].z,$._array[Wa+3]=R[Z].w;l.uniform4fv(S,$._array);break;case" "m3":l.uniformmatrix3fv(s,!1,r.elements);break;case="" "m3v":void="" float32array(9*r.length));z="0;for(Ea=R.length;Z<Ea;Z++)R[Z].flattenToArrayOffset($._array,9*Z);l.uniformMatrix3fv(S,!1,$._array);break;case" "m4":l.uniformmatrix4fv(s,!1,r.elements);break;case="" "m4v":void="" float32array(16*="" "t":v="R;Ja=z();l.uniform1i(S,Ja);if(!V)continue;if(V" three.cubetexture||v.image="" array&&6="==V.image.length){var" ka="V,Bb=Ja;if(6===ka.image.length)if(ka.needsUpdate){ka.image.__webglTextureCube||(ka.addEventListener("dispose",Jb),ka.image.__webglTextureCube=l.createTexture(),I.info.memory.textures++);l.activeTexture(l.TEXTURE0+Bb);l.bindTexture(l.TEXTURE_CUBE_MAP," ka.image.__webgltexturecube);l.pixelstorei(l.unpack_flip_y_webgl,ka.flipy);for(var="" fb="ka" three.compressedtexture,ba="ka.image[0]instanceof" three.datatexture,gb="[],ua=0;6">ua;ua++)gb[ua]=!I.autoScaleCubemaps||Fb||ba?ba?ka.image[ua].image:ka.image[ua]:M(ka.image[ua],Ec);var Qb=gb[0],Rb=THREE.Math.isPowerOfTwo(Qb.width)&&THREE.Math.isPowerOfTwo(Qb.height),qb=T(ka.format),Sb=T(ka.type);U(l.TEXTURE_CUBE_MAP,ka,Rb);for(ua=0;6>ua;ua++)if(Fb)for(var yb,Gb=gb[ua].mipmaps,rb=0,Yb=Gb.length;rb<yb;rb++)yb= 0="==$._array&&($._array=[]);Z=0;for(Ea=$.value.length;Z<Ea;Z++)$._array[Z]=z();l.uniform1iv(S,$._array);Z=0;" gb[rb],ka.format!="=THREE.RGBAFormat&&ka.format!==THREE.RGBFormat?-1<oc().indexOf(qb)?l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+ua,rb,qb,yb.width,yb.height,0,yb.data):console.warn("Attempt" to="" load="" unsupported="" compressed="" texture="" format"):l.teximage2d(l.texture_cube_map_positive_x+ua,rb,qb,yb.width,yb.height,0,qb,sb,yb.data);else="" ba?l.teximage2d(l.texture_cube_map_positive_x+ua,0,qb,gb[ua].width,gb[ua].height,0,qb,sb,gb[ua].data):l.teximage2d(l.texture_cube_map_positive_x+ua,0,qb,qb,sb,gb[ua]);="" ka.generatemipmaps&&rb&&l.generatemipmap(l.texture_cube_map);ka.needsupdate="!1;if(ka.onUpdate)ka.onUpdate()}else" l.activetexture(l.texture0+bb),l.bindtexture(l.texture_cube_map,ka.image.__webgltexturecube)}else="" if(v="" instanceof="" three.webglrendertargetcube){var="" zb="V;l.activeTexture(l.TEXTURE0+Ja);l.bindTexture(l.TEXTURE_CUBE_MAP,Zb.__webglTexture)}else" i.settexture(v,ja);break;case="" "tv":void="" for(ea="$.value.length;Z<Ea;Z++)V=$.value[Z],Ja=$._array[Z],V&&I.setTexture(V,Ja);break;default:console.warn("THREE.WebGLRenderer:" unknown="" uniform="" type:="" "+eb)}}}}l.uniformmatrix4fv(ha.modelviewmatrix,!1,e._modelviewmatrix.elements);ha.normalmatrix&&l.uniformmatrix3fv(ha.normalmatrix,!1,e._normalmatrix.elements);null!="=ha.modelMatrix&&l.uniformMatrix4fv(ha.modelMatrix,!1,e.matrixWorld.elements);return" xa}function="" f(a,b){a.ambientlightcolor.needsupdate="b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=" b;a.pointlightcolor.needsupdate="b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function" z(){var="" a="Mb;a">=pc&&console.warn("WebGLRenderer: trying to use "+
a+" texture units while this GPU supports only "+pc);Mb+=1;return a}function G(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function E(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function w(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function D(a){a*=O;a!==qc&&(l.lineWidth(a),qc=a)}function A(a,b,c){rc!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),rc=a);!a||sc===b&&tc===c||
(l.polygonOffset(b,c),sc=b,tc=c)}function U(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,T(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,T(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,T(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,T(b.minFilter))):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( "+
b.sourceFile+" )"),l.texParameteri(a,l.TEXTURE_MAG_FILTER,N(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,N(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( "+b.sourceFile+" )"));(c=aa.get("EXT_texture_filter_anisotropic"))&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldanisotropy)&&(l.texparameterf(a,c.texture_max_anisotropy_ext, math.min(b.anisotropy,i.getmaxanisotropy())),b.__oldanisotropy="b.anisotropy)}function" m(a,b){if(a.width="">b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement("canvas");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.log("THREE.WebGLRenderer:",a,"is too big ("+a.width+"x"+a.height+"). Resized to "+d.width+"x"+d.height+".");return d}return a}function K(a,b){l.bindRenderbuffer(l.RENDERBUFFER,
a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function L(a){a instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,
a.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,a.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null))}function N(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?l.NEAREST:l.LINEAR}function T(a){var b;if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;
if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;
if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;
if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;
if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;b=aa.get("WEBGL_compressed_texture_s3tc");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;
if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=aa.get("WEBGL_compressed_texture_pvrtc");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=aa.get("EXT_blend_minmax");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;
if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var Q=void 0!==a.canvas?a.canvas:document.createElement("canvas"),W=void 0!==a.context?a.context:null,O=1,ga=void 0!==a.precision?a.precision:"highp",ea=void 0!==a.alpha?a.alpha:!1,xa=void 0!==a.depth?a.depth:!0,H=void 0!==a.stencil?a.stencil:!0,$a=void 0!==a.antialias?a.antialias:!1,qa=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ya=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:
!1,X=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,ta=new THREE.Color(0),Za=0,pa=[],Fa={},Ga=[],Ta=[],za=[],tb=[],eb=[];this.domElement=Q;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=
!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var I=this,Xa=[],Wb=null,uc=null,Hb=-1,Sa="",Ib=null,Mb=0,zb=-1,Xb=-1,Yb=-1,Zb=-1,ec=-1,fc=-1,gc=-1,hc=-1,rc=null,sc=null,tc=null,qc=null,hb=0,Ya=0,ib=Q.width,jb=Q.height,vc=0,wc=0,kb=new Uint8Array(16),Ma=new Uint8Array(16),ub=new THREE.Frustum,vb=new THREE.Matrix4;new THREE.Matrix4;var Da=new THREE.Vector3,ma=new THREE.Vector3,Ob=!0,nc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},
point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l;try{var xc={alpha:ea,depth:xa,stencil:H,antialias:$a,premultipliedAlpha:qa,preserveDrawingBuffer:ya};l=W||Q.getContext("webgl",xc)||Q.getContext("experimental-webgl",xc);if(null===l){if(null!==Q.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";
}Q.addEventListener("webglcontextlost",function(a){a.preventDefault();yc();zc();Fa={}},!1)}catch(Fc){console.error(Fc)}void 0===l.getShaderPrecisionFormat&&(l.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var aa=new THREE.WebGLExtensions(l);aa.get("OES_texture_float");aa.get("OES_texture_float_linear");aa.get("OES_standard_derivatives");X&&aa.get("EXT_frag_depth");var zc=function(){l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);
l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.viewport(hb,Ya,ib,jb);l.clearColor(ta.r,ta.g,ta.b,Za)},yc=function(){Ib=Wb=null;Xb=zb=hc=gc=Yb=-1;Sa="";Hb=-1;Ob=!0;for(var a=0;a<ma.length;a++)ma[a]=0};zc();this.context=l;var 0="==a||a)d|=l.COLOR_BUFFER_BIT;if(void" pc="l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),Gc=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Hc=l.getParameter(l.MAX_TEXTURE_SIZE),Ec=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE)," vb="0<Gc,Nb=Vb&&aa.get("OES_texture_float"),Ic=l.getShaderPrecisionFormat(l.VERTEX_SHADER,l.HIGH_FLOAT),Jc=l.getShaderPrecisionFormat(l.VERTEX_SHADER,l.MEDIUM_FLOAT);l.getShaderPrecisionFormat(l.VERTEX_SHADER,l.LOW_FLOAT);var" kc="l.getShaderPrecisionFormat(l.FRAGMENT_SHADER,l.HIGH_FLOAT),Lc=l.getShaderPrecisionFormat(l.FRAGMENT_SHADER,l.MEDIUM_FLOAT);l.getShaderPrecisionFormat(l.FRAGMENT_SHADER,l.LOW_FLOAT);var" oc="function(){var" a;return="" function(){if(void="" 0!="=a)return" a;a="[];if(aa.get("WEBGL_compressed_texture_pvrtc")||" aa.get("webgl_compressed_texture_s3tc"))for(var="" b="l.getParameter(l.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return" a}}(),mc="0<Ic.precision&&0<Kc.precision,Ac=0<Jc.precision&&0<Lc.precision;"highp"!==ga||Mc||(Ac?(ga="mediump",console.warn("THREE.WebGLRenderer:" highp="" not="" supported,="" using="" mediump.")):(ga="lowp" ,console.warn("three.webglrenderer:="" and="" mediump="" lowp.")));"mediump"!="=ga||Ac||(ga="lowp",console.warn("THREE.WebGLRenderer:" lowp."));="" var="" nc="new" three.shadowmapplugin(this,pa,fa,ga),oc="new" three.spriteplugin(this,tb),pc="new" three.lensflareplugin(this,eb);this.getcontext="function(){return" l};this.forcecontextloss="function(){aa.get("WEBGL_lose_context").loseContext()};this.supportsVertexTextures=function(){return" vb};this.supportsfloattextures="function(){return" aa.get("oes_texture_float")};this.supportsstandardderivatives="function(){return" aa.get("oes_standard_derivatives")};this.supportscompressedtextures3tc="function(){return" aa.get("webgl_compressed_texture_s3tc")};="" this.supportscompressedtexturepvrtc="function(){return" aa.get("webgl_compressed_texture_pvrtc")};this.supportsblendminmax="function(){return" aa.get("ext_blend_minmax")};this.getmaxanisotropy="function(){var" a;var="" a="null!==b?l.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return" ga};this.getpixelratio="function(){return" o};this.setpixelratio="function(a){O=a};this.setSize=function(a," b,c){q.width="a*O;Q.height=b*O;!1!==c&&(Q.style.width=a+"px",Q.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){hb=a*O;Ya=b*O;ib=c*O;jb=d*O;l.viewport(hb,Ya,ib,jb)};this.setScissor=function(a,b,c,d){l.scissor(a*O,b*O,c*O,d*O)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.getClearColor=function(){return" ta};this.setclearcolor="function(a,b){ta.set(a);Za=void" function(){return="" za};this.setclearalpha="function(a){Za=a;l.clearColor(ta.r,ta.g,ta.b,Za)};this.clear=function(a,b,c){var" d="0;if(void" c,d)};this.resetglstate="yc;var" ic="function(a){a.target.traverse(function(a){a.removeEventListener("remove",ic);if(a" instanceof="" three.mesh||a="" three.pointcloud||a="" three.line)delete="" fa[a.id];else="" if(a="" three.immediaterenderobject||a.immediaterendercallback)for(var="" a.__webglinit;delete="" a._modelviewmatrix;delete="" a._normalmatrix;delete="" a.__webglactive})},jc="function(a){a=a.target;a.removeEventListener("dispose"," jc);delete="" a.__webglinit;if(a="" three.buffergeometry){for(var="" in="" a.attributes){var="" c="a.attributes[b];void" c.buffer)}i.info.memory.geometries--}else="" if(b="sb[a.id],void" e="b[c];if(void" f="0,g=e.numMorphTargets;f<g;f++)l.deleteBuffer(e.__webglMorphTargetsBuffers[f]);delete" e.__webglmorphtargetsbuffers}if(void="" delete="" e.__webglmorphnormalsbuffers}bc(e)}delete="" sb[a.id]}else="" bc(a);sa="" },jb="function(a){a=a.target;a.removeEventListener("dispose",Jb);a.image&&a.image.__webglTextureCube?(l.deleteTexture(a.image.__webglTextureCube),delete" a.image.__webgltexturecube):void="" a.__webgltexture,delete="" a.__webglinit);i.info.memory.textures--},cc="function(a){a=a.target;a.removeEventListener("dispose",Cc);if(a&&void" a.__webgltexture;if(a="" three.webglrendertargetcube)for(var="">b;b++)l.deleteFramebuffer(a.__webglFramebuffer[b]),l.deleteRenderbuffer(a.__webglRenderbuffer[b]);else l.deleteFramebuffer(a.__webglFramebuffer),l.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer;delete a.__webglRenderbuffer}I.info.memory.textures--},mc=function(a){a=a.target;a.removeEventListener("dispose",mc);lc(a)},Bc=function(a){for(var b="__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),
c=0,d=b.length;c<d;c++){var e="b[c];void" 0!="=a[e]&&(l.deleteBuffer(a[e]),delete" a[e])}if(void="" in="" a.__webglcustomattributeslist)l.deletebuffer(a.__webglcustomattributeslist[e].buffer);delete="" a.__webglcustomattributeslist}i.info.memory.geometries--},lc="function(a){var" b="a.program.program;if(void" 0;var="" c,d,e="!1;a=0;for(c=Xa.length;a<c;a++)if(d=Xa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Xa.length;a<" c;a++)d="Xa[a],d.program!==b&&e.push(d);Xa=e;l.deleteProgram(b);I.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){f();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=l.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=l.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=l.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=l.createBuffer());a.hasPositions&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer)," l.bufferdata(l.array_buffer,a.positionarray,l.dynamic_draw),g(b.attributes.position),l.vertexattribpointer(b.attributes.position,3,l.float,!1,0,0));if(a.hasnormals){l.bindbuffer(l.array_buffer,a.__webglnormalbuffer);if(c.shading="==THREE.FlatShading){var" d,e,k,m,n,p,q,r,t,s,v,u="3*a.count;for(v=0;v<u;v+=9)s=a.normalArray,d=s[v],e=s[v+1],k=s[v+2],m=s[v+3],p=s[v+4],r=s[v+5],n=s[v+6],q=s[v+7],t=s[v+8],d=(d+m+n)/3,e=(e+p+q)/3,k=(k+r+t)/3,s[v]=d,s[v+1]=e,s[v+2]=k,s[v+3]=d,s[v+4]=e,s[v+5]=k,s[v+6]=d,s[v+" 7]="e,s[v+8]=k}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);g(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer),l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW),g(b.attributes.uv),l.vertexAttribPointer(b.attributes.uv,2,l.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW)," g(b.attributes.color),l.vertexattribpointer(b.attributes.color,3,l.float,!1,0,0));h();l.drawarrays(l.triangles,0,a.count);a.count="0};this.renderBufferDirect=function(a,b,c,d,g,h){if(!1!==d.visible)if(v(h),a=x(a,b,c,d,h),b=!1,c="direct_"+g.id+"_"+a.id+"_"+(d.wireframe?1:0),c!==Sa&&(Sa=c,b=!0),b&&f(),h" instanceof="" three.mesh){h="!0===d.wireframe?l.LINES:l.TRIANGLES;var" k="g.attributes.index;if(k){var" m,n;k.array="" uint32array&&aa.get("oes_element_index_uint")?(m="l.UNSIGNED_INT,n=4):(m=l.UNSIGNED_SHORT," n="2);c=g.offsets;if(0===c.length)b&&(e(d,a,g,0),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,k.buffer)),l.drawElements(h,k.array.length,m,0),I.info.render.calls++,I.info.render.vertices+=k.array.length,I.info.render.faces+=k.array.length/3;else{b=!0;for(var" p="0,q=c.length;p<q;p++){var" s="c[p].index;b&&(e(d,a,g,s),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,k.buffer));l.drawElements(h,c[p].count,m,c[p].start*n);I.info.render.calls++;I.info.render.vertices+=c[p].count;I.info.render.faces+=c[p].count/3}}}else" b&&e(d,="" a,g,0),d="g.attributes.position,l.drawArrays(h,0,d.array.length/3),I.info.render.calls++,I.info.render.vertices+=d.array.length/3,I.info.render.faces+=d.array.length/9}else" if(h="" three.pointcloud)if(h="l.POINTS,k=g.attributes.index)if(k.array" i.info.render.points+="k.array.length;else" for(1<c.length&&(b="!0),p=0,q=c.length;p<q;p++)s=c[p].index,b&&(e(d,a,g,s),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,k.buffer)),l.drawElements(h,c[p].count,m,c[p].start*n),I.info.render.calls++,I.info.render.points+=c[p].count;else" if(b&&e(d,a,g,0),d="g.attributes.position,c=g.offsets,0===c.length)l.drawArrays(h,0,d.array.length/3),I.info.render.calls++,I.info.render.points+=d.array.length/3;else" for(p="0,q=c.length;p<q;p++)l.drawArrays(h,c[p].index,c[p].count),I.info.render.calls++," three.line)if(h="h.mode===THREE.LineStrip?l.LINE_STRIP:l.LINES,D(d.linewidth),k=g.attributes.index)if(k.array" uint32array?(m="l.UNSIGNED_INT,n=4):(m=l.UNSIGNED_SHORT,n=2),c=g.offsets,0===c.length)b&&(e(d,a,g,0),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,k.buffer)),l.drawElements(h,k.array.length,m,0),I.info.render.calls++,I.info.render.vertices+=k.array.length;else" k.buffer)),l.drawelements(h,c[p].count,m,c[p].start*n),i.info.render.calls++,i.info.render.vertices+="c[p].count;else" a="!1;c=e.id+"_"+c.id+"_"+(d.wireframe?1:0);c!==Sa&&(Sa=c,a=!0);a&&f();if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),g(b.position),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else" if(k.morphtargetbase){c="d.program.attributes;-1!==k.morphTargetBase&&0<=c.position?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k.morphTargetBase]),g(c.position),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER," e.__webglvertexbuffer),g(c.position),l.vertexattribpointer(c.position,3,l.float,!1,0,0));if(k.morphtargetforcedorder.length)for(var="" m="0,n=k.morphTargetForcedOrder,q=k.morphTargetInfluences,s;m<d.numSupportedMorphTargets&&m<n.length;)s=c["morphTarget"+m],0<=s&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n[m]]),g(s),l.vertexAttribPointer(s,3,l.FLOAT,!1,0,0)),s=c["morphNormal"+m],0<=s&&d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n[m]]),g(s),l.vertexAttribPointer(s," 3,l.float,!1,0,0)),k.__webglmorphtargetinfluences[m]="q[n[m]],m++;else{n=[];q=k.morphTargetInfluences;m=0;for(s=q.length;m<s;m++)n.push([q[m],m]);n.length">d.numSupportedMorphTargets?(n.sort(p),n.length=d.numSupportedMorphTargets):n.length>d.numSupportedMorphNormals?n.sort(p):0===n.length&&n.push([0,0]);for(var m=0,r=d.numSupportedMorphTargets;m<r;m++)if(n[m]){var 0="==b.parent&&b.updateMatrixWorld();a.traverse(function(a){a" t="n[m][1];s=c["morphTarget"+m];0<=s&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[t]),g(s),l.vertexAttribPointer(s,3,l.FLOAT," !1,0,0));s="c["morphNormal"+m];0<=s&&d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[t]),g(s),l.vertexAttribPointer(s,3,l.FLOAT,!1,0,0));k.__webglMorphTargetInfluences[m]=q[t]}else" k.__webglmorphtargetinfluences[m]="0}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,k.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(c=0,q=e.__webglCustomAttributesList.length;c<q;c++)n=e.__webglCustomAttributesList[c]," 0<="b[n.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,n.buffer),g(b[n.buffer.belongsToAttribute]),l.vertexAttribPointer(b[n.buffer.belongsToAttribute],n.size,l.FLOAT,!1,0,0));0<=b.color&&(0<k.geometry.colors.length||0<k.geometry.faces.length?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),g(b.color),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0)):void" 0!="=d.defaultAttributeValues&&l.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer)," g(b.normal),l.vertexattribpointer(b.normal,3,l.float,!1,0,0));0<="b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglTangentBuffer),g(b.tangent),l.vertexAttribPointer(b.tangent,4,l.FLOAT,!1,0,0));0<=b.uv&&(k.geometry.faceVertexUvs[0]?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),g(b.uv),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0)):void" g(b.uv2),l.vertexattribpointer(b.uv2,2,l.float,!1,0,0)):void="" g(b.linedistance),l.vertexattribpointer(b.linedistance,1,l.float,!1,0,0))}h();k="" instanceof="" three.mesh?(k="e.__typeArray===Uint32Array?l.UNSIGNED_INT:l.UNSIGNED_SHORT,d.wireframe?(D(d.wireframeLinewidth),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,k,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,k,0)),I.info.render.calls++,I.info.render.vertices+=e.__webglFaceCount,I.info.render.faces+=" e.__webglfacecount="" 3):k="" three.line?(k="k.mode===THREE.LineStrip?l.LINE_STRIP:l.LINES,D(d.linewidth),l.drawArrays(k,0,e.__webglLineCount),I.info.render.calls++):k" three.pointcloud&&(l.drawarrays(l.points,0,e.__webglparticlecount),i.info.render.calls++,i.info.render.points+="e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b" three.camera)console.error("three.webglrenderer.render:="" camera="" is="" not="" an="" instance="" of="" three.camera.");else{var="" e="a.fog;Sa="";Hb=-1;" ib="null;Ob=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void" three.skinnedmesh&&a.skeleton.update()});b.matrixworldinverse.getinverse(b.matrixworld);vb.multiplymatrices(b.projectionmatrix,b.matrixworldinverse);ub.setfrommatrix(vb);pa.length="0;Ta.length=0;za.length=0;tb.length=0;eb.length=0;q(a);!0===I.sortObjects&&(Ta.sort(k),za.sort(n));Nc.render(a,b);I.info.render.calls=0;I.info.render.vertices=0;I.info.render.faces=0;I.info.render.points=" 0;this.setrendertarget(c);(this.autoclear||d)&&this.clear(this.autoclearcolor,this.autocleardepth,this.autoclearstencil);d="0;for(var" f="Ga.length;d<f;d++){var" g="Ga[d],h=g.object;h.visible&&(G(h,b),s(g))}a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),A(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),m(Ta,b,pa,e,!0,d),m(za,b,pa,e,!0,d),t(Ga,"",b,pa,e,!1,d)):(d=null," this.setblending(three.noblending),m(ta,b,pa,e,!1,d),t(ga,"opaque",b,pa,e,!1,d),m(za,b,pa,e,!0,d),t(ga,"transparent",b,pa,e,!0,d));oc.render(a,b);pc.render(a,b,vc,wc);c&&c.generatemipmaps&&c.minfilter!="=THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&L(c);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var" f,d)})};var="" sb="{},kc=0,Dc={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?l.disable(l.CULL_FACE):(b===THREE.FrontFaceDirectionCW?l.frontFace(l.CW):l.frontFace(l.CCW),a===THREE.CullFaceBack?l.cullFace(l.BACK):a===THREE.CullFaceFront?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK)," l.enable(l.cull_face))};this.setmaterialfaces="function(a){var" b="a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;zb!==b&&(b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),zb=b);Xb!==a&&(a?l.frontFace(l.CW):l.frontFace(l.CCW),Xb=a)};this.setDepthTest=function(a){gc!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),gc=a)};this.setDepthWrite=function(a){hc!==a&&(l.depthMask(a),hc=a)};this.setBlending=function(a,b,c,d){a!==Yb&&(a===THREE.NoBlending?l.disable(l.BLEND):a===THREE.AdditiveBlending?" (l.enable(l.blend),l.blendequation(l.func_add),l.blendfunc(l.src_alpha,l.one)):a="==THREE.SubtractiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.SRC_COLOR)):a===THREE.CustomBlending?l.enable(l.BLEND):(l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)),Yb=" a);if(a="==THREE.CustomBlending){if(b!==Zb&&(l.blendEquation(T(b)),Zb=b),c!==ec||d!==fc)l.blendFunc(T(c),T(d)),ec=c,fc=d}else" fc="ec=Zb=null};this.uploadTexture=function(a){void" a.image="M(a.image,Hc);var" three.datatexture)if(0<f.length&&c){for(var="" l.teximage2d(l.texture_2d,0,d,b.width,b.height,0,d,e,b.data);else="" if(a="" three.compressedtexture)for(g="0,h=f.length;g<h;g++)b=f[g],a.format!==THREE.RGBAFormat&&" a.format!="=THREE.RGBFormat?-1<oc().indexOf(d)?l.compressedTexImage2D(l.TEXTURE_2D,g,d,b.width,b.height,0,b.data):console.warn("Attempt" to="" load="" unsupported="" compressed="" texture="" format"):l.teximage2d(l.texture_2d,g,d,b.width,b.height,0,d,e,b.data);else="" if(0<f.length&&c){g="0;for(h=f.length;g<h;g++)b=f[g],l.texImage2D(l.TEXTURE_2D,g,d,d,e,b);a.generateMipmaps=!1}else" l.teximage2d(l.texture_2d,0,d,d,e,a.image);a.generatemipmaps&&c&&l.generatemipmap(l.texture_2d);a.needsupdate="!1;if(a.onUpdate)a.onUpdate()};" this.settexture="function(a,b){l.activeTexture(l.TEXTURE0+b);a.needsUpdate?I.uploadTexture(a):l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var" three.webglrendertargetcube;if(a&&void="" c="THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height)," d="T(a.format),e=T(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);U(l.TEXTURE_CUBE_MAP,a,c);for(var">g;g++){a.__webglFramebuffer[g]=l.createFramebuffer();a.__webglRenderbuffer[g]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,d,a.width,a.height,0,d,e,null);var f=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+g;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[g]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,
h,f.__webglTexture,0);K(a.__webglRenderbuffer[g],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),U(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,d,a.__webglTexture,
0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a.__webglRenderbuffer):K(a.__webglRenderbuffer,a),c&&l.generateMipmap(l.TEXTURE_2D);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?
(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=ib,a=jb,d=hb,e=Ya);b!==uc&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(d,e,c,a),uc=b);vc=c;wc=a};this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};
this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
THREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}null===d&&console.log("THREE.WebGLRenderer: "+c+" extension not supported.");return b[c]=d}};
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,k=d.attributes,n=d.__webglShader.vertexShader,p=d.__webglShader.fragmentShader,q=d.index0AttributeName;void 0===q&&!0===e.morphTargets&&(q="position");var m="SHADOWMAP_TYPE_BASIC";e.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":e.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var t="ENVMAP_TYPE_CUBE",s="ENVMAP_MODE_REFLECTION",r="ENVMAP_BLENDING_MULTIPLY";
if(e.envMap){switch(d.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:t="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:t="ENVMAP_TYPE_SPHERE"}switch(d.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:s="ENVMAP_MODE_REFRACTION"}switch(d.combine){case THREE.MultiplyOperation:r="ENVMAP_BLENDING_MULTIPLY";
break;case THREE.MixOperation:r="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:r="ENVMAP_BLENDING_ADD"}}var u,v;u=[];for(var y in g)v=g[y],!1!==v&&(v="#define "+y+" "+v,u.push(v));u=u.join("\n");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d="":(d=["precision "+e.precision+" float;","precision "+e.precision+" int;",u,e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,
"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,"#define MAX_BONES "+e.maxBones,e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+s:"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":
"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals?"#define USE_MORPHNORMALS":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+m:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":
"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+e.precision+" float;","precision "+e.precision+" int;",e.bumpMap||e.normalMap?"#extension GL_OES_standard_derivatives : enable":"",u,"#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",e.useFog&&e.fog?"#define USE_FOG":
"",e.useFog&&e.fogExp?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+t:"",e.envMap?"#define "+s:"",e.envMap?"#define "+r:"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.metal?"#define METAL":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":
"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+m:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));n=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+n);p=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,b+p);f.attachShader(g,n);f.attachShader(g,p);void 0!==q&&f.bindAttribLocation(g,
0,q);f.linkProgram(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",f.getProgramParameter(g,f.VALIDATE_STATUS)),console.error("gl.getError()",f.getError()));""!==f.getProgramInfoLog(g)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(g));f.deleteShader(n);f.deleteShader(p);q="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");
e.useVertexTexture?(q.push("boneTexture"),q.push("boneTextureWidth"),q.push("boneTextureHeight")):q.push("boneGlobalMatrices");e.logarithmicDepthBuffer&&q.push("logDepthBufFC");for(var C in h)q.push(C);h=q;C={};q=0;for(b=h.length;q<b;q++)m=h[q],c[m]=f.getuniformlocation(g,m);this.uniforms=c;q="position 0="==r){var" 1="" 2="" normal="" uv="" uv2="" tangent="" color="" skinindex="" skinweight="" linedistance".split("="" ");for(h="0;h<e.maxMorphTargets;h++)q.push("morphTarget"+h);for(h=0;h<e.maxMorphNormals;h++)q.push("morphNormal"+h);for(var" x="" in="" k)q.push(x);="" e="q;k={};x=0;for(h=e.length;x<h;x++)C=e[x],k[C]=f.getAttribLocation(g,C);this.attributes=k;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=n;this.fragmentShader=p;return" this}}();="" three.webglshader="function(){var" a="function(a){a=a.split("\n");for(var" c="0;c<a.length;c++)a[c]=c+1+":" "+a[c];return="" a.join("\n")};return="" function(b,c,d){c="b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error("THREE.WebGLShader:" shader="" couldn't="" compile.");""!="=b.getShaderInfoLog(c)&&(console.warn("THREE.WebGLShader:" gl.getshaderinfolog()",b.getshaderinfolog(c)),console.warn(a(d)));return="" c}}();="" three.lensflareplugin="function(a,b){var" c,d,e,f,g,h,k,n,p,q,m="a.context,t,s,r,u,v,y;this.render=function(C,x,F,z){if(0!==b.length){C=new" three.vector3;var="" g="z/F,E=.5*F,w=.5*z,D=16/z,A=new" three.vector2(d*g,d),u="new" three.vector3(1,1,0),m="new" three.vector2(1,1);if(void="" d="new" float32array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),k="new" uint16array([0,1,2,0,2,3]);t="m.createBuffer();s=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,t);m.bufferData(m.ARRAY_BUFFER,D,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER," s);m.bufferdata(m.element_array_buffer,k,m.static_draw);v="m.createTexture();y=m.createTexture();m.bindTexture(m.TEXTURE_2D,v);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);m.bindTexture(m.TEXTURE_2D,y);m.texImage2D(m.TEXTURE_2D,0," m.rgba,16,16,0,m.rgba,m.unsigned_byte,null);m.texparameteri(m.texture_2d,m.texture_wrap_s,m.clamp_to_edge);m.texparameteri(m.texture_2d,m.texture_wrap_t,m.clamp_to_edge);m.texparameteri(m.texture_2d,m.texture_mag_filter,m.nearest);m.texparameteri(m.texture_2d,m.texture_min_filter,m.nearest);var="" lowp="" int="" rendertype;\nuniform="" vec3="" screenposition;\nuniform="" vec2="" scale;\nuniform="" float="" rotation;\nuniform="" sampler2d="" occlusionmap;\nattribute="" position;\nattribute="" uv;\nvarying="" vuv;\nvarying="" vvisibility;\nvoid="" main()="" {\nvuv="uv;\nvec2" pos="position;\nif(" rendertype="=" )="" {\nvec4="" visibility="texture2D(" occlusionmap,="" vec2(="" 0.1,="" 0.1="" );\nvisibility="" +="texture2D(" 0.5,="" 0.9,="" 0.5="" 0.9="" );\nvvisibility="visibility.r" 9.0;\nvvisibility="" *="1.0" -="" visibility.g="" visibility.a="" 9.0;\npos.x="cos(" rotation="" position.x="" sin(="" position.y;\npos.y="sin(" cos(="" position.y;\n}\ngl_position="vec4(" (="" scale="" screenposition.xy="" ).xy,="" screenposition.z,="" 1.0="" );\n}",="" fragmentshader:"uniform="" map;\nuniform="" opacity;\nuniform="" color;\nvarying="" {\nif(="" {\ngl_fragcolor="vec4(" 1.0,="" 0.0,="" 0.0="" );\n}="" else="" if(="" map,="" vuv="" texture="texture2D(" );\ntexture.a="" vvisibility;\ngl_fragcolor="texture;\ngl_FragColor.rgb" rotation;\nattribute="" vuv;\nvoid="" {\npos.x="cos(" fragmentshader:"precision="" mediump="" float;\nuniform="" occlusionmap;\nuniform="" texture2d(="" ).rgb,="" {\nfloat="" ).a;\nvisibility="" 4.0="" );\nvec4="" visibility;\ngl_fragcolor="texture;\ngl_FragColor.rgb" k="m.createProgram(),L=m.createShader(m.FRAGMENT_SHADER),N=m.createShader(m.VERTEX_SHADER),T="precision" "+a.getprecision()+"="" float;\n";m.shadersource(l,t+d.fragmentshader);m.shadersource(n,t+d.vertexshader);m.compileshader(l);m.compileshader(n);m.attachshader(k,l);m.attachshader(k,n);m.linkprogram(k);r="K;p=m.getAttribLocation(r,"position");q=m.getAttribLocation(r,"uv");c=m.getUniformLocation(r,"renderType");d=m.getUniformLocation(r,"map");e=m.getUniformLocation(r,"occlusionMap");f=m.getUniformLocation(r," "opacity");g="m.getUniformLocation(r,"color");h=m.getUniformLocation(r,"scale");k=m.getUniformLocation(r,"rotation");n=m.getUniformLocation(r,"screenPosition")}m.useProgram(r);m.enableVertexAttribArray(p);m.enableVertexAttribArray(q);m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,t);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(q,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);m.disable(m.CULL_FACE);m.depthMask(!1);K=0;for(L=b.length;K<L;K++)if(D=16/z,A.set(D*" g,d),n="b[K],C.set(N.matrixWorld.elements[12],N.matrixWorld.elements[13],N.matrixWorld.elements[14]),C.applyMatrix4(x.matrixWorldInverse),C.applyProjection(x.projectionMatrix),U.copy(C),M.x=U.x*E+E,M.y=U.y*w+w,u||0<M.x&&M.x<F&&0<M.y&&M.y<z){m.activeTexture(m.TEXTURE1);m.bindTexture(m.TEXTURE_2D,v);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,M.x-8,M.y-8,16,16,0);m.uniform1i(c,0);m.uniform2f(h,A.x,A.y);m.uniform3f(n,U.x,U.y,U.z);m.disable(m.BLEND);m.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT," 0);m.activetexture(m.texture0);m.bindtexture(m.texture_2d,y);m.copyteximage2d(m.texture_2d,0,m.rgba,m.x-8,m.y-8,16,16,0);m.uniform1i(c,1);m.disable(m.depth_test);m.activetexture(m.texture1);m.bindtexture(m.texture_2d,v);m.drawelements(m.triangles,6,m.unsigned_short,0);n.positionscreen.copy(u);n.customupdatecallback?n.customupdatecallback(n):n.updatelensflares();m.uniform1i(c,2);m.enable(m.blend);for(var="" t="0,Q=N.lensFlares.length;T<Q;T++){var" w="N.lensFlares[T];.001<W.opacity&&.001<W.scale&&(U.x=W.x," u.y="W.y,U.z=W.z,D=W.size*W.scale/z,A.x=D*G,A.y=D,m.uniform3f(n,U.x,U.y,U.z),m.uniform2f(h,A.x,A.y),m.uniform1f(k,W.rotation),m.uniform1f(f,W.opacity),m.uniform3f(g,W.color.r,W.color.g,W.color.b),a.setBlending(W.blending,W.blendEquation,W.blendSrc,W.blendDst),a.setTexture(W.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}m.enable(m.CULL_FACE);m.enable(m.DEPTH_TEST);m.depthMask(!0);a.resetGLState()}}};" three.shadowmapplugin="function(a,b,c,d){function" e(a,b,d){if(b.visible){var="" f="0,h=g.length;f<h;f++){var" three.frustum,q="new" three.matrix4,m="new" three.vector3,t="new" three.vector3,s="new" three.vector3,r="[],u=THREE.ShaderLib.depthRGBA,v=THREE.UniformsUtils.clone(u.uniforms);" three.shadermaterial({uniforms:v,vertexshader:u.vertexshader,fragmentshader:u.fragmentshader});h="new" three.shadermaterial({uniforms:v,vertexshader:u.vertexshader,fragmentshader:u.fragmentshader,morphtargets:!0});k="new" three.shadermaterial({uniforms:v,vertexshader:u.vertexshader,fragmentshader:u.fragmentshader,skinning:!0});n="new" three.shadermaterial({uniforms:v,vertexshader:u.vertexshader,fragmentshader:u.fragmentshader,morphtargets:!0,skinning:!0});g._shadowpass="!0;h._shadowPass=!0;k._shadowPass=" !0;n._shadowpass="!0;this.render=function(c,v){if(!1!==a.shadowMapEnabled){var" u,f,z,g,e,w,d,a,u="[];G=0;f.clearColor(1,1,1,1);f.disable(f.BLEND);f.enable(f.CULL_FACE);f.frontFace(f.CCW);a.shadowMapCullFace===THREE.CullFaceFront?f.cullFace(f.FRONT):f.cullFace(f.BACK);a.setDepthTest(!0);u=0;for(F=b.length;u<F;u++)if(z=b[u],z.castShadow)if(z" instanceof="" three.directionallight&&z.shadowcascade)for(e="0;E<z.shadowCascadeCount;E++){var" m;if(z.shadowcascadearray[e])m="z.shadowCascadeArray[E];else{D=z;var" three.directionallight;m.isvirtual="!0;M.onlyShadow=!0;M.castShadow=!0;M.shadowCameraNear=D.shadowCameraNear;M.shadowCameraFar=D.shadowCameraFar;M.shadowCameraLeft=D.shadowCameraLeft;M.shadowCameraRight=D.shadowCameraRight;M.shadowCameraBottom=D.shadowCameraBottom;M.shadowCameraTop=D.shadowCameraTop;M.shadowCameraVisible=D.shadowCameraVisible;M.shadowDarkness=D.shadowDarkness;M.shadowBias=D.shadowCascadeBias[K];M.shadowMapWidth=D.shadowCascadeWidth[K];M.shadowMapHeight=D.shadowCascadeHeight[K];" m.pointsworld="[];M.pointsFrustum=[];A=M.pointsWorld;w=M.pointsFrustum;for(var" l="0;8">L;L++)A[L]=new THREE.Vector3,w[L]=new THREE.Vector3;A=D.shadowCascadeNearZ[K];D=D.shadowCascadeFarZ[K];w[0].set(-1,-1,A);w[1].set(1,-1,A);w[2].set(-1,1,A);w[3].set(1,1,A);w[4].set(-1,-1,D);w[5].set(1,-1,D);w[6].set(-1,1,D);w[7].set(1,1,D);M.originalCamera=v;w=new THREE.Gyroscope;w.position.copy(z.shadowCascadeOffset);w.add(M);w.add(M.target);v.add(w);z.shadowCascadeArray[E]=M;console.log("Created virtualLight",M)}K=
z;A=E;D=K.shadowCascadeArray[A];D.position.copy(K.position);D.target.position.copy(K.target.position);D.lookAt(D.target);D.shadowCameraVisible=K.shadowCameraVisible;D.shadowDarkness=K.shadowDarkness;D.shadowBias=K.shadowCascadeBias[A];w=K.shadowCascadeNearZ[A];K=K.shadowCascadeFarZ[A];D=D.pointsFrustum;D[0].z=w;D[1].z=w;D[2].z=w;D[3].z=w;D[4].z=K;D[5].z=K;D[6].z=K;D[7].z=K;U[G]=M;G++}else U[G]=z,G++;u=0;for(F=U.length;u<f;u++){z=u[u];z.shadowmap||(e=three.linearfilter,a.shadowmaptype===three.pcfsoftshadowmap&& (e="THREE.NearestFilter),z.shadowMap=new" three.webglrendertarget(z.shadowmapwidth,z.shadowmapheight,{minfilter:e,magfilter:e,format:three.rgbaformat}),z.shadowmapsize="new" three.vector2(z.shadowmapwidth,z.shadowmapheight),z.shadowmatrix="new" three.matrix4);if(!z.shadowcamera){if(z="" instanceof="" three.spotlight)z.shadowcamera="new" three.perspectivecamera(z.shadowcamerafov,z.shadowmapwidth="" z.shadowmapheight,z.shadowcameranear,z.shadowcamerafar);else="" if(z="" three.directionallight)z.shadowcamera="new" three.orthographiccamera(z.shadowcameraleft,="" z.shadowcameraright,z.shadowcameratop,z.shadowcamerabottom,z.shadowcameranear,z.shadowcamerafar);else{console.error("unsupported="" light="" type="" for="" shadow");continue}c.add(z.shadowcamera);!0="==c.autoUpdate&&c.updateMatrixWorld()}z.shadowCameraVisible&&!z.cameraHelper&&(z.cameraHelper=new" three.camerahelper(z.shadowcamera),c.add(z.camerahelper));if(z.isvirtual&&m.originalcamera="=v){E=v;G=z.shadowCamera;w=z.pointsFrustum;D=z.pointsWorld;m.set(Infinity,Infinity,Infinity);t.set(-Infinity,-Infinity,-Infinity);" for(k="0;8">K;K++)A=D[K],A.copy(w[K]),A.unproject(E),A.applyMatrix4(G.matrixWorldInverse),A.x<m.x&&(m.x=a.x),a.x>t.x&&(t.x=A.x),A.y<m.y&&(m.y=a.y),a.y>t.y&&(t.y=A.y),A.z<m.z&&(m.z=a.z),a.z>t.z&&(t.z=A.z);G.left=m.x;G.right=t.x;G.top=t.y;G.bottom=m.y;G.updateProjectionMatrix()}G=z.shadowMap;w=z.shadowMatrix;E=z.shadowCamera;E.position.setFromMatrixPosition(z.matrixWorld);s.setFromMatrixPosition(z.target.matrixWorld);E.lookAt(s);E.updateMatrixWorld();E.matrixWorldInverse.getInverse(E.matrixWorld);z.cameraHelper&&
(z.cameraHelper.visible=z.shadowCameraVisible);z.shadowCameraVisible&&z.cameraHelper.update();w.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);w.multiply(E.projectionMatrix);w.multiply(E.matrixWorldInverse);q.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse);p.setFromMatrix(q);a.setRenderTarget(G);a.clear();r.length=0;e(c,c,E);z=0;for(G=r.length;z<g;z++)d=r[z],w=d.object,d=d.buffer,k=w.material 0="==G){var" instanceof="" three.meshfacematerial?w.material.materials[0]:w.material,a="void" 0!="=w.geometry.morphTargets&&" 0<w.geometry.morphtargets.length&&k.morphtargets,l="w" three.skinnedmesh&&k.skinning,a="w.customDepthMaterial?w.customDepthMaterial:L?A?n:k:A?h:g,a.setMaterialFaces(K),D" three.buffergeometry?a.renderbufferdirect(e,b,null,a,d,w):a.renderbuffer(e,b,null,a,d,w);z="0;for(G=d.length;z<G;z++)D=d[z],w=D.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,w.matrixWorld),a.renderImmediateObject(E,b,null,g,w))}u=a.getClearColor();F=a.getClearAlpha();f.clearColor(u.r," u.g,u.b,f);f.enable(f.blend);a.shadowmapcullface="==THREE.CullFaceFront&&f.cullFace(f.BACK);a.resetGLState()}}};" three.spriteplugin="function(a,b){var" c,d,e,f,g,h,k,n,p,q,m,t,s,r,u,v,y;function="" c(a,b){return="" a.z!="=b.z?b.z-a.z:b.id-a.id}var" x="a.context,F,z,G,E,w=new" three.vector3,d="new" three.quaternion,a="new" three.vector3;this.render="function(U,M){if(0!==b.length){if(void" k="new" float32array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),l="new" uint16array([0,1,2,0,2,3]);f="x.createBuffer();z=x.createBuffer();x.bindBuffer(x.ARRAY_BUFFER,F);x.bufferData(x.ARRAY_BUFFER,K,x.STATIC_DRAW);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER," z);x.bufferdata(x.element_array_buffer,l,x.static_draw);var="" "+a.getprecision()+"="" float;","uniform="" mat4="" modelviewmatrix;\nuniform="" projectionmatrix;\nuniform="" float="" rotation;\nuniform="" vec2="" scale;\nuniform="" uvoffset;\nuniform="" uvscale;\nattribute="" position;\nattribute="" uv;\nvarying="" vuv;\nvoid="" main()="" {\nvuv="uvOffset" +="" uv="" *="" uvscale;\nvec2="" alignedposition="position" scale;\nvec2="" rotatedposition;\nrotatedposition.x="cos(" rotation="" )="" alignedposition.x="" -="" sin(="" alignedposition.y;\nrotatedposition.y="sin(" cos(="" alignedposition.y;\nvec4="" finalposition;\nfinalposition="modelViewMatrix" vec4(="" 0.0,="" 1.0="" );\nfinalposition.xy="" =="" projectionmatrix="" finalposition;\ngl_position="finalPosition;\n}"].join("\n"));" x.shadersource(n,["precision="" vec3="" color;\nuniform="" sampler2d="" map;\nuniform="" opacity;\nuniform="" int="" fogtype;\nuniform="" fogcolor;\nuniform="" fogdensity;\nuniform="" fognear;\nuniform="" fogfar;\nuniform="" alphatest;\nvarying="" {\nvec4="" texture="texture2D(" map,="" vuv="" );\nif="" (="" texture.a="" <="" alphatest="" discard;\ngl_fragcolor="vec4(" color="" texture.xyz,="" opacity="" fogtype=""> 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
x.compileShader(L);x.compileShader(N);x.attachShader(K,L);x.attachShader(K,N);x.linkProgram(K);G=K;v=x.getAttribLocation(G,"position");y=x.getAttribLocation(G,"uv");c=x.getUniformLocation(G,"uvOffset");d=x.getUniformLocation(G,"uvScale");e=x.getUniformLocation(G,"rotation");f=x.getUniformLocation(G,"scale");g=x.getUniformLocation(G,"color");h=x.getUniformLocation(G,"map");k=x.getUniformLocation(G,"opacity");n=x.getUniformLocation(G,"modelViewMatrix");p=x.getUniformLocation(G,"projectionMatrix");q=
x.getUniformLocation(G,"fogType");m=x.getUniformLocation(G,"fogDensity");t=x.getUniformLocation(G,"fogNear");s=x.getUniformLocation(G,"fogFar");r=x.getUniformLocation(G,"fogColor");u=x.getUniformLocation(G,"alphaTest");K=document.createElement("canvas");K.width=8;K.height=8;L=K.getContext("2d");L.fillStyle="white";L.fillRect(0,0,8,8);E=new THREE.Texture(K);E.needsUpdate=!0}x.useProgram(G);x.enableVertexAttribArray(v);x.enableVertexAttribArray(y);x.disable(x.CULL_FACE);x.enable(x.BLEND);x.bindBuffer(x.ARRAY_BUFFER,
F);x.vertexAttribPointer(v,2,x.FLOAT,!1,16,0);x.vertexAttribPointer(y,2,x.FLOAT,!1,16,8);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,z);x.uniformMatrix4fv(p,!1,M.projectionMatrix.elements);x.activeTexture(x.TEXTURE0);x.uniform1i(h,0);L=K=0;(N=U.fog)?(x.uniform3f(r,N.color.r,N.color.g,N.color.b),N instanceof THREE.Fog?(x.uniform1f(t,N.near),x.uniform1f(s,N.far),x.uniform1i(q,1),L=K=1):N instanceof THREE.FogExp2&&(x.uniform1f(m,N.density),x.uniform1i(q,2),L=K=2)):(x.uniform1i(q,0),L=K=0);for(var N=0,T=b.length;N<
T;N++){var Q=b[N];Q._modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,Q.matrixWorld);Q.z=-Q._modelViewMatrix.elements[14]}b.sort(C);for(var W=[],N=0,T=b.length;N<t;n++){var q="b[N],O=Q.material;x.uniform1f(u,O.alphaTest);x.uniformMatrix4fv(n,!1,Q._modelViewMatrix.elements);Q.matrixWorld.decompose(w,D,A);W[0]=A.x;W[1]=A.y;Q=0;U.fog&&O.fog&&(Q=L);K!==Q&&(x.uniform1i(q,Q),K=Q);null!==O.map?(x.uniform2f(c,O.map.offset.x,O.map.offset.y),x.uniform2f(d,O.map.repeat.x,O.map.repeat.y)):(x.uniform2f(c," 0,0),x.uniform2f(d,1,1));x.uniform1f(k,o.opacity);x.uniform3f(g,o.color.r,o.color.g,o.color.b);x.uniform1f(e,o.rotation);x.uniform2fv(f,w);a.setblending(o.blending,o.blendequation,o.blendsrc,o.blenddst);a.setdepthtest(o.depthtest);a.setdepthwrite(o.depthwrite);o.map&&o.map.image&&o.map.image.width?a.settexture(o.map,0):a.settexture(e,0);x.drawelements(x.triangles,6,x.unsigned_short,0)}x.enable(x.cull_face);a.resetglstate()}}};="" three.geometryutils="{merge:function(a,b,c){console.warn("THREE.GeometryUtils:" .merge()="" has="" been="" moved="" to="" geometry.="" use="" geometry.merge(="" geometry2,="" matrix,="" materialindexoffset="" )="" instead.");var="" d;b="" instanceof="" three.mesh&&(b.matrixautoupdate&&b.updatematrix(),d="b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils:" .center()="" geometry.center()="" instead.");return="" a.center()}};="" three.imageutils="{crossOrigin:void" 0,loadtexture:function(a,b,c,d){var="" e="new" three.imageloader;e.crossorigin="this.crossOrigin;var" f="new" three.texture(void="" 0,b);e.load(a,function(a){f.image="a;f.needsUpdate=!0;c&&c(f)},void" 0,function(a){d&&d(a)});f.sourcefile="a;return" f},loadtexturecube:function(a,b,c,d){var="" three.cubetexture([],b);f.flipy="!1;var" g="0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&" c(f))},void="" 0,d)};for(var="" h="0,k=a.length;h<k;++h)b(h);return" f},loadcompressedtexture:function(){console.error("three.imageutils.loadcompressedtexture="" removed.="" three.ddsloader="" instead.")},loadcompressedtexturecube:function(){console.error("three.imageutils.loadcompressedtexturecube="" instead.")},getnormalmap:function(a,b){var="" c="function(a){var" b="Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var" d="a.width,e=a.height,f=document.createElement("canvas");" f.width="d;f.height=e;var" m="0">q-1?0:q-1,t=q+1>e-1?e-1:q+1,s=0>p-1?0:p-1,r=p+1>d-1?d-1:p+1,u=[],v=[0,0,h[4*(q*d+p)]/255*b];u.push([-1,0,h[4*(q*d+s)]/255*b]);u.push([-1,-1,h[4*(m*d+s)]/255*b]);u.push([0,-1,h[4*(m*d+p)]/255*b]);u.push([1,-1,h[4*(m*d+r)]/255*b]);u.push([1,0,h[4*(q*d+r)]/255*b]);u.push([1,1,h[4*(t*d+r)]/255*b]);u.push([0,1,h[4*(t*d+p)]/255*
b]);u.push([-1,1,h[4*(t*d+s)]/255*b]);m=[];s=u.length;for(t=0;t<s;t++){var r="u[t],y=u[(t+1)%s],r=[r[0]-v[0],r[1]-v[1],r[2]-v[2]],y=[y[0]-v[0],y[1]-v[1],y[2]-v[2]];m.push(c([r[1]*y[2]-r[2]*y[1],r[2]*y[0]-r[0]*y[2],r[0]*y[1]-r[1]*y[0]]))}u=[0,0,0];for(t=0;t<m.length;t++)u[0]+=m[t][0],u[1]+=m[t][1],u[2]+=m[t][2];u[0]/=m.length;u[1]/=m.length;u[2]/=m.length;v=4*(q*d+p);n[v]=(u[0]+1)/2*255|0;n[v+1]=(u[1]+1)/2*255|0;n[v+2]=255*u[2]|0;n[v+3]=255}g.putImageData(k,0,0);return" f},generatedatatexture:function(a,="" b,c){var="" d="a*b,e=new" uint8array(3*d),f="Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var" h="0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new" three.datatexture(e,a,b,three.rgbformat);a.needsupdate="!0;return" a}};="" three.sceneutils="{createMultiMaterialObject:function(a,b){for(var" c="new" three.object3d,d="0,e=b.length;d<e;d++)c.add(new" three.mesh(a,b[d]));return="" c},detach:function(a,b,c){a.applymatrix(b.matrixworld);b.remove(a);c.add(a)},attach:function(a,b,c){var="" three.matrix4;d.getinverse(c.matrixworld);a.applymatrix(d);b.remove(a);c.add(a)}};="" three.fontutils="{faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return" this.faces[this.face][this.weight][this.style]}catch(a){throw"the="" font="" "+this.face+"="" with="" "+this.weight+"="" weight="" and="" "+this.style+"="" style="" is="" missing.";}},loadface:function(a){var="" b="a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return" this.faces[b][a.cssfontweight][a.cssfontstyle]="a},drawText:function(a){var" three.path,h="this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var" f="[],g,h,k,n,p,q,m,t,s,r,u,v=b.glyphs[a]||b.glyphs["?"];if(v){if(v.o)for(b=v._cachedOutline||(v._cachedOutline=v.o.split("" ")),n="b.length,a=0;a<n;)switch(k=b[a++],k){case" "m":k="b[a++]*c+d;p=b[a++]*c;e.moveTo(k,p);" break;case="" "l":k="b[a++]*c+d;p=b[a++]*c;e.lineTo(k,p);break;case" "q":k="b[a++]*c+d;p=b[a++]*c;t=b[a++]*c+d;s=b[a++]*c;e.quadraticCurveTo(t,s,k,p);if(g=f[f.length-1])for(q=g.x,m=g.y,g=1,h=this.divisions;g<=h;g++){var" y="g/h;THREE.Shape.Utils.b2(y,q,t,k);THREE.Shape.Utils.b2(y,m,s,p)}break;case" "b":if(k="b[a++]*c+d,p=b[a++]*c,t=b[a++]*c+d,s=b[a++]*c,r=b[a++]*c+d,u=b[a++]*c,e.bezierCurveTo(t,s,r,u,k,p),g=f[f.length-1])for(q=g.x,m=g.y,g=1,h=this.divisions;g<=h;g++)y=g/h,THREE.Shape.Utils.b3(y,q,t,r,k),THREE.Shape.Utils.b3(y," m,s,u,p)}return{offset:v.ha*c,path:e}}}};="" three.fontutils.generateshapes="function(a,b){b=b||{};var" 0!="=b.curveSegments?b.curveSegments:4,d=void" d};="" (function(a){var="" e="a.length;if(3">e)return null;var f=[],g=[],h=[],k,n,p;if(0<b(a))for(n=0;n<e;n++)g[n]=n;else for(n="0;n<e;n++)g[n]=e-1-n;var" q="2*e;for(n=e-1;2<e;){if(0">=q--){console.log("Warning, unable to triangulate polygon!");break}k=n;e<=k&&(k=0);n=k+1;e<=n&&(n=0);p=n+1;e<=p&&(p=0);var m;a:{var="" t="m=void" 0,s="void" 0,r="void" 0,u="void" 0,v="void" 0,y="void" 0,c="void" 0,x="void" 0,="">(r-t)*(y-s)-(u-s)*(v-t))m=!1;else{var F=void 0,z=void 0,G=void 0,E=void 0,w=void 0,D=void 0,A=void 0,U=void 0,M=void 0,K=void 0,M=U=A=x=C=void 0,F=v-r,z=y-u,G=t-v,E=s-y,w=r-t,D=u-s;for(m=0;m<e;m++)if(c=a[g[m]].x,x=a[g[m]].y,!(c===t&&x===s||c===r&&x===u||c===v&&x===y)&&(a=c-t,u=x-s,m=c-r,k=x-u,c-=v,x-=y,m=f*k-z*m,a=w*u-d*a,u=g*x-e*c,-1e-10<=m&&-1e-10<=u&&-1e-10<=a)){m=!1;break a}m="!0}}if(m){f.push([a[g[k]],a[g[n]],a[g[p]]]);" h.push([g[k],g[n],g[p]]);k="n;for(p=n+1;p<e;k++,p++)g[k]=g[p];e--;q=2*e}}return" d?h:f};a.triangulate.area="b;return" a})(three.fontutils);self._typeface_js="{faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;" three.audio="function(a){THREE.Object3D.call(this);this.type="Audio";this.context=a.context;this.source=this.context.createBufferSource();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain)};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;" three.audio.prototype.load="function(a){var" b="this,c=new" xmlhttprequest;c.open("get",a,!0);c.responsetype="arraybuffer" ;c.onload="function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.source.connect(b.panner);b.source.start(0)})};c.send();return" this};three.audio.prototype.setloop="function(a){this.source.loop=a};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};" three.audio.prototype.updatematrixworld="function(){var" a="new" three.vector3;return="" function(b){three.object3d.prototype.updatematrixworld.call(this,b);a.setfrommatrixposition(this.matrixworld);this.panner.setposition(a.x,a.y,a.z)}}();three.audiolistener="function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new" (window.audiocontext||window.webkitaudiocontext)};three.audiolistener.prototype="Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;" three.audiolistener.prototype.updatematrixworld="function(){var" three.vector3,b="new" three.quaternion,c="new" three.vector3,d="new" three.vector3,e="new" three.vector3,f="new" function(g){three.object3d.prototype.updatematrixworld.call(this,g);g="this.context.listener;var" h="this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.subVectors(a,f);g.setPosition(a.x,a.y,a.z);g.setOrientation(d.x,d.y,d.z,h.x,h.y,h.z);g.setVelocity(e.x,e.y,e.z);f.copy(a)}}();" three.curve="function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning," getpoint()="" not="" implemented!");return="" null};three.curve.prototype.getpointat="function(a){a=this.getUtoTmapping(a);return" this.getpoint(a)};three.curve.prototype.getpoints="function(a){a||(a=5);var" b,c="[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return" c};three.curve.prototype.getspacedpoints="function(a){a||(a=5);var" c};="" three.curve.prototype.getlength="function(){var" a[a.length-1]};three.curve.prototype.getlengths="function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return" this.cachearclengths;this.needsupdate="!1;var" this.cachearclengths="b};" three.curve.prototype.updatearclengths="function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var" c="this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var" g="0,h=e-1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0">k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d="" (e-1);g="c[d];return" c="(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var" b="a-1E-4;a+=1E-4;0">b&&(b=0);1<a&&(a=1);b=this.getpoint(b);return this.getpoint(a).clone().sub(b).normalize()};="" three.curve.prototype.gettangentat="function(a){a=this.getUtoTmapping(a);return" this.gettangent(a)};="" three.curve.utils="{tangentQuadraticBezier:function(a,b,c,d){return" 2*(1-a)*(c-b)+2*a*(d-c)},tangentcubicbezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentspline:function(a,b,c,d,e){return="" 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=".5*(c-a);d=.5*(d-b);var" f="e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};" three.curve.create="function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return" a};three.curvepath="function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};" three.curvepath.prototype.closepath="function(){var" a="this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new" three.linecurve(b,a))};three.curvepath.prototype.getpoint="function(a){var" b="a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]">=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getlength(),a.push(b);return this.cachelengths="a};" three.curvepath.prototype.getboundingbox="function(){var" a="this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var" h,k,n,p,q="a[0]instanceof" three.vector3;p="q?new" three.vector3:new="" three.vector2;k="0;for(n=a.length;k<n;k++)h=a[k],h.x">b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),p.add(h);a={minx:e,miny:f,maxx:b,maxy:c};q&&(a.maxz=d,a.minz=g);return a};="" three.curvepath.prototype.createpointsgeometry="function(a){a=this.getPoints(a,!0);return" this.creategeometry(a)};three.curvepath.prototype.createspacedpointsgeometry="function(a){a=this.getSpacedPoints(a,!0);return" this.creategeometry(a)};three.curvepath.prototype.creategeometry="function(a){for(var" b="new" three.geometry,c="0;c<a.length;c++)b.vertices.push(new" three.vector3(a[c].x,a[c].y,a[c].z||0));return="" b};three.curvepath.prototype.addwrappath="function(a){this.bends.push(a)};" three.curvepath.prototype.gettransformedpoints="function(a,b){var" c="this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return" c};three.curvepath.prototype.gettransformedspacedpoints="function(a,b){var" c};="" three.curvepath.prototype.getwrappoints="function(a,b){var" a};three.gyroscope="function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;" three.gyroscope.prototype.updatematrixworld="function(){var" a="new" three.vector3,b="new" three.quaternion,c="new" three.vector3,d="new" three.vector3,e="new" three.quaternion,f="new" three.vector3;return="" function(g){this.matrixautoupdate&&this.updatematrix();if(this.matrixworldneedsupdate||g)this.parent?(this.matrixworld.multiplymatrices(this.parent.matrixworld,this.matrix),this.matrixworld.decompose(d,e,f),this.matrix.decompose(a,b,c),this.matrixworld.compose(d,b,f)):this.matrixworld.copy(this.matrix),this.matrixworldneedsupdate="!1,g=!0;for(var" h="0,k=this.children.length;h<k;h++)this.children[h].updateMatrixWorld(g)}}();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};" three.path.prototype.frompoints="function(a){this.moveTo(a[0].x,a[0].y);for(var" three.path.prototype.lineto="function(a,b){var" three.linecurve(new="" three.vector2(d[d.length-2],d[d.length-1]),new="" three.vector2(a,b));this.curves.push(d);this.actions.push({action:three.pathactions.line_to,args:c})};="" three.path.prototype.quadraticcurveto="function(a,b,c,d){var" e="Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new" three.quadraticbeziercurve(new="" three.vector2(f[f.length-2],f[f.length-1]),new="" three.vector2(a,b),new="" three.vector2(c,d));this.curves.push(f);this.actions.push({action:three.pathactions.quadratic_curve_to,args:e})};="" three.path.prototype.beziercurveto="function(a,b,c,d,e,f){var" g="Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new" three.cubicbeziercurve(new="" three.vector2(h[h.length-2],h[h.length-1]),new="" three.vector2(c,d),new="" three.vector2(e,f));this.curves.push(h);this.actions.push({action:three.pathactions.bezier_curve_to,args:g})};="" three.path.prototype.splinethru="function(a){var" three.vector2(c[c.length-2],c[c.length-1])];array.prototype.push.apply(c,a);c="new" three.splinecurve(c);this.curves.push(c);this.actions.push({action:three.pathactions.cspline_thru,args:b})};three.path.prototype.arc="function(a,b,c,d,e,f){var" three.path.prototype.absarc="function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var" three.ellipsecurve(a,b,c,d,e,f,g);this.curves.push(k);k="k.getPoint(1);h.push(k.x);h.push(k.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};" three.path.prototype.getspacedpoints="function(a,b){a||(a=40);for(var" three.path.prototype.getpoints="function(a,b){if(this.useSpacedPoints)return" console.log("tata"),this.getspacedpoints(a,b);a="a||12;var" three.pathactions.move_to:c.push(new="" three.vector2(f[0],f[1]));break;case="" three.pathactions.line_to:c.push(new="" three.pathactions.quadratic_curve_to:h="f[2];k=f[3];q=f[0];m=f[1];0<c.length?(g=c[c.length-1],t=g.x," s="g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b2(r,t,q,h),r=THREE.Shape.Utils.b2(r,s,m,k),c.push(new" three.vector2(g,r));break;case="" three.pathactions.bezier_curve_to:h="f[4];k=f[5];q=f[0];m=f[1];n=f[2];p=f[3];0<c.length?(g=c[c.length-1],t=g.x,s=g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b3(r,t,q,n,h),r=THREE.Shape.Utils.b3(r,s,m,p,k),c.push(new" three.pathactions.cspline_thru:g="this.actions[d-1].args;r=[new" three.vector2(g[g.length-2],g[g.length-1])];g="a*f[0].length;r=r.concat(f[0]);r=new" three.splinecurve(r);for(f="1;f<=g;f++)c.push(r.getPointAt(f/g));break;case" three.pathactions.arc:h="f[0];k=f[1];m=f[2];n=f[3];g=f[4];q=!!f[5];t=g-n;s=2*a;for(f=1;f<=s;f++)r=f/s,q||(r=1-r),r=n+r*t,g=h+m*Math.cos(r),r=k+m*Math.sin(r),c.push(new" three.pathactions.ellipse:for(h="f[0],k=f[1],m=f[2],p=f[3],n=f[4],g=f[5],q=!!f[6],t=g-n,s=2*a,f=1;f<=s;f++)r=f/s,q||" (r="1-r),r=n+r*t,g=h+m*Math.cos(r),r=k+p*Math.sin(r),c.push(new" three.vector2(g,r))}d="c[c.length-1];1E-10">Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e="a[c],g=new" three.shape;g.actions="e.actions;g.curves=e.curves;b.push(g)}return" b}function="" d(a,b){for(var="" c="b.length,d=!1,e=c-1,g=0;g<c;e=g++){var" f="b[e],h=b[g],k=h.x-f.x,m=h.y-f.y;if(1E-10<Math.abs(m)){if(0">m&&(f=b[g],k=-k,h=b[e],m=-m),!(a.y<f.y||a.y>h.y))if(a.y==f.y){if(a.x==f.x)return!0}else{e=m*(a.x-f.x)-k*(a.y-f.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==f.y&&(h.x<=a.x&&a.x<=f.x||f.x<=a.x&&a.x<= h.x))return!0}return="" d}var="" e="function(a){var" b,c,d,e,f="[],g=new" three.path;b="0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new" three.path),g[d].apply(g,e);0!="g.actions.length&&f.push(g);return" f}(this.actions);if(0="=e.length)return[];if(!0===b)return" c(e);var="" f,g,h,k="[];if(1==e.length)return" g="e[0],h=new" three.shape,h.actions="g.actions,h.curves=g.curves,k.push(h),k;var" n="!THREE.Shape.Utils.isClockWise(e[0].getPoints()),n=a?!n:n;" h="[];var" p="[],q=[],m=0,t;p[m]=void" 0;q[m]="[];var" s,r;s="0;for(r=e.length;s<r;s++)g=e[s],t=g.getPoints(),f=THREE.Shape.Utils.isClockWise(t),(f=a?!f:f)?(!n&&p[m]&&m++,p[m]={s:new" three.shape,p:t},p[m].s.actions="g.actions,p[m].s.curves=g.curves,n&&m++,q[m]=[]):q[m].push({h:g,p:t[0]});if(!p[0])return" c(e);if(1<p.length){s="!1;r=[];g=0;for(e=p.length;g<e;g++)h[g]=[];g=0;for(e=p.length;g<e;g++)for(f=q[g],n=0;n<f.length;n++){m=f[n];t=!0;for(var" u="0;u<p.length;u++)d(m.p,p[u].p)&&(g!=u&&r.push({froms:g,tos:u," hole:n}),t?(t="!1,h[u].push(m)):s=!0);t&&h[g].push(m)}0<r.length&&(s||(q=h))}s=0;for(r=p.length;s<r;s++)for(h=p[s].s,k.push(h),g=q[s],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return" k};three.shape="function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return" new="" three.extrudegeometry(this,a)};="" three.shape.prototype.makegeometry="function(a){return" three.shapegeometry(this,a)};three.shape.prototype.getpointsholes="function(a){var" b,c="this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return" d};three.shape.prototype.getspacedpointsholes="function(a){var" d};="" three.shape.prototype.extractallpoints="function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return" this.usespacedpoints?this.extractallspacedpoints(a):this.extractallpoints(a)};three.shape.prototype.extractallspacedpoints="function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};" three.shape.utils="{triangulateShape:function(a,b){function" c(a,b,c){return="" a.x!="b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function" d(a,b,d,e,g){var="" f="b.x-a.x,h=b.y-a.y,k=e.x-d.x,n=e.y-d.y,p=a.x-d.x,q=a.y-d.y,G=h*k-f*n,E=h*p-f*q;if(1E-10<Math.abs(G)){if(0<G){if(0">E||E>G)return[];k=n*p-k*q;if(0>k||k>G)return[]}else{if(0<e||e<g)return[];k=n*p-k*q;if(0<k||k<g)return[]}if(0==k)return!g||0!=e&&e!=g?[a]:[];if(k==g)return!g||0!=e&&e!=g?[b]:[];if(0==e)return[d]; if(e="=G)return[e];g=k/G;return[{x:a.x+g*f,y:a.y+g*h}]}if(0!=E||n*p!=k*q)return[];h=0==f&&0==h;k=0==k&&0==n;if(h&&k)return" a.x!="d.x||a.y!=d.y?[]:[a];if(h)return" c(d,e,a)?[a]:[];if(k)return="" c(a,b,d)?[d]:[];0!="f?(a.x<b.x?(f=a,k=a.x,h=b,a=b.x):(f=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,G=d.x,n=e,d=e.x):(b=e,G=e.x,n=d,d=d.x)):(a.y<b.y?(f=a,k=a.y,h=b,a=b.y):(f=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,G=d.y,n=e,d=e.y):(b=e,G=e.y,n=d,d=d.y));return" k<="G?a<G?[]:a==G?g?[]:[b]:a<=d?[b,h]:[b,n]:k">d?[]:k==d?g?[]:[f]:a<=d?[f,h]: [f,n]}function="" e(a,b,c,d){var="" e="b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var" g="d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return" 1e-10<math.abs(a)?(b="g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var" f,g,h,k,n,p="{};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)n=h[f].x+":"+h[f].y,void" 0!="=p[n]&&console.log("Duplicate" point",n),p[n]="f;f=function(a,b){function" c(a,b){var="" d="h.length-1,f=a-1;0">f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;
d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var="" e,f,h,k;for(e="0;e<n.length;e++)for(f=b[n[e]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var" h="a.concat(),k,n=[],p,q,z,G,E,w=[],D,A,U,M=0;for(p=b.length;M<p;M++)n.push(M);D=0;for(var" k="2*n.length;0<n.length;){K--;if(0">K){console.log("Infinite Loop! Holes left:"+
n.length+", Probably Hole outside Shape!");break}for(q=D;q<h.length;q++){z=h[q];p=-1;for(m=0;m<n.length;m++)if(g=n[m],e=z.x+":"+z.y+":"+g,void 0="==w[E]){k=b[G];for(A=0;A<k.length;A++)if(G=k[A],c(q,A)&&!f(z,G)&&!g(z,G)){p=A;n.splice(M,1);D=h.slice(0,q+1);G=h.slice(q);A=k.slice(p);U=k.slice(0,p+1);h=D.concat(A).concat(U).concat(G);D=q;break}if(0<=p)break;w[E]=!0}if(0<=p)break}}return" h}(a,b);var="" q="THREE.FontUtils.Triangulate(f,!1);f=0;for(g=q.length;f<g;f++)for(k=q[f],h=0;3">h;h++)n=k[h].x+":"+k[h].y,
n=p[n],void 0!==n&&(k[h]=n);return q.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,
b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return b};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);return b.normalize()};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector2;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);return c};THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};
THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);a=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;b=new THREE.Vector2;b.x=this.aX+this.xRadius*Math.cos(a);b.y=this.aY+this.yRadius*Math.sin(a);return b};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return b});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return b});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var c=Math.floor(a);a-=c;var c=c+(0<c?0:(math.floor(math.abs(c) b.length)+1)*b.length),d="b[(c-1)%b.length],e=b[c%b.length],f=b[(c+1)%b.length],b=b[(c+2)%b.length],c=new" three.vector3;c.x="THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return" c});="" three.animationhandler="{LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add()" has="" been="" deprecated.")},get:function(){console.warn("three.animationhandler.get()="" deprecated.")},remove:function(){console.warn("three.animationhandler.remove()="" deprecated.")},animations:[],init:function(a){if(!0="==a.initialized)return" a;for(var="" b="0;b<a.hierarchy.length;b++){for(var" c="0;c<a.hierarchy[b].keys.length;c++)if(0">a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=
0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var 0="==c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});void" e="0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var" f="a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var" g="{};for(f" in="" d){for(e="0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=" !0;return="" a},parse:function(a){var="" b="function(a,c){c.push(a);for(var" d="0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a" instanceof="" three.skinnedmesh)for(var="" b(a,c);return="" c},play:function(a){-1="==this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var" for(b="0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];" three.animation.prototype.play="function(a,b){this.currentTime=void" 0!="=a?a:0;this.weight=void" three.animation.prototype.reset="function(){for(var" a="0,b=this.hierarchy.length;a<b;a++){var" c="this.hierarchy[a];void" c.matrix);for(var="">d;d++){for(var e=this.keyTypes[d],f=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(e,a,1);g.time<this.currenttime&&g.index>f.index;)f=g,g=this.getNextKeyWith(e,a,g.index+1);c.prevKey[e]=f;c.nextKey[e]=g}}};
THREE.Animation.prototype.resetBlendWeights=function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c="this.hierarchy[a];void" 0!="=c.animationCache&&(c.animationCache.blending.positionWeight=0,c.animationCache.blending.quaternionWeight=0,c.animationCache.blending.scaleWeight=0)}};" three.animation.prototype.update="function(){var" a="[],b=new" three.vector3,c="new" three.vector3,d="new" three.quaternion,e="function(a,b){var">a.length-2?q:q+1;c[3]=q>a.length-3?q:q+2;q=a[c[0]];t=a[c[1]];s=a[c[2]];r=a[c[3]];c=e*e;m=e*c;d[0]=f(q[0],t[0],s[0],r[0],e,c,m);d[1]=f(q[1],t[1],s[1],r[1],e,c,m);d[2]=f(q[2],t[2],s[2],r[2],e,c,m);return d},f=function(a,b,c,d,e,f,m){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*m+
(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(this.currentTime>f||0>this.currentTime)this.loop?(this.currentTime%=f,0>this.currentTime&&(this.currentTime+=f),this.reset()):this.stop();f=0;for(var h=this.hierarchy.length;f<h;f++)for(var k="this.hierarchy[f],n=k.animationCache.animations[this.data.name],p=k.animationCache.blending,q=0;3">q;q++){var m=this.keyTypes[q],t=n.prevKey[m],s=n.nextKey[m];if(0<this.timescale&& s.time<="this.currentTime||0">this.timeScale&&t.time>=this.currentTime){t=this.data.hierarchy[f].keys[0];for(s=this.getNextKeyWith(m,f,1);s.time<this.currenttime&&s.index>t.index;)t=s,s=this.getNextKeyWith(m,f,s.index+1);n.prevKey[m]=t;n.nextKey[m]=s}var r=(this.currentTime-t.time)/(s.time-t.time),u=t[m],v=s[m];0>r&&(r=0);1<r&&(r=1);if("pos"===m)if(this.interpolationtype===three.animationhandler.linear)c.x=u[0]+(v[0]-u[0])*r,c.y=u[1]+(v[1]-u[1])*r,c.z=u[2]+(v[2]-u[2])*r,t=this.weight 0="==d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=c[1],this.startTime=Math.min(c[0].time," (this.weight+p.positionweight),="" k.position.lerp(c,t),p.positionweight+="this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith("pos",f,t.index-1).pos,a[1]=u,a[2]=v,a[3]=this.getNextKeyWith("pos",f,s.index+1).pos,r=.33*r+.33,s=e(a,r),t=this.weight/(this.weight+p.positionWeight),p.positionWeight+=this.weight,m=k.position,m.x+=(s[0]-m.x)*t,m.y+=(s[1]-m.y)*t,m.z+=(s[2]-m.z)*t,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&" (r="e(a,1.01*r),b.set(r[0],r[1],r[2]),b.sub(m),b.y=0,b.normalize(),r=Math.atan2(b.x,b.z),k.rotation.set(0,r,0))}else"rot"===m?(THREE.Quaternion.slerp(u,v,d,r),0===p.quaternionWeight?(k.quaternion.copy(d),p.quaternionWeight=this.weight):(t=this.weight/(this.weight+p.quaternionWeight),THREE.Quaternion.slerp(k.quaternion,d,k.quaternion,t),p.quaternionWeight+=this.weight)):"scl"===m&&(c.x=u[0]+(v[0]-u[0])*r,c.y=u[1]+(v[1]-u[1])*r,c.z=u[2]+(v[2]-u[2])*r,t=this.weight/(this.weight+p.scaleWeight),k.scale.lerp(c," t),p.scaleweight+="this.weight)}return!0}}}();THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var" d="this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void" 0!="=d[c][a])return" d[c];return="" this.data.hierarchy[b].keys[0]};="" three.animation.prototype.getprevkeywith="function(a,b,c){var" this.data.hierarchy[b].keys[d.length-1]};="" three.keyframeanimation="function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var" b="this.hierarchy.length;a<b;a++){var" c="this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var" e="0;e<c.length;e++){var" f="c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();" d.matrixworldneedsupdate="!0}}};" three.keyframeanimation.prototype.play="function(a){this.currentTime=void" this.starttime),this.endtime="Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var" a="0;a<this.data.hierarchy.length;a++){var" c.animationcache}}};="" three.keyframeanimation.prototype.update="function(a){if(!1!==this.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime">a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c="this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var" f="d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index">f.index;)f=g,g=e[f.index+1];d.prevKey=
f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):f.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hastarget(a))return b[c];return="" b[0]};="" three.keyframeanimation.prototype.getprevkeywith="function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return" b[b.length-1]};three.morphanimation="function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};" three.morphanimation.prototype="{constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(!1!==this.isPlaying){this.currentTime+=a;!0===this.loop&&this.currentTime">this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);a=this.duration/this.frames;var b=Math.floor(this.currentTime/a);b!=this.currentFrame&&(this.mesh.morphTargetInfluences[this.lastFrame]=0,this.mesh.morphTargetInfluences[this.currentFrame]=
1,this.mesh.morphTargetInfluences[b]=0,this.lastFrame=this.currentFrame,this.currentFrame=b);this.mesh.morphTargetInfluences[b]=this.currentTime%a/a;this.mesh.morphTargetInfluences[this.lastFrame]=1-this.mesh.morphTargetInfluences[b]}}};
THREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,r){var u,v=h.widthSegments,y=h.heightSegments,C=e/2,x=f/2,F=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)u="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)u="y",y=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)u="x",v=h.depthSegments;var z=v+1,G=y+1,E=e/v,w=f/y,D=new THREE.Vector3;D[u]=0<g?1:-1;for(e=0;e<g;e++)for(f=0;f<z;f++){var a="new" three.vector3;a[a]="(f*E-C)*c;A[b]=(e*w-x)*d;A[u]=g;h.vertices.push(A)}for(e=" 0;e<y;e++)for(f="0;f<v;f++)x=f+z*e,a=f+z*(e+1),b=f+1+z*(e+1),c=f+1+z*e,d=new" three.vector2(f="" v,1-e="" y),g="new" v,1-(e+1)="" y),u="new" three.vector2((f+1)="" y),c="new" y),x="new" three.face3(x+f,a+f,c+f),x.normal.copy(d),x.vertexnormals.push(d.clone(),d.clone(),d.clone()),x.materialindex="r,h.faces.push(x),h.faceVertexUvs[0].push([d,g,C]),x=new" three.face3(a+f,b+f,c+f),x.normal.copy(d),x.vertexnormals.push(d.clone(),d.clone(),d.clone()),x.materialindex="r,h.faces.push(x)," h.facevertexuvs[0].push([g.clone(),u,c.clone()])}three.geometry.call(this);this.type="BoxGeometry" ;this.parameters="{width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;var" h="this;d=a/2;e=b/2;f=c/2;g("z","y",-1,-1,c,b,d,0);g("z","y",1,-1,c,b,-d,1);g("x","z",1,1,a,c,e,2);g("x","z",1,-1,a,c,-e,3);g("x","y",1,-1,a,b,f,4);g("x","y",-1,-1,a,b,-f,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);" three.boxgeometry.prototype.constructor="THREE.BoxGeometry;" three.circlegeometry="function(a,b,c,d){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void" 0!="=b?Math.max(3,b):8;c=void" e,f="[];e=new" three.vector3;var="" g="new" three.vector2(.5,.5);this.vertices.push(e);f.push(g);for(e="0;e<=b;e++){var" three.vector3,k="c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);f.push(new" three.vector2((h.x="" a+1)="" 2,(h.y="" 2))}c="new" three.vector3(0,="" 0,1);for(e="1;e<=b;e++)this.faces.push(new" three.face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.facevertexuvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computefacenormals();this.boundingsphere="new" three.sphere(new="" three.vector3,a)};three.circlegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;" three.cubegeometry="function(a,b,c,d,e,f){console.warn("THREE.CubeGeometry" has="" been="" renamed="" to="" three.boxgeometry.");return="" new="" three.boxgeometry(a,b,c,d,e,f)};="" three.cylindergeometry="function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};a=void" k="c/2,n,p,q=[],m=[];for(p=0;p<=e;p++){var" t="[],s=[],r=p/e,u=r*(b-a)+a;for(n=0;n<=d;n++){var" v="n/d,y=new" three.vector3;y.x="u*Math.sin(v*h+" g);y.y="-r*c+k;y.z=u*Math.cos(v*h+g);this.vertices.push(y);t.push(this.vertices.length-1);s.push(new" three.vector2(v,1-r))}q.push(t);m.push(s)}c="(b-a)/c;for(n=0;n<d;n++)for(0!==a?(g=this.vertices[q[0][n]].clone(),h=this.vertices[q[0][n+1]].clone()):(g=this.vertices[q[1][n]].clone(),h=this.vertices[q[1][n+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*c).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*c).normalize(),p=0;p<e;p++){var" c="h.clone(),x=h.clone(),F=m[p][n].clone(),z=m[p+1][n].clone(),G=m[p+1][n+1].clone(),E=m[p][n+1].clone();this.faces.push(new" three.face3(t,s,u,[v,y,x]));this.facevertexuvs[0].push([f,z,e]);this.faces.push(new="" three.face3(s,r,u,[y.clone(),c,x.clone()]));this.facevertexuvs[0].push([z.clone(),g,e.clone()])}if(!1="==f&&0<a)for(this.vertices.push(new" three.vector3(0,k,0)),n="0;n<d;n++)t=q[0][n],s=q[0][n+1],r=this.vertices.length-1,v=new" three.vector3(0,1,0),y="new" three.vector3(0,1,0),c="new" 1,0),f="m[0][n].clone(),z=m[0][n+1].clone(),G=new" three.vector2(z.x,0),this.faces.push(new="" three.face3(t,s,r,[v,y,c])),this.facevertexuvs[0].push([f,z,g]);if(!1="==f&&0<b)for(this.vertices.push(new" three.vector3(0,-k,0)),n="0;n<d;n++)t=q[e][n+1],s=q[e][n],r=this.vertices.length-1,v=new" three.vector3(0,-1,0),y="new" three.vector3(0,-1,0),c="new" three.vector3(0,-1,0),f="m[e][n+1].clone(),z=m[e][n].clone(),G=new" three.vector2(z.x,1),this.faces.push(new="" three.face3(t,s,r,[v,y,c])),this.facevertexuvs[0].push([f,="" z,g]);this.computefacenormals()};three.cylindergeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof" a&&(three.geometry.call(this),this.type="ExtrudeGeometry" ,a="a" instanceof="" array?a:[a],this.addshapelist(a,b),this.computefacenormals())};three.extrudegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;" three.extrudegeometry.prototype.addshapelist="function(a,b){for(var" three.extrudegeometry.prototype.addshape="function(a,b){function" c(a,b,c){b||console.log("die");return="" b.clone().multiplyscalar(c).add(a)}function="" d(a,b,c){var="" d="1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(1E-10<Math.abs(d*g-e*f)){var">=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,1E-10<d?1e-10<f&&(a=!0):-1e-10>d?-1E-10>f&&(a=!0):Math.sign(e)==
Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(H=a.length;0<=--h;){c=h;d=h-1;0>d&&(d=a.length-1);for(var e=0,f=t+2*p,e=0;e<f;e++){var g="ga*e,h=ga*(e+1),k=b+c+g,g=b+d+g,m=b+d+h,h=b+c+h,k=k+U,g=g+U,m=m+U,h=h+U;A.faces.push(new" three.face3(k,g,h,null,null,y));a.faces.push(new="" three.face3(g,m,h,null,null,y));k="C.generateSideWallUV(A,k,g,m,h);A.faceVertexUvs[0].push([k[0],k[1],k[3]]);A.faceVertexUvs[0].push([k[1]," k[2],k[3]])}}}function="" f(a,b,c){a.vertices.push(new="" three.vector3(a,b,c))}function="" g(a,b,c){a+="U;b+=U;c+=U;A.faces.push(new" three.face3(a,b,c,null,null,v));a="C.generateTopUV(A,a,b,c);A.faceVertexUvs[0].push(a)}var" h="void" 0!="=b.amount?b.amount:100,k=void" r,u="!1,v=b.material,y=b.extrudeMaterial,C=void" three.tubegeometry.frenetframes(s,t,!1),f="new" three.vector3,z="new" three.vector3,g="new" three.vector3);q||(n="k=p=0);var" e,w,d,a="this,U=this.vertices.length,s=a.extractPoints(m),m=s.shape,M=s.holes;if(s=!THREE.Shape.Utils.isClockWise(m)){m=m.reverse();w=0;for(D=M.length;w<D;w++)E=M[w],THREE.Shape.Utils.isClockWise(E)&&" (m[w]="E.reverse());s=!1}var" k="THREE.Shape.Utils.triangulateShape(m,M),L=m;w=0;for(D=M.length;w<D;w++)E=M[w],m=m.concat(E);var" n,t,q,w,o,ga="m.length,ea,xa=K.length,s=[],H=0;Q=L.length;N=Q-1;for(T=H+1;H<Q;H++,N++,T++)N===Q&&(N=0),T===Q&&(T=0),s[H]=d(L[H],L[N],L[T]);var" $a="[],qa,ya=s.concat();w=0;for(D=M.length;w<D;w++){E=M[w];qa=[];H=0;Q=E.length;N=Q-1;for(T=H+1;H<Q;H++,N++,T++)N===Q&&(N=0),T===Q&&(T=0),qa[H]=d(E[H],E[N],E[T]);$a.push(qa);ya=ya.concat(qa)}for(N=0;N<p;N++){Q=N/p;W=k*(1-Q);T=n*Math.sin(Q*" math.pi="" 2);h="0;for(Q=L.length;H<Q;H++)O=c(L[H],s[H],T),f(O.x,O.y,-W);w=0;for(D=M.length;w<D;w++)for(E=M[w],qa=$a[w],H=0,Q=E.length;H<Q;H++)O=c(E[H],qa[H],T),f(O.x,O.y,-W)}T=n;for(H=0;H<ga;H++)O=q?c(m[H],ya[H],T):m[H],u?(z.copy(x.normals[0]).multiplyScalar(O.x),F.copy(x.binormals[0]).multiplyScalar(O.y),G.copy(r[0]).add(z).add(F),f(G.x,G.y,G.z)):f(O.x,O.y,0);for(Q=1;Q<=t;Q++)for(H=0;H<ga;H++)O=q?c(m[H],ya[H],T):m[H],u?(z.copy(x.normals[Q]).multiplyScalar(O.x),F.copy(x.binormals[Q]).multiplyScalar(O.y)," g.copy(r[q]).add(z).add(f),f(g.x,g.y,g.z)):f(o.x,o.y,h="" t*q);for(n="p-1;0<=N;N--){Q=N/p;W=k*(1-Q);T=n*Math.sin(Q*Math.PI/2);H=0;for(Q=L.length;H<Q;H++)O=c(L[H],s[H],T),f(O.x,O.y,h+W);w=0;for(D=M.length;w<D;w++)for(E=M[w],qa=$a[w],H=0,Q=E.length;H<Q;H++)O=c(E[H],qa[H],T),u?f(O.x,O.y+r[t-1].y,r[t-1].x+W):f(O.x,O.y,h+W)}(function(){if(q){var" a;a="0*ga;for(H=0;H<xa;H++)ea=K[H],g(ea[2]+a,ea[1]+a,ea[0]+a);a=t+2*p;a*=ga;for(H=0;H<xa;H++)ea=K[H],g(ea[0]+a,ea[1]+a,ea[2]+a)}else{for(H=0;H<xa;H++)ea=K[H],g(ea[2]," ea[1],ea[0]);for(h="0;H<xa;H++)ea=K[H],g(ea[0]+ga*t,ea[1]+ga*t,ea[2]+ga*t)}})();(function(){var" a="0;e(L,a);a+=L.length;w=0;for(D=M.length;w<D;w++)E=M[w],e(E,a),a+=E.length})()};" three.extrudegeometry.worlduvgenerator="{generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new" three.vector2(b.x,b.y),new="" three.vector2(c.x,c.y),new="" three.vector2(d.x,d.y)]},generatesidewalluv:function(a,b,c,d,e){a="a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01">Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,
1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type="ShapeGeometry";!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addshape(a[c],b);return 0="==b&&(b={});var" this};="" three.shapegeometry.prototype.addshape="function(a,b){void" c="b.material,d=void" 0!="=b.curveSegments?b.curveSegments:12);var" k="e.shape,n=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,f=n.length;e<f;e++)g=n[e],THREE.Shape.Utils.isClockWise(g)&&(n[e]=g.reverse());var" p="THREE.Shape.Utils.triangulateShape(k,n);e=0;for(f=n.length;e<f;e++)g=n[e]," three.vector3(g.x,g.y,0));for(e="0;e<f;e++)n=p[e],k=n[0]+h,g=n[1]+h,n=n[2]+h,this.faces.push(new" three.face3(k,g,n,null,null,c)),this.facevertexuvs[0].push(d.generatetopuv(this,k,g,n))};="" three.lathegeometry="function(a,b,c,d){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=b||12;c=c||0;d=d||2*Math.PI;for(var" e="1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var" m="a[k],t=new" three.vector3;t.x="n*m.x-p*m.y;t.y=p*m.x+n*m.y;t.z=m.z;this.vertices.push(t)}c=a.length;g=0;for(h=b;g<h;g++)for(k=0,q=a.length-1;k<q;k++){b=p=k+c*g;d=p+c;var" n="p+1+c,p=p+1,m=g*f,t=k*e,s=" m+f,r="t+e;this.faces.push(new" three.face3(b,d,p));this.facevertexuvs[0].push([new="" three.vector2(m,t),new="" three.vector2(s,t),new="" three.vector2(m,r)]);this.faces.push(new="" three.face3(d,n,p));this.facevertexuvs[0].push([new="" three.vector2(s,r),new="" three.vector2(m,r)])}this.mergevertices();this.computefacenormals();this.computevertexnormals()};three.lathegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;" three.planegeometry="function(a,b,c,d){console.info("THREE.PlaneGeometry:" consider="" using="" three.planebuffergeometry="" for="" lower="" memory="" footprint.");three.geometry.call(this);this.type="PlaneGeometry" ;this.parameters="{width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new" three.planebuffergeometry(a,b,c,d))};three.planegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;" g="c+1,h=d+1,k=a/c,n=b/d;b=new" float32array(g*h*3);a="new" float32array(g*h*3);for(var="" float32array(g*h*2),q="0,m=0,t=0;t<h;t++)for(var" s="t*n-f,r=0;r<g;r++)b[q]=r*k-e,b[q+1]=-s,a[q+2]=1,p[m]=r/c,p[m+1]=1-t/d,q+=3,m+=2;q=0;e=new" (65535<b.length="" 3?uint32array:uint16array)(c*d*6);for(t="0;t<d;t++)for(r=" 0;r<c;r++)f="r+g*(t+1),h=r+1+g*(t+1),k=r+1+g*t,e[q]=r+g*t,e[q+1]=f,e[q+2]=k,e[q+3]=f,e[q+4]=h,e[q+5]=k,q+=6;this.addAttribute("index",new" three.bufferattribute(e,1));this.addattribute("position",new="" three.bufferattribute(b,3));this.addattribute("normal",new="" three.bufferattribute(a,3));this.addattribute("uv",new="" three.bufferattribute(p,2))};three.planebuffergeometry.prototype="Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;" three.ringgeometry="function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||0;b=b||50;e=void" g,h="[],k=a,n=(b-a)/d;for(a=0;a<d+1;a++){for(g=0;g<c+1;g++){var" three.vector3,q="e+g/c*f;p.x=k*Math.cos(q);p.y=k*Math.sin(q);this.vertices.push(p);h.push(new" three.vector2((p.x="" b+1)="" 2,="" (p.y="" 2))}k+="n}b=new" three.vector3(0,0,1);for(a="0;a<d;a++)for(e=a*(c+1),g=0;g<c;g++)f=q=g+e,n=q+c+1,p=q+c+2,this.faces.push(new" three.face3(f,n,p,[b.clone(),b.clone(),b.clone()])),this.facevertexuvs[0].push([h[f].clone(),h[n].clone(),h[p].clone()]),f="q,n=q+c+2,p=q+1,this.faces.push(new" three.face3(f,n,p,[b.clone(),b.clone(),b.clone()])),this.facevertexuvs[0].push([h[f].clone(),h[n].clone(),h[p].clone()]);this.computefacenormals();this.boundingsphere="new" three.sphere(new="" three.vector3,k)};="" three.ringgeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;" three.spheregeometry="function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void" h,k,n="[],p=[];for(k=0;k<=c;k++){var" q="[],m=[];for(h=0;h<=b;h++){var" t="h/b,s=k/c,r=new" three.vector3;r.x="-a*Math.cos(d+t*e)*Math.sin(f+s*g);" r.y="a*Math.cos(f+s*g);r.z=a*Math.sin(d+t*e)*Math.sin(f+s*g);this.vertices.push(r);q.push(this.vertices.length-1);m.push(new" three.vector2(t,1-s))}n.push(q);p.push(m)}for(k="0;k<c;k++)for(h=0;h<b;h++){d=n[k][h+1];e=n[k][h];f=n[k+1][h];g=n[k+1][h+1];var" a?(r.x="(r.x+u.x)/2,this.faces.push(new" three.face3(d,f,g,[q,t,s])),this.facevertexuvs[0].push([r,v,y])):math.abs(this.vertices[f].y)="==a?(v.x=(v.x+y.x)/2,this.faces.push(new" three.face3(d,e,f,[q,m,t])),this.facevertexuvs[0].push([r,u,v])):(this.faces.push(new="" three.face3(d,e,g,[q,m,s])),this.facevertexuvs[0].push([r,u,y]),this.faces.push(new="" three.face3(e,f,g,[m.clone(),t,s.clone()])),this.facevertexuvs[0].push([u.clone(),v,y.clone()]))}this.computefacenormals();this.boundingsphere="new" three.vector3,="" a)};three.spheregeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(a,b){b=b||{};var" three.textgeometry.prototype.constructor="THREE.TextGeometry;" three.torusgeometry="function(a,b,c,d,e){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var" f="new" three.vector3,g="[],h=[],k=0;k<=c;k++)for(var" three.vector3;m.x="(a+b*Math.cos(q))*Math.cos(p);m.y=(a+b*Math.cos(q))*Math.sin(p);m.z=b*Math.sin(q);this.vertices.push(m);g.push(new" three.vector2(n="" d,k="" c));h.push(m.clone().sub(f).normalize())}for(k="1;k<=c;k++)for(n=1;n<=d;n++)a=(d+1)*k+n-1,b=(d+1)*(k-1)+n-1,e=(d+1)*(k-1)+n,f=(d+1)*k+n,p=new" three.face3(a,b,f,[h[a].clone(),h[b].clone(),h[f].clone()]),this.faces.push(p),this.facevertexuvs[0].push([g[a].clone(),g[b].clone(),g[f].clone()]),p="new" three.face3(b,e,f,[h[b].clone(),h[e].clone(),h[f].clone()]),this.faces.push(p),this.facevertexuvs[0].push([g[b].clone(),g[e].clone(),g[f].clone()]);this.computefacenormals()};="" three.torusgeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;" three.torusknotgeometry="function(a,b,c,d,e,f,g){function" h(a,b,c,d,e){var="" new="" three.vector3(f,g,d)}three.geometry.call(this);this.type="TorusKnotGeometry" three.vector3,p="new" three.vector3,m="0;m<c;++m){k[m]=" array(d);var="" r="t/d*2*Math.PI,u=-b*Math.cos(r),r=b*Math.sin(r),v=new" three.vector3;v.x="s.x+u*p.x+r*q.x;v.y=s.y+u*p.y+r*q.y;v.z=s.z+u*p.z+r*q.z;k[m][t]=this.vertices.push(v)-1}}for(m=0;m<c;++m)for(t=0;t<d;++t)e=(m+1)%c,f=(t+1)%d,a=k[m][t],b=k[e][t],e=k[e][f],f=k[m][f],g=new" three.vector2(m="" c,t="" d),n="new" three.vector2((m+1)="" c,="" d),p="new" c,(t+1)="" d),q="new" d),this.faces.push(new="" three.face3(a,b,f)),this.facevertexuvs[0].push([g,n,q]),this.faces.push(new="" three.face3(b,e,f)),this.facevertexuvs[0].push([n.clone(),p,q.clone()]);this.computefacenormals();this.computevertexnormals()};three.torusknotgeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;" three.tubegeometry="function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var" three.vector3,u,v,y;u="new" three.tubegeometry.frenetframes(a,b,e);v="u.normals;y=u.binormals;this.tangents=u.tangents;this.normals=v;this.binormals=y;for(u=0;u<n;u++)for(g[u]=[],p=u/(n-1),s=a.getPointAt(p),h=v[u],k=y[u],m=c*f(p),p=0;p<d;p++)q=" d*2*math.pi,t="-m*Math.cos(q),q=m*Math.sin(q),r.copy(s),r.x+=t*h.x+q*k.x,r.y+=t*h.y+q*k.y,r.z+=t*h.z+q*k.z,g[u][p]=this.vertices.push(new" three.vector3(r.x,r.y,r.z))-1;for(u="0;u<b;u++)for(p=0;p<d;p++)f=e?(u+1)%b:u+1,n=(p+1)%d,a=g[u][p],c=g[f][p],f=g[f][n],n=g[u][n],r=new" three.vector2(u="" b,p="" d),v="new" three.vector2((u+1)="" d),y="new" b,(p+1)="" d),h="new" three.face3(a,c,n)),this.facevertexuvs[0].push([r,v,h]),this.faces.push(new="" three.face3(c,="" f,n)),this.facevertexuvs[0].push([v.clone(),y,h.clone()]);this.computefacenormals();this.computevertexnormals()};three.tubegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return" 1};three.tubegeometry.sinusoidaltaper="function(a){return" math.sin(math.pi*a)};="" three.tubegeometry.frenetframes="function(a,b,c){new" three.vector3;var="" d="new" three.vector3;new="" three.vector3,k="new" three.matrix4;b+="1;var" n,p,q;this.tangents="e;this.normals=f;this.binormals=g;for(n=0;n<b;n++)p=n/(b-1),e[n]=a.getTangentAt(p),e[n].normalize();f[0]=new" three.vector3;g[0]="new" three.vector3;a="Number.MAX_VALUE;n=Math.abs(e[0].x);p=Math.abs(e[0].y);q=Math.abs(e[0].z);n<=a&&(a=n,d.set(1,0,0));p<=a&&(a=p,d.set(0,1,0));q<=a&&d.set(0,0,1);h.crossVectors(e[0]," d).normalize();f[0].crossvectors(e[0],h);g[0].crossvectors(e[0],f[0]);for(n="1;n<b;n++)f[n]=f[n-1].clone(),g[n]=g[n-1].clone(),h.crossVectors(e[n-1],e[n]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[n-1].dot(e[n]),-1,1)),f[n].applyMatrix4(k.makeRotationAxis(h,d))),g[n].crossVectors(e[n],f[n]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),n=1;n<b;n++)f[n].applyMatrix4(k.makeRotationAxis(e[n],d*n)),g[n].crossVectors(e[n]," f[n])};="" three.polyhedrongeometry="function(a,b,c,d){function" e(a){var="" b="a.normalize().clone();b.index=k.vertices.push(b)-1;var" three.vector2(c,1-a);return="" b}function="" f(a,b,c){var="" three.face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);u.copy(a).add(b).add(c).dividescalar(3);d="Math.atan2(u.z,-u.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function" g(a,b){var="" h(a,b,c){0="">c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,
a.y));return a.clone()}THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,n=0,p=a.length;n<p;n+=3)e(new three.vector3(a[n],a[n+1],a[n+2]));a="this.vertices;for(var" q="[],m=n=0,p=b.length;n<p;n+=3,m++){var" t="a[b[n]],s=a[b[n+1]],r=a[b[n+2]];q[m]=new" three.face3(t.index,s.index,r.index,[t.clone(),s.clone(),r.clone()])}for(var="" u="new" three.vector3,n="0,p=q.length;n<p;n++)g(q[n],d);n=0;for(p=this.faceVertexUvs[0].length;n<" p;n++)b="this.faceVertexUvs[0][n],d=b[0].x,a=b[1].x,q=b[2].x,m=Math.max(d,Math.max(a,q)),t=Math.min(d,Math.min(a,q)),.9<m&&.1">t&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>q&&(b[2].x+=1));n=0;for(p=this.vertices.length;n<p;n++)this.vertices[n].multiplyscalar(c);this.mergevertices();this.computefacenormals();this.boundingsphere=new 0="==f&&(f=16776960);void" three.sphere(new="" three.vector3,c)};three.polyhedrongeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;" three.dodecahedrongeometry="function(a,b){this.parameters={radius:a,detail:b};var" c="(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19," 11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b)};three.dodecahedrongeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;" three.icosahedrongeometry="function(a,b){var" three.icosahedrongeometry.prototype.constructor="THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;" three.tetrahedrongeometry="function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;" three.parametricgeometry="function(a,b,c){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};var" d="this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,n,p=b+1;for(g=0;g<=c;g++)for(n=g/c,h=0;h<=b;h++)k=h/b,k=a(k,n),d.push(k);var" q,m,t,s;for(g="0;g<c;g++)for(h=0;h<b;h++)a=g*p+h,d=g*p+h+1,n=(g+1)*p+h+1,k=(g+1)*p+h,q=new" three.vector2(h="" b,g="" c),m="new" three.vector2((h+1)="" c),t="new" b,(g+1)="" c),s="new" c),e.push(new="" three.face3(a,="" d,k)),f.push([q,m,s]),e.push(new="" three.face3(d,n,k)),f.push([m.clone(),t,s.clone()]);this.computefacenormals();this.computevertexnormals()};three.parametricgeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;" three.axishelper="function(a){a=a||1;var" b="new" float32array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c="new" float32array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a="new" three.buffergeometry;a.addattribute("position",new="" three.bufferattribute(b,3));a.addattribute("color",new="" three.bufferattribute(c,3));b="new" three.linebasicmaterial({vertexcolors:three.vertexcolors});three.line.call(this,a,b,three.linepieces)};three.axishelper.prototype="Object.create(THREE.Line.prototype);" three.axishelper.prototype.constructor="THREE.AxisHelper;" three.arrowhelper="function(){var" a="new" three.geometry;a.vertices.push(new="" three.vector3(0,0,0),new="" three.vector3(0,1,0));var="" three.cylindergeometry(0,.5,1,5,1);b.applymatrix((new="" three.matrix4).maketranslation(0,-.5,0));return="" function(c,d,e,f,g,h){three.object3d.call(this);void="" three.line(a,new="" three.linebasicmaterial({color:f}));this.line.matrixautoupdate="!1;this.add(this.line);" this.cone="new" three.mesh(b,new="" three.meshbasicmaterial({color:f}));this.cone.matrixautoupdate="!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;" three.arrowhelper.prototype.setdirection="function(){var" three.vector3,b;return="" function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999="">c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,a-b,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;
THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.geometry.attributes.position.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=c.x;d[4]=b.y;d[5]=b.z;d[6]=c.x;d[7]=b.y;d[8]=b.z;d[9]=c.x;d[10]=c.y;d[11]=b.z;d[12]=c.x;d[13]=c.y;d[14]=b.z;d[15]=b.x;d[16]=c.y;d[17]=b.z;d[18]=b.x;d[19]=c.y;d[20]=b.z;d[21]=b.x;d[22]=b.y;d[23]=b.z;d[24]=b.x;d[25]=b.y;d[26]=c.z;d[27]=c.x;d[28]=b.y;d[29]=c.z;d[30]=c.x;d[31]=b.y;
d[32]=c.z;d[33]=c.x;d[34]=c.y;d[35]=c.z;d[36]=c.x;d[37]=c.y;d[38]=c.z;d[39]=b.x;d[40]=c.y;d[41]=c.z;d[42]=b.x;d[43]=c.y;d[44]=c.z;d[45]=b.x;d[46]=b.y;d[47]=c.z;d[48]=b.x;d[49]=b.y;d[50]=b.z;d[51]=b.x;d[52]=b.y;d[53]=c.z;d[54]=c.x;d[55]=b.y;d[56]=b.z;d[57]=c.x;d[58]=b.y;d[59]=c.z;d[60]=c.x;d[61]=c.y;d[62]=b.z;d[63]=c.x;d[64]=c.y;d[65]=c.z;d[66]=b.x;d[67]=c.y;d[68]=b.z;d[69]=b.x;d[70]=c.y;d[71]=c.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrix=a.matrixWorld;
this.matrixAutoUpdate=!1};THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;
THREE.CameraHelper.prototype.update=function(){var a,b,c=new THREE.Vector3,d=new THREE.Camera,e=function(e,g,h,k){c.set(g,h,k).unproject(d);e=b[e];if(void 0!==e)for(g=0,h=e.length;g<h;g++)a.vertices[e[g]].copy(c)};return function(){a="this.geometry;b=this.pointMap;d.projectionMatrix.copy(this.camera.projectionMatrix);e("c",0,0,-1);e("t",0,0,1);e("n1",-1,-1,-1);e("n2",1,-1,-1);e("n3",-1,1,-1);e("n4",1,1,-1);e("f1",-1,-1,1);e("f2",1,-1,1);e("f3",-1,1,1);e("f4",1,1,1);e("u1",.7,1.1,-1);e("u2",-.7,1.1," -1);e("u3",0,2,-1);e("cf1",-1,0,1);e("cf2",1,0,1);e("cf3",0,-1,1);e("cf4",0,1,1);e("cn1",-1,0,-1);e("cn2",1,0,-1);e("cn3",0,-1,-1);e("cn4",0,1,-1);a.verticesneedupdate="!0}}();" three.directionallighthelper="function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var" c="new" three.geometry;c.vertices.push(new="" three.vector3(-b,b,0),new="" three.vector3(b,b,0),new="" three.vector3(b,-b,0),new="" three.vector3(-b,-b,0),new="" three.vector3(-b,b,0));var="" d="new" three.linebasicmaterial({fog:!1});d.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.lightplane="new" three.line(c,d);this.add(this.lightplane);="" three.vector3,new="" three.vector3);d="new" three.linebasicmaterial({fog:!1});d.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.targetline="new" three.line(c,d);this.add(this.targetline);this.update()};three.directionallighthelper.prototype="Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;" three.directionallighthelper.prototype.dispose="function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};" three.directionallighthelper.prototype.update="function(){var" a="new" three.vector3,b="new" three.vector3,c="new" three.vector3;return="" function(){a.setfrommatrixposition(this.light.matrixworld);b.setfrommatrixposition(this.light.target.matrixworld);c.subvectors(b,a);this.lightplane.lookat(c);this.lightplane.material.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.targetline.geometry.vertices[1].copy(c);this.targetline.geometry.verticesneedupdate="!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();" three.edgeshelper="function(a,b){var" 0!="=b?b:16777215,d=[0,0],e={},f=function(a,b){return" a-b},g="["a","b","c"],h=new" three.buffergeometry,k="a.geometry.clone();k.mergeVertices();k.computeFaceNormals();for(var" n="k.vertices,k=k.faces,p=0,q=0,m=k.length;q<m;q++)for(var" t="k[q],s=0;3">s;s++){d[0]=t[g[s]];d[1]=t[g[(s+1)%3]];d.sort(f);var r=d.toString();void 0===e[r]?(e[r]={vert1:d[0],vert2:d[1],face1:q,face2:void 0},p++):e[r].face2=q}d=new Float32Array(6*p);f=0;for(r in e)if(g=e[r],void 0===g.face2||
.9999>k[g.face1].normal.dot(k[g.face2].normal))p=n[g.vert1],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z,p=n[g.vert2],d[f++]=p.x,d[f++]=p.y,d[f++]=p.z;h.addAttribute("position",new THREE.BufferAttribute(d,3));THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;
THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new three.vector3,new="" three.vector3);three.line.call(this,b,new="" three.linebasicmaterial({color:a,linewidth:d}),three.linepieces);this.matrixautoupdate="!1;this.normalMatrix=new" three.matrix3;this.update()};three.facenormalshelper.prototype="Object.create(THREE.Line.prototype);" three.facenormalshelper.prototype.constructor="THREE.FaceNormalsHelper;" three.facenormalshelper.prototype.update="function(){var" a="this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(e);for(var" f="b=0,g=d.length;b<g;b++,f+=2){var" h="d[b];a[f].copy(c[h.a]).add(c[h.b]).add(c[h.c]).divideScalar(3).applyMatrix4(e);a[f+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[f])}this.geometry.verticesNeedUpdate=!0;return" this};="" three.gridhelper="function(a,b){var" c="new" three.geometry,d="new" three.linebasicmaterial({vertexcolors:three.vertexcolors});this.color1="new" three.color(4473924);this.color2="new" three.color(8947848);for(var="" e="-a;e<=a;e+=b){c.vertices.push(new" three.vector3(-a,0,e),new="" three.vector3(a,0,e),new="" three.vector3(e,0,-a),new="" three.vector3(e,0,a));var="" three.gridhelper.prototype.constructor="THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};" three.hemispherelighthelper="function(a,b,c,d){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new" three.color,new="" three.color];a="new" three.spheregeometry(b,4,2);a.applymatrix((new="" three.matrix4).makerotationx(-math.pi="" 2));for(b="0;8">b;b++)a.faces[b].color=this.colors[4>b?0:1];b=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(a,b);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;
THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof="" three.bone&&(b.vertices.push(new="" three.vector3),b.vertices.push(new="" three.vector3),b.colors.push(new="" three.color(0,0,1)),b.colors.push(new="" three.color(0,1,0)));c="new" three.linebasicmaterial({vertexcolors:three.vertexcolors,depthtest:!1,depthwrite:!1,transparent:!0});three.line.call(this,b,c,three.linepieces);this.root="a;this.matrix=a.matrixWorld;" this.matrixautoupdate="!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var" b="[];a" three.bone&&b.push(a);for(var="" c="0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return" b};="" three.skeletonhelper.prototype.update="function(){for(var" a="this.geometry,b=(new" three.matrix4).getinverse(this.root.matrixworld),c="new" three.matrix4,d="0,e=0;e<this.bones.length;e++){var" f="this.bones[e];f.parent" three.bone&&(c.multiplymatrices(b,f.matrixworld),a.vertices[d].setfrommatrixposition(c),c.multiplymatrices(b,f.parent.matrixworld),a.vertices[d+1].setfrommatrixposition(c),d+="2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};" three.spotlighthelper="function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new" three.cylindergeometry(0,1,1,8,1,!0);a.applymatrix((new="" three.matrix4).maketranslation(0,-.5,0));a.applymatrix((new="" three.matrix4).makerotationx(-math.pi="" 2));var="" three.meshbasicmaterial({wireframe:!0,fog:!1});this.cone="new" three.mesh(a,b);this.add(this.cone);this.update()};three.spotlighthelper.prototype="Object.create(THREE.Object3D.prototype);" three.spotlighthelper.prototype.constructor="THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};" three.spotlighthelper.prototype.update="function(){var" three.vector3,b="new" three.vector3;return="" function(){var="" three.vertexnormalshelper="function(a,b,c,d){this.object=a;this.size=void" 0!="=b?b:1;b=void" three.geometry;a="a.geometry.faces;for(var" e="0,f=a.length;e<f;e++)for(var" g="0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new" three.vector3,new="" three.vector3);three.line.call(this,c,new="" three.linebasicmaterial({color:b,linewidth:d}),three.linepieces);this.matrixautoupdate="!1;this.normalMatrix=new" three.matrix3;this.update()};three.vertexnormalshelper.prototype="Object.create(THREE.Line.prototype);" three.vertexnormalshelper.prototype.constructor="THREE.VertexNormalsHelper;" three.vertexnormalshelper.prototype.update="function(a){var" function(a){a="["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var" d="this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,n=f.length;k<n;k++)for(var" p="f[k],q=0,m=p.vertexNormals.length;q<m;q++){var" t="p.vertexNormals[q];d[h].copy(e[p[a[q]]]).applyMatrix4(g);b.copy(t).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);" b.add(d[h]);h+="1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return" this}}();="" three.vertextangentshelper="function(a,b,c,d){this.object=a;this.size=void" three.vector3),c.vertices.push(new="" three.vertextangentshelper.prototype.constructor="THREE.VertexTangentsHelper;" three.vertextangentshelper.prototype.update="function(a){var" h+="1}this.geometry.verticesNeedUpdate=!0;return" three.wireframehelper="function(a,b){var" a-b},g="["a","b","c"],h=new" three.buffergeometry;if(a.geometry="" three.geometry){for(var="" k="a.geometry.vertices,n=a.geometry.faces,p=0,q=new" uint32array(6*n.length),m="0,t=n.length;m<t;m++)for(var" s="n[m],r=0;3">r;r++){d[0]=s[g[r]];d[1]=s[g[(r+1)%3]];d.sort(f);var u=d.toString();void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++)}d=new Float32Array(6*p);m=0;for(t=p;m<t;m++)for(r=0;2>r;r++)p=
k[q[2*m+r]],g=6*m+3*r,d[g+0]=p.x,d[g+1]=p.y,d[g+2]=p.z;h.addAttribute("position",new THREE.BufferAttribute(d,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){k=a.geometry.attributes.position.array;t=a.geometry.attributes.index.array;n=a.geometry.drawcalls;p=0;0===n.length&&(n=[{count:t.length,index:0,start:0}]);for(var q=new Uint32Array(2*t.length),s=0,v=n.length;s<v;++s)for(var r="n[s].start,u=n[s].count,g=n[s].index,m=r,y=r+u;m<y;m+=3)for(r=0;3">r;r++)d[0]=
g+t[m+r],d[1]=g+t[m+(r+1)%3],d.sort(f),u=d.toString(),void 0===e[u]&&(q[2*p]=d[0],q[2*p+1]=d[1],e[u]=!0,p++);d=new Float32Array(6*p);m=0;for(t=p;m<t;m++)for(r=0;2>r;r++)g=6*m+3*r,p=3*q[2*m+r],d[g+0]=k[p],d[g+1]=k[p+1],d[g+2]=k[p+2]}else for(k=a.geometry.attributes.position.array,p=k.length/3,q=p/3,d=new Float32Array(6*p),m=0,t=q;m<t;m++)for(r=0;3>r;r++)g=18*m+6*r,q=9*m+3*r,d[g+0]=k[q],d[g+1]=k[q+1],d[g+2]=k[q+2],p=9*m+(r+1)%3*3,d[g+3]=k[p],d[g+4]=k[p+1],d[g+5]=k[p+2];h.addAttribute("position",new THREE.BufferAttribute(d,
3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h="e.morphTargets[f].name.match(b);if(h&&1<h.length){var" k="h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f">h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d="this.animationsList[b];if(d.active){var" e="d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time">d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
</c;b++){var></g;f++){var></t;m++)for(r=0;3></t;m++)for(r=0;2></v;++s)for(var></t;m++)for(r=0;2></this.bones.length;c++)this.bones[c].parent></e;c++)b.vertices.push(new></h;g++)a.vertices[e[g]].copy(c)};return></p;n++)this.vertices[n].multiplyscalar(c);this.mergevertices();this.computefacenormals();this.boundingsphere=new></p;n+=3)e(new></d;c++)this.addshape(a[c],b);return></f;e++){var></=--h;){c=h;d=h-1;0></d?1e-10<f&&(a=!0):-1e-10></g?1:-1;for(e=0;e<g;e++)for(f=0;f<z;f++){var></b.length;c++)if(b[c].hastarget(a))return></b;a++){var></r&&(r=1);if("pos"===m)if(this.interpolationtype===three.animationhandler.linear)c.x=u[0]+(v[0]-u[0])*r,c.y=u[1]+(v[1]-u[1])*r,c.z=u[2]+(v[2]-u[2])*r,t=this.weight></this.currenttime&&s.index></this.timescale&&></h;f++)for(var></b;a++){var></this.currenttime&&g.index></a.hierarchy[b].keys.length;c++)for(var></c?0:(math.floor(math.abs(c)></h.length;q++){z=h[q];p=-1;for(m=0;m<n.length;m++)if(g=n[m],e=z.x+":"+z.y+":"+g,void></h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function></=d?[f,h]:></e||e<g)return[];k=n*p-k*q;if(0<k||k<g)return[]}if(0==k)return!g||0!=e&&e!=g?[a]:[];if(k==g)return!g||0!=e&&e!=g?[b]:[];if(0==e)return[d];></=a.x&&a.x<=f.x||f.x<=a.x&&a.x<=></f.y||a.y></d;c++){var></g&&(g=h.z)),p.add(h);a={minx:e,miny:f,maxx:b,maxy:c};q&&(a.maxz=d,a.minz=g);return></f&&(f=h.y),q&&(h.z></e&&(e=h.x),h.y></d;c++)b+=this.curves[c].getlength(),a.push(b);return></a&&(a=1);b=this.getpoint(b);return></k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return></e;m++)if(c=a[g[m]].x,x=a[g[m]].y,!(c===t&&x===s||c===r&&x===u||c===v&&x===y)&&(a=c-t,u=x-s,m=c-r,k=x-u,c-=v,x-=y,m=f*k-z*m,a=w*u-d*a,u=g*x-e*c,-1e-10<=m&&-1e-10<=u&&-1e-10<=a)){m=!1;break></=k&&(k=0);n=k+1;e<=n&&(n=0);p=n+1;e<=p&&(p=0);var></b(a))for(n=0;n<e;n++)g[n]=n;else></s;t++){var></t;n++){var></g;z++)d=r[z],w=d.object,d=d.buffer,k=w.material></m.z&&(m.z=a.z),a.z></m.y&&(m.y=a.y),a.y></m.x&&(m.x=a.x),a.x></f;u++){z=u[u];z.shadowmap||(e=three.linearfilter,a.shadowmaptype===three.pcfsoftshadowmap&&></b;q++)m=h[q],c[m]=f.getuniformlocation(g,m);this.uniforms=c;q="position></r;m++)if(n[m]){var></d;c++){var></ma.length;a++)ma[a]=0};zc();this.context=l;var></b.anisotropy||b.__oldanisotropy)&&(l.texparameterf(a,c.texture_max_anisotropy_ext,></yb;rb++)yb=></ya&&(l.bindbuffer(l.array_buffer,v.__webgluv2buffer),l.bufferdata(l.array_buffer,ob,z))}if(sa){w=0;for(f=v.length;w<f;w++)db[xa]=na,db[xa+1]=na+1,db[xa+2]=na+></mb&&(l.bindbuffer(l.array_buffer,v.__webgluvbuffer),l.bufferdata(l.array_buffer,wb,z))}if(ma&&db){w=0;for(f=v.length;w<f;w++)if(i=v[w],u=db[i],void></f;w++)if(i=v[w],t=wa[i],void></d;g++){h=f[g];if(void></c.facevertexuvs.length&&(a.__uv2array=new></b;a++)c=this.lensflares[a],c.x=this.positionscreen.x+d*c.distance,c.y=this.positionscreen.y+e*c.distance,c.wantedrotation=c.x*math.pi*.25,c.rotation+=.25*(c.wantedrotation-c.rotation)};three.scene=function(){three.object3d.call(this);this.type="scene";this.overridematerial=this.fog=null;this.autoupdate=!0};three.scene.prototype=object.create(three.object3d.prototype);></e;d++)this.objects[d].object.visible=!1}}}();></f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};></this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.bonematrices=new></y;v++)if(c=k.faces[v],n=!0===s?r[c.materialindex]:this.material,void></x;k+=3,s+=9)p=k,q=k+1,m=k+2,d.fromarray(r,s),e.fromarray(r,s+3),f.fromarray(r,s+6),f=n.side===three.backside?b.intersecttriangle(f,e,d,!0):b.intersecttriangle(d,e,f,n.side!==three.doubleside),null!==f&&(f.applymatrix4(this.matrixworld),z=g.ray.origin.distanceto(f),z<t||z<g.near||z></this.geometry.morphtargets.length){this.morphtargetbase=-1;this.morphtargetforcedorder=[];this.morphtargetinfluences=[];this.morphtargetdictionary={};for(var></d.near||c></k-1;g+=q)c=b.distancesqtosegment(h[g],h[g+1],p,n),c></d.near||c></m.length></d.near||c></c;b++)a.materials.push(this.materials[b].tojson());return></g;d+=b)c.skinweights.push(new></f;d++)for(u=a.uvs[d],c.facevertexuvs[d][h]=[],g=0;3></c;b+=2){var></=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.facevertexuvs.length;c<g;c++)this.facevertexuvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return></d;c++)0<c&&(a+=b[c].distanceto(b[c-1])),this.linedistances[c]=a},computeboundingbox:function(){null===this.boundingbox&&(this.boundingbox=new></g.length;h++,f++)e[f]=g[h];return></r&&r<k.index&&(q[p+1]=></k.index?(q[2*r]=s,q[2*r+1]=-1,n++):(q[2*r]=s,q[2*r+1]=m[s]);if(g+p></g;p++)k[p]=new></d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};></c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return></a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getpoint=function(a){e=(this.points.length-1)*a;f=math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f></=b)return></b?b:a},maplinear:function(a,b,c,d,e){return></b?b:a></f?void></b},intersectline:function(){var></a||0></f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var></a)return!1;return!0},intersectsbox:function(){var></=></g;f++)e=math.max(e,d.distancetosquared(b[f]));this.radius=math.sqrt(e);return></=c?c:d,b)},intersecttriangle:function(){var></d||d!==d)d=g;return></d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*></=a?a:null},intersectplane:function(a,b){var></=t?(h=1></m?(d=k*p-n,e=k*n-p,t=h*m,0<=d?e></arguments.length&&console.error("three.matrix3:></this.min.z||a.min.z></this.min.y||a.min.y></=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getparameter:function(a,b){return(b||new></this.min.z||a.z></this.min.y||a.y></c;b++)this.expandbypoint(a[b]);return></this.min.y||a.min.y></=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getparameter:function(a,b){return(b||new></this.min.y||a.y></c;b++)this.expandbypoint(a[b]);return></a.w?this.w=a.w:this.w></a.z?this.z=a.z:this.z></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);></a.z?this.z=a.z:this.z></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return></=g)return></d?6:0);break;case></16^255*this.g<<></2></c&&(c-=1);return></a?1:0});three.mouse={left:0,middle:1,right:2};three.cullfacenone=0;three.cullfaceback=1;three.cullfacefront=2;three.cullfacefrontback=3;three.frontfacedirectioncw=0;three.frontfacedirectionccw=1;three.basicshadowmap=0;three.pcfshadowmap=1;three.pcfsoftshadowmap=2;three.frontside=0;three.backside=1;three.doubleside=2;three.noshading=0;>